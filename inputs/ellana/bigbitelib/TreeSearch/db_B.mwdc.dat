# -*- mode: Text -*-
#-----------------------------------------------------------
#  Chamber configuration
#-----------------------------------------------------------

# Plane configuration. One string of the all plane names.
# The names are case sensitive. If the last character is
# a "p", it indicates a staggered plane that is to be paired
# with the correponding non-p one. Optional plane description
# text may be put in each plane's section.

B.mwdc.planeconfig = u1 u1p x1 x1p v1 v1p \
                     u2 x2 v2 \
                     u3 u3p x3 x3p v3 v3p
B.mwdc.search_depth = 10
B.mwdc.maxslope = 2.5

# Wire angles. Specify the angle of the _normal_ to the wires, pointing
# along the direction of increasing wire number. Positive angles mean 
# rotation from x towards y (so the y-axis is at +90deg).
B.mwdc.u.angle = 30.0
B.mwdc.v.angle = -30.0
B.mwdc.x.angle = 0.0

# Enable support for event display
B.mwdc.event_display = 1

# "Crate map" for the MWDC. Specifies DAQ module configuration.
# Allows mixing of Fastbus/VME and modules with different resolutions.
# Since usually a range of slots is filled with identical modules, we define
# slot ranges. If individual modules within a range are different, append 
# their definition at the end; they will override earlier definitions.
#
# FIXME: naturally, this should be part of the decoder's crate map
#
# Each rows is:    crate slot_lo slot_hi model# resol   nchan
#                                               (ps/ch)
B.mwdc.cratemap =  3     6       21      1877   500     96  \
                   4     4       11      1877   500     96  \
                   4     17      24      1877   500     96

#-----------------------------------------------------------
#   Global defaults
#    - can be overridden for individual planes
#
#   Note: TDC offsets are in ns
#-----------------------------------------------------------

B.mwdc.wire.spacing = 0.01
# B.mwdc.xp.res = 2.5e-04
B.mwdc.drift.min = 0
B.mwdc.drift.max = 175
B.mwdc.timecut = 1
B.mwdc.pairsonly = 0
B.mwdc.maxmiss = 1
B.mwdc.req1of2 = 1
B.mwdc.u2.required = 1
B.mwdc.v2.required = 1
B.mwdc.x2.required = 1
B.mwdc.chi2_conflevel = 1e-4
#B.mwdc.maxhits = 20
B.mwdc.maxpat  = 500

#-----------------------------------------------------------
#  TanH fit time-to-distance conversion. 
#  The parameters are drift vel (m/s), c0 (m), c2 (m/s^2),
#  and t0 (s). Data from S. Riordan's thesis, CMU, 2008
#  This one does better for large drift distances
#-----------------------------------------------------------

B.mwdc.ttd.converter = TanhFitTTD
B.mwdc.ttd.param = 5.02e4 5e-3 1.95e11 6.1e-9

#-----------------------------------------------------------
#   U PLANES
#-----------------------------------------------------------
B.mwdc.u1.description = U1 plane
B.mwdc.u1.detmap = \
  3  18  94  80  -1 \	
  4  5   80  95  -1 \	
  4  9   80  95  -1 \	
  4  19  80  95  -1 \	
  3  18  47  32  -1 \	
  4  4   32  47  -1 \	
  3  13  47  32  -1 \	
  3  9   47  32  -1 \	
  4  18  32  45  -1
B.mwdc.u1.nwires    = 141
B.mwdc.u1.position  = 0.0 0.0 0.0
B.mwdc.u1.size      = 1.4 0.35 0.0
B.mwdc.u1.wire.pos  = -0.7025
B.mwdc.u1.xp.res    = 385e-6
B.mwdc.u1.tdc.offsets = \
 758 \
 758 758 758 758 758 758 758 758 758 758 \
 758 758 758 758 758 758 758 758 758 758 \
 758 758 758 758 758 758 758 758 758 758 \
 759 759 759 759 759 759 759 759 759 759 \
 759 759 759 759 759 759 764 764 764 764 \
 764 764 764 764 764 764 764 764 764 764 \
 764 764 747 747 747 747 747 747 747 747 \
 747 747 747 747 747 747 747 747 752 752 \
 752 752 752 752 752 752 752 752 752 752 \
 752 752 752 752 745 745 745 745 745 745 \
 745 745 745 745 745 745 745 745 745 745 \
 755 755 755 755 755 755 755 755 755 755 \
 755 755 755 755 755 755 760 760 760 760 \
 760 760 760 760 760 760 760 760 760 760
#-----------------------------------------------------------
B.mwdc.u1p.detmap = \
3	16	93	80	-1 \
4	7	80	95	-1 \
4	17	80	95	-1 \
3	6	95	80	-1 \
4	22	80	95	-1 \
3	15	47	32	-1 \
3	11	47	32	-1 \
3	7	47	32	-1 \
4	20	32	46	-1
B.mwdc.u1p.nwires    = 141
B.mwdc.u1p.position  = 0.0  0.0  0.0064
B.mwdc.u1p.size      = 1.4  0.35 0.0
B.mwdc.u1p.wire.pos  = -0.6975
B.mwdc.u1p.xp.res    = 353e-6
B.mwdc.u1p.tdc.offsets = \
 758 \
 758 758 758 758 758 758 758 758 758 758 \
 758 758 758 760 760 760 760 760 760 760 \
 760 760 760 760 760 760 760 760 760 767 \
 767 767 767 767 767 767 767 767 767 767 \
 767 767 767 767 767 754 754 754 754 754 \
 754 754 754 754 754 754 754 754 754 754 \
 754 764 764 764 764 764 764 764 764 764 \
 764 764 764 764 764 764 764 745 745 745 \
 745 745 745 745 745 745 745 745 745 745 \
 745 745 745 750 750 750 750 750 750 750 \
 750 750 750 750 750 750 750 750 750 754 \
 754 754 754 754 754 754 754 754 754 754 \
 754 754 754 754 754 759 759 759 759 759 \
 759 759 759 759 759 759 759 759 759 759
#-----------------------------------------------------------
B.mwdc.u2.detmap = \
3	17	75	64	-1 \
3	9	79	64	-1 \
4	9	64	79	-1 \
4	11	64	79	-1 \
4	18	64	79	-1 \
4	19	64	79	-1 \
3	16	31	16	-1 \
4	20	64	79	-1 \
3	15	31	16	-1 \
3	14	31	16	-1 \
3	12	31	16	-1 \
3	11	31	16	-1 \
4	19	16	27	-1
B.mwdc.u2.nwires    = 200
B.mwdc.u2.position  = 0.0  0.0  0.3598
B.mwdc.u2.size      = 2.0  0.5  0.0
B.mwdc.u2.wire.pos  = -0.99271
B.mwdc.u2.xp.res    = 483e-6
B.mwdc.u2.tdc.offsets = \
 999 \
 999 999 999 999 999 999 999 999 999 999 \
 999 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 782 782 782 \
 782 782 782 782 782 782 782 782 782 782 \
 782 782 782 778 778 778 778 778 778 778 \
 778 778 778 778 778 778 778 778 778 782 \
 782 782 782 782 782 782 782 782 782 782 \
 782 782 782 782 782 780 780 780 780 780 \
 780 780 780 780 780 780 780 780 780 780 \
 780 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 775 775 778 778 778 \
 778 778 778 778 778 778 778 778 778 778 \
 778 778 778 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 777 777 777 777 777 \
 777 777 777 777 777 777 777 777 777 777 \
 777 774 774 774 774 774 774 774 774 774 \
 774 774 774 774 774 774 774 999 999 999 \
 999 999 999 999 999 999 999 999 999
#-----------------------------------------------------------
B.mwdc.u3.detmap = \
4	21	59	48	-1 \
4	10	63	48	-1 \
3	20	64	79	-1 \
3	8	48	63	-1 \
3	12	48	63	-1 \
3	16	48	63	-1 \
4	22	15	0	-1 \
3	20	48	63	-1 \
4	18	15 	0	-1 \
4	9	15	0	-1 \
4	5	15	0	-1 \
4	23	31	16	-1 \
3	7	0	11	-1
B.mwdc.u3.type = v              # the rear chamber is reversed, so u<->v
B.mwdc.u3.nwires    = 200
B.mwdc.u3.position  = 0.0  0.0  0.74435
B.mwdc.u3.size      = 2.0  0.5  0.0
B.mwdc.u3.wire.pos  = -1.0023
B.mwdc.u3.xp.res    = 324e-6
B.mwdc.u3.tdc.offsets = \
 780 \
 780 780 780 780 780 780 780 780 780 780 \
 780 770 770 770 770 770 770 770 770 770 \
 770 770 770 770 770 770 770 774 774 774 \
 774 774 774 774 774 774 774 774 774 774 \
 774 774 774 768 768 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 774 774 774 774 774 \
 774 774 774 774 774 774 774 774 774 774 \
 774 777 777 777 777 777 777 777 777 777 \
 777 777 777 777 777 777 777 775 775 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 776 776 767 \
 767 767 767 767 767 767 767 767 767 767 \
 767 767 767 767 767 765 765 765 765 765 \
 765 765 765 765 765 765 765 765 765 765 \
 765 769 769 769 769 769 769 769 769 769 \
 769 769 769 769 769 769 769 767 767 767 \
 767 767 767 767 767 767 767 767 767
#-----------------------------------------------------------
B.mwdc.u3p.detmap = \
4	23	59	48	-1 \
3	18	64	79	-1 \
3	6	48	63	-1 \
3	10	48	63	-1 \
3	14	48	63	-1 \
4	24	15 	0	-1 \
3	18	48	63	-1 \
4	20	15	0	-1 \
4	11	15	0	-1 \
4	7	15	0	-1 \
4	24	31	16	-1 \
3	15	0	15	-1 \
3	9	0	11	-1
B.mwdc.u3p.type = v              # the rear chamber is reversed, so u<->v
B.mwdc.u3p.nwires    = 200
B.mwdc.u3p.position  = 0.0  0.0  0.73845   #ummm.. z(u3p) < z(u3)?!?
B.mwdc.u3p.size      = 2.0  0.5  0.0
B.mwdc.u3p.wire.pos  = -0.9973
B.mwdc.u3p.xp.res    = 356e-6
B.mwdc.u3p.tdc.offsets = \
 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 775 775 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 768 768 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 780 780 780 780 780 \
 780 780 780 780 780 780 780 780 780 780 \
 780 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 777 777 777 \
 777 777 777 777 777 777 777 777 777 777 \
 777 777 777 768 768 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 764 \
 764 764 764 764 764 764 764 764 764 764 \
 764 764 764 764 764 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 771 771 \
 771 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 764 764 764 \
 764 764 764 764 764 764 764 764 764
#-----------------------------------------------------------
#   X PLANES
#-----------------------------------------------------------
B.mwdc.x1.detmap = \
3	20	94	80	-1 \
3	14	95	80	-1 \
3	11	95	80	-1 \
3	8	95	80	-1 \
3	20	47	32	-1 \
4	5	32	47	-1 \
4	7	32	47	-1 \
4	10	32	47	-1 \
4	23	32	46	-1
B.mwdc.x1.nwires    = 142
B.mwdc.x1.position  = 0.0  0.0  0.0128
B.mwdc.x1.size      = 1.4  0.35 0.0
B.mwdc.x1.wire.pos  = -0.7025
B.mwdc.x1.xp.res    = 289e-6
B.mwdc.x1.tdc.offsets = \
 754 \
 754 754 754 754 754 754 754 754 754 754 \
 754 754 754 754 755 755 755 755 755 755 \
 755 755 755 755 755 755 755 755 755 755 \
 755 755 755 755 755 755 755 755 755 755 \
 755 755 755 755 755 755 753 753 753 753 \
 753 753 753 753 753 753 753 753 753 753 \
 753 753 746 746 746 746 746 746 746 746 \
 746 746 746 746 746 746 746 746 751 751 \
 751 751 751 751 751 751 751 751 751 751 \
 751 751 751 751 751 751 751 751 751 751 \
 751 751 751 751 751 751 751 751 751 751 \
 755 755 755 755 755 755 755 755 755 755 \
 755 755 755 755 755 755 765 765 765 765 \
 765 765 765 765 765 765 765 765 765 765 \
 765
#-----------------------------------------------------------
B.mwdc.x1p.detmap = \
4	4	94	80	-1 \
4	10	95	80	-1 \
4	18	95	80	-1 \
4	21	95	80	-1 \
3	7	80	95	-1 \
3	16	32	47	-1 \
3	14	32	47	-1 \
3	12	32	47	-1 \
3	6	32	46	-1
B.mwdc.x1p.nwires    = 142
B.mwdc.x1p.position  = 0.0  0.0  0.022375
B.mwdc.x1p.size      = 1.4  0.35 0.0
B.mwdc.x1p.wire.pos  = -0.7075
B.mwdc.x1p.xp.res    = 358e-6
B.mwdc.x1p.tdc.offsets = \
 757 \
 757 757 757 757 757 757 757 757 757 757 \
 757 757 757 757 757 757 757 757 757 757 \
 757 757 757 757 757 757 757 757 757 757 \
 761 761 761 761 761 761 761 761 761 761 \
 761 761 761 761 761 761 763 763 763 763 \
 763 763 763 763 763 763 763 763 763 763 \
 763 763 753 753 753 753 753 753 753 753 \
 753 753 753 753 753 753 753 753 751 751 \
 751 751 751 751 751 751 751 751 751 751 \
 751 751 751 751 738 738 738 738 738 738 \
 738 738 738 738 738 738 738 738 738 738 \
 743 743 743 743 743 743 743 743 743 743 \
 743 743 743 743 743 743 755 755 755 755 \
 755 755 755 755 755 755 755 755 755 755 \
 755
#-----------------------------------------------------------
B.mwdc.x2.detmap = \
3	14	76	64	-1 \
3	11	79	64	-1 \
3	8	79	64	-1 \
3	6	79	64	-1 \
3	20	31	16	-1 \
3	19	31	16	-1 \
3	17	31	16	-1 \
4	21	64	79	-1 \
4	4	16	31	-1 \
4	6	16	31	-1 \
4	7	16	31	-1 \
4	9	16	31	-1 \
4	11	16	28	-1
B.mwdc.x2.nwires    = 202
B.mwdc.x2.position  = 0.0  0.0  0.3662
B.mwdc.x2.size      = 2.0  0.5  0.0
B.mwdc.x2.wire.pos  = -0.9975
B.mwdc.x2.xp.res    = 375e-6
B.mwdc.x2.tdc.offsets = \
 999 \
 999 999 999 999 999 999 999 999 999 999 \
 999 999 777 777 777 777 777 777 777 777 \
 777 777 777 777 777 777 777 777 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 775 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 769 769 769 769 769 769 \
 769 769 769 769 769 769 769 769 769 769 \
 766 766 766 766 766 766 766 766 766 766 \
 766 766 766 766 766 766 769 769 769 769 \
 769 769 769 769 769 769 769 769 769 769 \
 769 769 771 771 771 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 999 999 \
 999 999 999 999 999 999 999 999 999 999 \
 999
#-----------------------------------------------------------
B.mwdc.x3.detmap = \
4	19	60	48	-1 \
4	17	63	48	-1 \
4	8	63	48	-1 \
4	6	63	48	-1 \
4	4	63	48	-1 \
4	6	79	64	-1 \
3	10	16	31	-1 \
3	8	16	31	-1 \
3	21	0	15	-1 \
3	19	0	15	-1 \
3	17	0	15	-1 \
3	13	0	15	-1 \
3	11	0	12	-1
B.mwdc.x3.nwires    = 202
B.mwdc.x3.position  = 0.0  0.0  0.73155
B.mwdc.x3.size      = 2.0  0.5  0.0
B.mwdc.x3.wire.pos  = -1.01358
B.mwdc.x3.xp.res    = 323e-6
B.mwdc.x3.tdc.offsets = \
 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 770 770 \
 770 770 770 770 770 770 770 770 770 770 \
 770 770 770 770 768 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 770 770 770 770 770 770 770 770 770 770 \
 770 770 770 770 770 770 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 768 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 771 771 \
 771 771 771 771 771 771 771 771 771 771 \
 771 771 771 771 778 778 778 778 778 778 \
 778 778 778 778 778 778 778 778 778 778 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 771 771 771 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 767 767 \
 767 767 767 767 767 767 767 767 767 767 \
 767
#-----------------------------------------------------------
B.mwdc.x3p.detmap = \
3	7	60	48	-1 \
3	9	63	48	-1 \
3	13	63	48	-1 \
3	15 	63	48	-1 \
3	17	63	48	-1 \
3	19	63	48	-1 \
3	21	63	48	-1 \
4	23	0	15	-1 \
4	21	0	15	-1 \
4	19	0	15	-1 \
4	17	0	15	-1 \
4	8	0	15	-1 \
4	6	0	12	-1
B.mwdc.x3p.nwires    = 202
B.mwdc.x3p.position  = 0.0  0.0  0.7178   # urgh:  z< z_previous!
B.mwdc.x3p.size      = 2.0  0.5 0.0
B.mwdc.x3p.wire.pos  = -1.00851
B.mwdc.x3p.xp.res    = 348e-6
B.mwdc.x3p.tdc.offsets = \
 769 \
 769 769 769 769 769 769 769 769 769 769 \
 769 769 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 775 775 775 775 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 778 778 778 778 778 778 778 778 \
 778 778 778 778 778 778 778 778 779 779 \
 779 779 779 779 779 779 779 779 779 779 \
 779 779 779 779 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 775 775 775 775 775 775 775 775 775 775 \
 775 775 775 775 775 775 774 774 774 774 \
 774 774 774 774 774 774 774 774 774 774 \
 774 774 765 765 765 765 765 765 765 765 \
 765 765 765 765 765 765 765 765 763 763 \
 763 763 763 763 763 763 763 763 763 763 \
 763
#-----------------------------------------------------------
#   V PLANES
#-----------------------------------------------------------
B.mwdc.v1.detmap = \
4	6	94	80	-1 \
3	21	80	95	-1 \
3	17	80	95	-1 \
3	12	80	95	-1 \
4	6	47	32	-1 \
3	19	32	47	-1 \
4	17	47	32	-1 \
4	22	47	32	-1 \
3	10	32	45	-1
B.mwdc.v1.nwires    = 141
B.mwdc.v1.position  = 0.0  0.0  0.028775
B.mwdc.v1.size      = 1.4  0.35 0.0
B.mwdc.v1.wire.pos  = -0.7025
B.mwdc.v1.xp.res    = 338e-6
B.mwdc.v1.tdc.offsets = \
 762 \
 762 762 762 762 762 762 762 762 762 762 \
 762 762 762 762 760 760 760 760 760 760 \
 760 760 760 760 760 760 760 760 760 760 \
 757 757 757 757 757 757 757 757 757 757 \
 757 757 757 757 757 757 754 754 754 754 \
 754 754 754 754 754 754 754 754 754 754 \
 754 754 753 753 753 753 753 753 753 753 \
 753 753 753 753 753 753 753 753 751 751 \
 751 751 751 751 751 751 751 751 751 751 \
 751 751 751 751 765 765 765 765 765 765 \
 765 765 765 765 765 765 765 765 765 765 \
 770 770 770 770 770 770 770 770 770 770 \
 770 770 770 770 770 770 750 750 750 750 \
 750 750 750 750 750 750 750 750 750 750
#-----------------------------------------------------------
B.mwdc.v1p.detmap = \
4	8	93	80	-1 \
3	19	80	95	-1 \
3	15	80	95	-1 \
4	23	95	80	-1 \
3	10	80	95	-1 \
4	9	47	32	-1 \
4	19	47	32	-1 \
4	24	47	32	-1 \
3	8	32	46	-1
B.mwdc.v1p.nwires    = 141
B.mwdc.v1p.position  = 0.0  0.0  0.035175
B.mwdc.v1p.size      = 1.4  0.35 0.0
B.mwdc.v1p.wire.pos  = -0.6975
B.mwdc.v1p.xp.res    = 299e-6
B.mwdc.v1p.tdc.offsets = \
 760 \
 760 760 760 760 760 760 760 760 760 760 \
 760 760 760 760 760 760 760 760 760 760 \
 760 760 760 760 760 760 760 760 760 755 \
 755 755 755 755 755 755 755 755 755 755 \
 755 755 755 755 755 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 753 753 753 753 753 753 753 753 753 \
 753 753 753 753 753 753 753 756 756 756 \
 756 756 756 756 756 756 756 756 756 756 \
 756 756 756 761 761 761 761 761 761 761 \
 761 761 761 761 761 761 761 761 761 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 755 755 755 755 755 \
 755 755 755 755 755 755 755 755 755 755
#-----------------------------------------------------------
B.mwdc.v2.detmap = \
4	10	75	64	-1 \
4	17	79	64	-1 \
3	16	64	79	-1 \
3	10	64	79	-1 \
3	7	64	79	-1 \
3	21	16	31	-1 \
4	22	79	64	-1 \
3	18	16	31	-1 \
4	5	31	16	-1 \
4	8	31	16	-1 \
4	10	31	16	-1 \
4	18	31	16	-1 \
3	13	16	27	-1
B.mwdc.v2.nwires    = 200
B.mwdc.v2.position  = 0.0  0.0  0.3825
B.mwdc.v2.size      = 2.0  0.5  0.0
B.mwdc.v2.wire.pos  = -0.9939
B.mwdc.v2.xp.res    = 388e-6
B.mwdc.v2.tdc.offsets = \
 999 \
 999 999 999 999 999 999 999 999 999 999 \
 999 785 785 785 785 785 785 785 785 785 \
 785 785 785 785 785 785 785 780 780 780 \
 780 780 780 780 780 780 780 780 780 780 \
 780 780 780 777 777 777 777 777 777 777 \
 777 777 777 777 777 777 777 777 777 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 776 776 776 776 776 776 776 776 776 \
 776 779 779 779 779 779 779 779 779 779 \
 779 779 779 779 779 779 779 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 768 768 767 767 767 767 767 767 767 \
 767 767 767 767 767 767 767 767 767 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 999 999 999 \
 999 999 999 999 999 999 999 999 999
#-----------------------------------------------------------
B.mwdc.v3.detmap = \
3	21	75	64	-1 \
3	11	63	48	-1 \
4	22	48	63	-1 \
4	18	48	63	-1 \
4	9	48	63	-1 \
4	5	48	63	-1 \
3	6	31	16	-1 \
4	4	64	79	-1 \
3	18	15	0	-1 \
3	14	15	0	-1 \
3	10	15	0	-1 \
3	6	15	0	-1 \
4	22	16	27	-1
B.mwdc.v3.type = u    # The rear chamber is reversed, so u<->v
B.mwdc.v3.nwires    = 200
B.mwdc.v3.position  = 0.0  0.0  0.7109
B.mwdc.v3.size      = 2.0  0.5  0.0
B.mwdc.v3.wire.pos  = -1.00305
B.mwdc.v3.xp.res    = 348e-6
B.mwdc.v3.tdc.offsets = \
 780 \
 780 780 780 780 780 780 780 780 780 780 \
 780 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 774 774 774 \
 774 774 774 774 774 774 774 774 774 774 \
 774 774 774 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 769 \
 769 769 769 769 769 769 769 769 769 769 \
 769 769 769 769 769 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 772 772 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 768 768 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 773 773 770 770 770 770 770 \
 770 770 770 770 770 770 770 770 770 770 \
 770 767 767 767 767 767 767 767 767 767 \
 767 767 767 767 767 767 767 770 770 770 \
 770 770 770 770 770 770 770 770 770
#-----------------------------------------------------------
B.mwdc.v3p.detmap = \
3	19	75	64	-1 \
4	24	48	63	-1 \
4	20	48	63	-1 \
4	11	48	63	-1 \
4	7	48	63	-1 \
3	9	31	16	-1 \
4	8	64	79	-1 \
3	20	15	0	-1 \
3	16	15	0	-1 \
3	12	15	0	-1 \
3	8	15	0	-1 \
4	10	0	15	-1 \
4	4	0	11	-1
B.mwdc.v3p.type = u    # The rear chamber is reversed, so u<->v
B.mwdc.v3p.nwires    = 200
B.mwdc.v3p.position  = 0.0  0.0  0.705   #NB: z < z_previous
B.mwdc.v3p.size      = 2.0  0.5  0.0
B.mwdc.v3p.wire.pos  = -0.99805
B.mwdc.v3p.xp.res    = 335e-6
B.mwdc.v3p.tdc.offsets = \
 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 777 777 777 777 777 777 777 777 777 \
 777 777 777 777 777 777 777 771 771 771 \
 771 771 771 771 771 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 771 770 \
 770 770 770 770 770 770 770 770 770 770 \
 770 770 770 770 770 772 772 772 772 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 769 769 769 769 769 769 769 769 769 \
 769 769 769 769 769 769 769 773 773 773 \
 773 773 773 773 773 773 773 773 773 773 \
 773 773 773 771 771 771 771 771 771 771 \
 771 771 771 771 771 771 771 771 771 772 \
 772 772 772 772 772 772 772 772 772 772 \
 772 772 772 772 772 768 768 768 768 768 \
 768 768 768 768 768 768 768 768 768 768 \
 768 764 764 764 764 764 764 764 764 764 \
 764 764 764 764 764 764 764 763 763 763 \
 763 763 763 763 763 763 763 763 763
#-----------------------------------------------------------
