//
// File generated by /apps/root/PRO/root/bin/rootcint at Tue Aug 23 12:25:27 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BigBiteDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BigBiteDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::TObject*, ::TObject* > pairlETObjectmUcOTObjectmUgR;
      #else
      class pairlETObjectmUcOTObjectmUgR  {
         public:
         //friend XX;
         ::TObject* first; //
         ::TObject* second; //
      };
      #endif

      namespace TreeSearch {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TreeSearch::NodeDescriptor NodeDescriptor;
      #else
      class NodeDescriptor  {
         public:
         //friend XX;
         ::TreeSearch::Link* link; //Linked-list node pointing to a base pattern
         ::TreeSearch::Pattern* parent; //Parent node
         unsigned short shift; //Shift of the base pattern to its actual position
         bool mirrored; //Pattern is mirrored
         unsigned char depth; //Current recursion depth
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::TreeSearch::NodeDescriptor, ::TreeSearch::HitSet > pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR;
      #else
      class pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR  {
         public:
         //friend XX;
         ::TreeSearch::NodeDescriptor first; //
         ::TreeSearch::HitSet second; //
      };
      #endif

      namespace TreeSearch {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TreeSearch::TreeParam_t TreeParam_t;
      #else
      class TreeParam_t  {
         public:
         //friend XX;
         unsigned int fMaxdepth; //Depth of tree
         bool fNormalized; //maxslope and zpos are normalized
         double fWidth; //Physical detector width (needed in Hitpattern)
         double fMaxslope; //Max slope (dx/dz) of tracks
         vector< Double_t > fZpos; //z-positions of pattern planes
      };
      #endif
      } 
      namespace TreeSearch {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TreeSearch::PatternGenerator PatternGenerator;
      #else
      class PatternGenerator  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TreeSearch::PatternGenerator::Statistics_t Statistics_t;
         #else
         class Statistics_t  {
            public:
            //friend XX;
            unsigned int nPatterns; //
            unsigned int nLinks; //
            unsigned int nBytes; //
            unsigned int MaxChildListLength; //
            unsigned int nHashBytes; //
            G__uint64 nAllPatterns; //
            double BuildTime; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~PatternGenerator() throw() {};
      };
      #endif
      } 
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::THaHe3SpinModule THaHe3SpinModule;
      #else
      class THaHe3SpinModule  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::THaHe3SpinModule::EHe3Spin EHe3Spin;
         #else
         enum EHe3Spin  {
         };
         #endif

         typedef ::THaHe3SpinModule::EHe3Spin EHe3Spin;
         // To force the creation of a virtual table, throw just in case.
         virtual ~THaHe3SpinModule() throw() {};
         EHe3Spin fSpinState; //-1 = Spin AntiParallel to Holding Field; 0 = Undetermined ; 1 = Spin Parallel to Field.
         bool fSpinStateValid; //Whether the spin state specified is valid
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::THaADCHe3Spin THaADCHe3Spin;
      #else
      class THaADCHe3Spin  :  public ::THaDetector,  public ::THaHe3SpinModule {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::THaADCHe3Spin::ADCStateBound ADCStateBound;
         #else
         class ADCStateBound  {
            public:
            //friend XX;
            double UpBound; //
            double LowBound; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::THaADCHe3Spin::ChanDef_t ChanDef_t;
         #else
         class ChanDef_t  {
            public:
            //friend XX;
            int roc; //ROC to read out
            int slot; //Slot of module
            int chan; //Channel within module
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~THaADCHe3Spin() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void THaOptics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOptics(void *p);
   static void deleteArray_THaOptics(void *p);
   static void destruct_THaOptics(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOptics*)
   {
      ::THaOptics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOptics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOptics", ::THaOptics::Class_Version(), "./THaOptics.h", 57,
                  typeid(::THaOptics), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOptics::Dictionary, isa_proxy, 4,
                  sizeof(::THaOptics) );
      instance.SetDelete(&delete_THaOptics);
      instance.SetDeleteArray(&deleteArray_THaOptics);
      instance.SetDestructor(&destruct_THaOptics);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOptics*)
   {
      return GenerateInitInstanceLocal((::THaOptics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOptics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBigBite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaBigBite(void *p);
   static void deleteArray_THaBigBite(void *p);
   static void destruct_THaBigBite(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBigBite*)
   {
      ::THaBigBite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBigBite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBigBite", ::THaBigBite::Class_Version(), "./THaBigBite.h", 86,
                  typeid(::THaBigBite), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBigBite::Dictionary, isa_proxy, 4,
                  sizeof(::THaBigBite) );
      instance.SetDelete(&delete_THaBigBite);
      instance.SetDeleteArray(&deleteArray_THaBigBite);
      instance.SetDestructor(&destruct_THaBigBite);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBigBite*)
   {
      return GenerateInitInstanceLocal((::THaBigBite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBigBite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace TreeSearch {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TreeSearch_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TreeSearch", 0 /*version*/, "./Helper.h", 18,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TreeSearch_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TreeSearch_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void TreeSearchcLcLMWDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLMWDC(void *p);
   static void deleteArray_TreeSearchcLcLMWDC(void *p);
   static void destruct_TreeSearchcLcLMWDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::MWDC*)
   {
      ::TreeSearch::MWDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::MWDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::MWDC", ::TreeSearch::MWDC::Class_Version(), "./MWDC.h", 38,
                  typeid(::TreeSearch::MWDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::MWDC::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::MWDC) );
      instance.SetDelete(&delete_TreeSearchcLcLMWDC);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLMWDC);
      instance.SetDestructor(&destruct_TreeSearchcLcLMWDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::MWDC*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::MWDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::MWDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaTriggerPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaTriggerPlane(void *p);
   static void deleteArray_THaTriggerPlane(void *p);
   static void destruct_THaTriggerPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaTriggerPlane*)
   {
      ::THaTriggerPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaTriggerPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaTriggerPlane", ::THaTriggerPlane::Class_Version(), "./THaTriggerPlane.h", 74,
                  typeid(::THaTriggerPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaTriggerPlane::Dictionary, isa_proxy, 4,
                  sizeof(::THaTriggerPlane) );
      instance.SetDelete(&delete_THaTriggerPlane);
      instance.SetDeleteArray(&deleteArray_THaTriggerPlane);
      instance.SetDestructor(&destruct_THaTriggerPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaTriggerPlane*)
   {
      return GenerateInitInstanceLocal((::THaTriggerPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaTriggerPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBigBiteTpMwdc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaBigBiteTpMwdc(void *p);
   static void deleteArray_THaBigBiteTpMwdc(void *p);
   static void destruct_THaBigBiteTpMwdc(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBigBiteTpMwdc*)
   {
      ::THaBigBiteTpMwdc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBigBiteTpMwdc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBigBiteTpMwdc", ::THaBigBiteTpMwdc::Class_Version(), "./THaBigBiteTpMwdc.h", 52,
                  typeid(::THaBigBiteTpMwdc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBigBiteTpMwdc::Dictionary, isa_proxy, 4,
                  sizeof(::THaBigBiteTpMwdc) );
      instance.SetDelete(&delete_THaBigBiteTpMwdc);
      instance.SetDeleteArray(&deleteArray_THaBigBiteTpMwdc);
      instance.SetDestructor(&destruct_THaBigBiteTpMwdc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBigBiteTpMwdc*)
   {
      return GenerateInitInstanceLocal((::THaBigBiteTpMwdc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBigBiteTpMwdc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void BBDecData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BBDecData(void *p = 0);
   static void *newArray_BBDecData(Long_t size, void *p);
   static void delete_BBDecData(void *p);
   static void deleteArray_BBDecData(void *p);
   static void destruct_BBDecData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BBDecData*)
   {
      ::BBDecData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BBDecData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BBDecData", ::BBDecData::Class_Version(), "./BBDecData.h", 20,
                  typeid(::BBDecData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::BBDecData::Dictionary, isa_proxy, 4,
                  sizeof(::BBDecData) );
      instance.SetNew(&new_BBDecData);
      instance.SetNewArray(&newArray_BBDecData);
      instance.SetDelete(&delete_BBDecData);
      instance.SetDeleteArray(&deleteArray_BBDecData);
      instance.SetDestructor(&destruct_BBDecData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BBDecData*)
   {
      return GenerateInitInstanceLocal((::BBDecData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BBDecData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticscLcLTOpticsDir_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticscLcLTOpticsDir(void *p);
   static void deleteArray_THaOpticscLcLTOpticsDir(void *p);
   static void destruct_THaOpticscLcLTOpticsDir(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOptics::TOpticsDir*)
   {
      ::THaOptics::TOpticsDir *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOptics::TOpticsDir >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOptics::TOpticsDir", ::THaOptics::TOpticsDir::Class_Version(), "./THaOptics.h", 171,
                  typeid(::THaOptics::TOpticsDir), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOptics::TOpticsDir::Dictionary, isa_proxy, 4,
                  sizeof(::THaOptics::TOpticsDir) );
      instance.SetDelete(&delete_THaOpticscLcLTOpticsDir);
      instance.SetDeleteArray(&deleteArray_THaOpticscLcLTOpticsDir);
      instance.SetDestructor(&destruct_THaOpticscLcLTOpticsDir);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOptics::TOpticsDir*)
   {
      return GenerateInitInstanceLocal((::THaOptics::TOpticsDir*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOptics::TOpticsDir*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticscLcLTOpticsPos_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticscLcLTOpticsPos(void *p);
   static void deleteArray_THaOpticscLcLTOpticsPos(void *p);
   static void destruct_THaOpticscLcLTOpticsPos(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOptics::TOpticsPos*)
   {
      ::THaOptics::TOpticsPos *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOptics::TOpticsPos >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOptics::TOpticsPos", ::THaOptics::TOpticsPos::Class_Version(), "./THaOptics.h", 251,
                  typeid(::THaOptics::TOpticsPos), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOptics::TOpticsPos::Dictionary, isa_proxy, 4,
                  sizeof(::THaOptics::TOpticsPos) );
      instance.SetDelete(&delete_THaOpticscLcLTOpticsPos);
      instance.SetDeleteArray(&deleteArray_THaOpticscLcLTOpticsPos);
      instance.SetDestructor(&destruct_THaOpticscLcLTOpticsPos);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOptics::TOpticsPos*)
   {
      return GenerateInitInstanceLocal((::THaOptics::TOpticsPos*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOptics::TOpticsPos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticsAGen_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticsAGen(void *p);
   static void deleteArray_THaOpticsAGen(void *p);
   static void destruct_THaOpticsAGen(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOpticsAGen*)
   {
      ::THaOpticsAGen *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOpticsAGen >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOpticsAGen", ::THaOpticsAGen::Class_Version(), "./THaOpticsAGen.h", 50,
                  typeid(::THaOpticsAGen), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOpticsAGen::Dictionary, isa_proxy, 4,
                  sizeof(::THaOpticsAGen) );
      instance.SetDelete(&delete_THaOpticsAGen);
      instance.SetDeleteArray(&deleteArray_THaOpticsAGen);
      instance.SetDestructor(&destruct_THaOpticsAGen);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOpticsAGen*)
   {
      return GenerateInitInstanceLocal((::THaOpticsAGen*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOpticsAGen*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticsHRS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticsHRS(void *p);
   static void deleteArray_THaOpticsHRS(void *p);
   static void destruct_THaOpticsHRS(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOpticsHRS*)
   {
      ::THaOpticsHRS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOpticsHRS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOpticsHRS", ::THaOpticsHRS::Class_Version(), "./THaOpticsHRS.h", 46,
                  typeid(::THaOpticsHRS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOpticsHRS::Dictionary, isa_proxy, 4,
                  sizeof(::THaOpticsHRS) );
      instance.SetDelete(&delete_THaOpticsHRS);
      instance.SetDeleteArray(&deleteArray_THaOpticsHRS);
      instance.SetDestructor(&destruct_THaOpticsHRS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOpticsHRS*)
   {
      return GenerateInitInstanceLocal((::THaOpticsHRS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOpticsHRS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticsAnalytical_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticsAnalytical(void *p);
   static void deleteArray_THaOpticsAnalytical(void *p);
   static void destruct_THaOpticsAnalytical(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOpticsAnalytical*)
   {
      ::THaOpticsAnalytical *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOpticsAnalytical >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOpticsAnalytical", ::THaOpticsAnalytical::Class_Version(), "./THaOpticsAnalytical.h", 49,
                  typeid(::THaOpticsAnalytical), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOpticsAnalytical::Dictionary, isa_proxy, 4,
                  sizeof(::THaOpticsAnalytical) );
      instance.SetDelete(&delete_THaOpticsAnalytical);
      instance.SetDeleteArray(&deleteArray_THaOpticsAnalytical);
      instance.SetDestructor(&destruct_THaOpticsAnalytical);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOpticsAnalytical*)
   {
      return GenerateInitInstanceLocal((::THaOpticsAnalytical*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOpticsAnalytical*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaOpticsNoFeild_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaOpticsNoFeild(void *p);
   static void deleteArray_THaOpticsNoFeild(void *p);
   static void destruct_THaOpticsNoFeild(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaOpticsNoFeild*)
   {
      ::THaOpticsNoFeild *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaOpticsNoFeild >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaOpticsNoFeild", ::THaOpticsNoFeild::Class_Version(), "./THaOpticsNoFeild.h", 49,
                  typeid(::THaOpticsNoFeild), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaOpticsNoFeild::Dictionary, isa_proxy, 4,
                  sizeof(::THaOpticsNoFeild) );
      instance.SetDelete(&delete_THaOpticsNoFeild);
      instance.SetDeleteArray(&deleteArray_THaOpticsNoFeild);
      instance.SetDestructor(&destruct_THaOpticsNoFeild);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaOpticsNoFeild*)
   {
      return GenerateInitInstanceLocal((::THaOpticsNoFeild*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaOpticsNoFeild*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaScintPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaScintPlane(void *p = 0);
   static void *newArray_THaScintPlane(Long_t size, void *p);
   static void delete_THaScintPlane(void *p);
   static void deleteArray_THaScintPlane(void *p);
   static void destruct_THaScintPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaScintPlane*)
   {
      ::THaScintPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaScintPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaScintPlane", ::THaScintPlane::Class_Version(), "./THaScintPlane.h", 74,
                  typeid(::THaScintPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaScintPlane::Dictionary, isa_proxy, 4,
                  sizeof(::THaScintPlane) );
      instance.SetNew(&new_THaScintPlane);
      instance.SetNewArray(&newArray_THaScintPlane);
      instance.SetDelete(&delete_THaScintPlane);
      instance.SetDeleteArray(&deleteArray_THaScintPlane);
      instance.SetDestructor(&destruct_THaScintPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaScintPlane*)
   {
      return GenerateInitInstanceLocal((::THaScintPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaScintPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaScintPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaScintPMT(void *p = 0);
   static void *newArray_THaScintPMT(Long_t size, void *p);
   static void delete_THaScintPMT(void *p);
   static void deleteArray_THaScintPMT(void *p);
   static void destruct_THaScintPMT(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaScintPMT*)
   {
      ::THaScintPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaScintPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaScintPMT", ::THaScintPMT::Class_Version(), "./THaScintPMT.h", 21,
                  typeid(::THaScintPMT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaScintPMT::Dictionary, isa_proxy, 4,
                  sizeof(::THaScintPMT) );
      instance.SetNew(&new_THaScintPMT);
      instance.SetNewArray(&newArray_THaScintPMT);
      instance.SetDelete(&delete_THaScintPMT);
      instance.SetDeleteArray(&deleteArray_THaScintPMT);
      instance.SetDestructor(&destruct_THaScintPMT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaScintPMT*)
   {
      return GenerateInitInstanceLocal((::THaScintPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaScintPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaScintHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaScintHit(void *p = 0);
   static void *newArray_THaScintHit(Long_t size, void *p);
   static void delete_THaScintHit(void *p);
   static void deleteArray_THaScintHit(void *p);
   static void destruct_THaScintHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaScintHit*)
   {
      ::THaScintHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaScintHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaScintHit", ::THaScintHit::Class_Version(), "./THaScintHit.h", 15,
                  typeid(::THaScintHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaScintHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaScintHit) );
      instance.SetNew(&new_THaScintHit);
      instance.SetNewArray(&newArray_THaScintHit);
      instance.SetDelete(&delete_THaScintHit);
      instance.SetDeleteArray(&deleteArray_THaScintHit);
      instance.SetDestructor(&destruct_THaScintHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaScintHit*)
   {
      return GenerateInitInstanceLocal((::THaScintHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaScintHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaScintBar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaScintBar(void *p = 0);
   static void *newArray_THaScintBar(Long_t size, void *p);
   static void delete_THaScintBar(void *p);
   static void deleteArray_THaScintBar(void *p);
   static void destruct_THaScintBar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaScintBar*)
   {
      ::THaScintBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaScintBar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaScintBar", ::THaScintBar::Class_Version(), "./THaScintBar.h", 19,
                  typeid(::THaScintBar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaScintBar::Dictionary, isa_proxy, 4,
                  sizeof(::THaScintBar) );
      instance.SetNew(&new_THaScintBar);
      instance.SetNewArray(&newArray_THaScintBar);
      instance.SetDelete(&delete_THaScintBar);
      instance.SetDeleteArray(&deleteArray_THaScintBar);
      instance.SetDestructor(&destruct_THaScintBar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaScintBar*)
   {
      return GenerateInitInstanceLocal((::THaScintBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaScintBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaTriggerPlaneHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaTriggerPlaneHit(void *p);
   static void deleteArray_THaTriggerPlaneHit(void *p);
   static void destruct_THaTriggerPlaneHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaTriggerPlaneHit*)
   {
      ::THaTriggerPlaneHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaTriggerPlaneHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaTriggerPlaneHit", ::THaTriggerPlaneHit::Class_Version(), "./THaTriggerPlaneHit.h", 49,
                  typeid(::THaTriggerPlaneHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaTriggerPlaneHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaTriggerPlaneHit) );
      instance.SetDelete(&delete_THaTriggerPlaneHit);
      instance.SetDeleteArray(&deleteArray_THaTriggerPlaneHit);
      instance.SetDestructor(&destruct_THaTriggerPlaneHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaTriggerPlaneHit*)
   {
      return GenerateInitInstanceLocal((::THaTriggerPlaneHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaTriggerPlaneHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaAdcHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaAdcHit(void *p = 0);
   static void *newArray_THaAdcHit(Long_t size, void *p);
   static void delete_THaAdcHit(void *p);
   static void deleteArray_THaAdcHit(void *p);
   static void destruct_THaAdcHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaAdcHit*)
   {
      ::THaAdcHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaAdcHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaAdcHit", ::THaAdcHit::Class_Version(), "./THaAdcHit.h", 14,
                  typeid(::THaAdcHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaAdcHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaAdcHit) );
      instance.SetNew(&new_THaAdcHit);
      instance.SetNewArray(&newArray_THaAdcHit);
      instance.SetDelete(&delete_THaAdcHit);
      instance.SetDeleteArray(&deleteArray_THaAdcHit);
      instance.SetDestructor(&destruct_THaAdcHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaAdcHit*)
   {
      return GenerateInitInstanceLocal((::THaAdcHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaAdcHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaTdcHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaTdcHit(void *p = 0);
   static void *newArray_THaTdcHit(Long_t size, void *p);
   static void delete_THaTdcHit(void *p);
   static void deleteArray_THaTdcHit(void *p);
   static void destruct_THaTdcHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaTdcHit*)
   {
      ::THaTdcHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaTdcHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaTdcHit", ::THaTdcHit::Class_Version(), "./THaTdcHit.h", 15,
                  typeid(::THaTdcHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaTdcHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaTdcHit) );
      instance.SetNew(&new_THaTdcHit);
      instance.SetNewArray(&newArray_THaTdcHit);
      instance.SetDelete(&delete_THaTdcHit);
      instance.SetDeleteArray(&deleteArray_THaTdcHit);
      instance.SetDestructor(&destruct_THaTdcHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaTdcHit*)
   {
      return GenerateInitInstanceLocal((::THaTdcHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaTdcHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaPartialHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaPartialHit(void *p = 0);
   static void *newArray_THaPartialHit(Long_t size, void *p);
   static void delete_THaPartialHit(void *p);
   static void deleteArray_THaPartialHit(void *p);
   static void destruct_THaPartialHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaPartialHit*)
   {
      ::THaPartialHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaPartialHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaPartialHit", ::THaPartialHit::Class_Version(), "./THaPartialHit.h", 15,
                  typeid(::THaPartialHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaPartialHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaPartialHit) );
      instance.SetNew(&new_THaPartialHit);
      instance.SetNewArray(&newArray_THaPartialHit);
      instance.SetDelete(&delete_THaPartialHit);
      instance.SetDeleteArray(&deleteArray_THaPartialHit);
      instance.SetDestructor(&destruct_THaPartialHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaPartialHit*)
   {
      return GenerateInitInstanceLocal((::THaPartialHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaPartialHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaMWDCPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaMWDCPlane(void *p = 0);
   static void *newArray_THaMWDCPlane(Long_t size, void *p);
   static void delete_THaMWDCPlane(void *p);
   static void deleteArray_THaMWDCPlane(void *p);
   static void destruct_THaMWDCPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaMWDCPlane*)
   {
      ::THaMWDCPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaMWDCPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaMWDCPlane", ::THaMWDCPlane::Class_Version(), "./THaMWDCPlane.h", 25,
                  typeid(::THaMWDCPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaMWDCPlane::Dictionary, isa_proxy, 4,
                  sizeof(::THaMWDCPlane) );
      instance.SetNew(&new_THaMWDCPlane);
      instance.SetNewArray(&newArray_THaMWDCPlane);
      instance.SetDelete(&delete_THaMWDCPlane);
      instance.SetDeleteArray(&deleteArray_THaMWDCPlane);
      instance.SetDestructor(&destruct_THaMWDCPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaMWDCPlane*)
   {
      return GenerateInitInstanceLocal((::THaMWDCPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaMWDCPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaMWDCGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaMWDCGroup(void *p);
   static void deleteArray_THaMWDCGroup(void *p);
   static void destruct_THaMWDCGroup(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaMWDCGroup*)
   {
      ::THaMWDCGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaMWDCGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaMWDCGroup", ::THaMWDCGroup::Class_Version(), "./THaMWDCGroup.h", 27,
                  typeid(::THaMWDCGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaMWDCGroup::Dictionary, isa_proxy, 4,
                  sizeof(::THaMWDCGroup) );
      instance.SetDelete(&delete_THaMWDCGroup);
      instance.SetDeleteArray(&deleteArray_THaMWDCGroup);
      instance.SetDestructor(&destruct_THaMWDCGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaMWDCGroup*)
   {
      return GenerateInitInstanceLocal((::THaMWDCGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaMWDCGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaMWDCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaMWDCHit(void *p = 0);
   static void *newArray_THaMWDCHit(Long_t size, void *p);
   static void delete_THaMWDCHit(void *p);
   static void deleteArray_THaMWDCHit(void *p);
   static void destruct_THaMWDCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaMWDCHit*)
   {
      ::THaMWDCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaMWDCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaMWDCHit", ::THaMWDCHit::Class_Version(), "./THaMWDCHit.h", 15,
                  typeid(::THaMWDCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaMWDCHit::Dictionary, isa_proxy, 4,
                  sizeof(::THaMWDCHit) );
      instance.SetNew(&new_THaMWDCHit);
      instance.SetNewArray(&newArray_THaMWDCHit);
      instance.SetDelete(&delete_THaMWDCHit);
      instance.SetDeleteArray(&deleteArray_THaMWDCHit);
      instance.SetDestructor(&destruct_THaMWDCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaMWDCHit*)
   {
      return GenerateInitInstanceLocal((::THaMWDCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaMWDCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaMWDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaMWDC(void *p);
   static void deleteArray_THaMWDC(void *p);
   static void destruct_THaMWDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaMWDC*)
   {
      ::THaMWDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaMWDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaMWDC", ::THaMWDC::Class_Version(), "./THaMWDC.h", 56,
                  typeid(::THaMWDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaMWDC::Dictionary, isa_proxy, 4,
                  sizeof(::THaMWDC) );
      instance.SetDelete(&delete_THaMWDC);
      instance.SetDeleteArray(&deleteArray_THaMWDC);
      instance.SetDestructor(&destruct_THaMWDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaMWDC*)
   {
      return GenerateInitInstanceLocal((::THaMWDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaMWDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaMWDCLine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaMWDCLine(void *p = 0);
   static void *newArray_THaMWDCLine(Long_t size, void *p);
   static void delete_THaMWDCLine(void *p);
   static void deleteArray_THaMWDCLine(void *p);
   static void destruct_THaMWDCLine(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaMWDCLine*)
   {
      ::THaMWDCLine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaMWDCLine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaMWDCLine", ::THaMWDCLine::Class_Version(), "./THaMWDCLine.h", 13,
                  typeid(::THaMWDCLine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaMWDCLine::Dictionary, isa_proxy, 4,
                  sizeof(::THaMWDCLine) );
      instance.SetNew(&new_THaMWDCLine);
      instance.SetNewArray(&newArray_THaMWDCLine);
      instance.SetDelete(&delete_THaMWDCLine);
      instance.SetDeleteArray(&deleteArray_THaMWDCLine);
      instance.SetDestructor(&destruct_THaMWDCLine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaMWDCLine*)
   {
      return GenerateInitInstanceLocal((::THaMWDCLine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaMWDCLine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaVDCTableTTDConv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaVDCTableTTDConv(void *p = 0);
   static void *newArray_THaVDCTableTTDConv(Long_t size, void *p);
   static void delete_THaVDCTableTTDConv(void *p);
   static void deleteArray_THaVDCTableTTDConv(void *p);
   static void destruct_THaVDCTableTTDConv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaVDCTableTTDConv*)
   {
      ::THaVDCTableTTDConv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaVDCTableTTDConv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaVDCTableTTDConv", ::THaVDCTableTTDConv::Class_Version(), "./THaVDCTableTTDConv.h", 18,
                  typeid(::THaVDCTableTTDConv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaVDCTableTTDConv::Dictionary, isa_proxy, 4,
                  sizeof(::THaVDCTableTTDConv) );
      instance.SetNew(&new_THaVDCTableTTDConv);
      instance.SetNewArray(&newArray_THaVDCTableTTDConv);
      instance.SetDelete(&delete_THaVDCTableTTDConv);
      instance.SetDeleteArray(&deleteArray_THaVDCTableTTDConv);
      instance.SetDestructor(&destruct_THaVDCTableTTDConv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaVDCTableTTDConv*)
   {
      return GenerateInitInstanceLocal((::THaVDCTableTTDConv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaVDCTableTTDConv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaVDC2DTableTTDConv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaVDC2DTableTTDConv(void *p = 0);
   static void *newArray_THaVDC2DTableTTDConv(Long_t size, void *p);
   static void delete_THaVDC2DTableTTDConv(void *p);
   static void deleteArray_THaVDC2DTableTTDConv(void *p);
   static void destruct_THaVDC2DTableTTDConv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaVDC2DTableTTDConv*)
   {
      ::THaVDC2DTableTTDConv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaVDC2DTableTTDConv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaVDC2DTableTTDConv", ::THaVDC2DTableTTDConv::Class_Version(), "./THaVDC2DTableTTDConv.h", 17,
                  typeid(::THaVDC2DTableTTDConv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaVDC2DTableTTDConv::Dictionary, isa_proxy, 4,
                  sizeof(::THaVDC2DTableTTDConv) );
      instance.SetNew(&new_THaVDC2DTableTTDConv);
      instance.SetNewArray(&newArray_THaVDC2DTableTTDConv);
      instance.SetDelete(&delete_THaVDC2DTableTTDConv);
      instance.SetDeleteArray(&deleteArray_THaVDC2DTableTTDConv);
      instance.SetDestructor(&destruct_THaVDC2DTableTTDConv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaVDC2DTableTTDConv*)
   {
      return GenerateInitInstanceLocal((::THaVDC2DTableTTDConv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaVDC2DTableTTDConv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaVDCFuncTTDConv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaVDCFuncTTDConv(void *p = 0);
   static void *newArray_THaVDCFuncTTDConv(Long_t size, void *p);
   static void delete_THaVDCFuncTTDConv(void *p);
   static void deleteArray_THaVDCFuncTTDConv(void *p);
   static void destruct_THaVDCFuncTTDConv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaVDCFuncTTDConv*)
   {
      ::THaVDCFuncTTDConv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaVDCFuncTTDConv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaVDCFuncTTDConv", ::THaVDCFuncTTDConv::Class_Version(), "./THaVDCFuncTTDConv.h", 14,
                  typeid(::THaVDCFuncTTDConv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaVDCFuncTTDConv::Dictionary, isa_proxy, 4,
                  sizeof(::THaVDCFuncTTDConv) );
      instance.SetNew(&new_THaVDCFuncTTDConv);
      instance.SetNewArray(&newArray_THaVDCFuncTTDConv);
      instance.SetDelete(&delete_THaVDCFuncTTDConv);
      instance.SetDeleteArray(&deleteArray_THaVDCFuncTTDConv);
      instance.SetDestructor(&destruct_THaVDCFuncTTDConv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaVDCFuncTTDConv*)
   {
      return GenerateInitInstanceLocal((::THaVDCFuncTTDConv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaVDCFuncTTDConv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaVDCLinearTTDConv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaVDCLinearTTDConv(void *p = 0);
   static void *newArray_THaVDCLinearTTDConv(Long_t size, void *p);
   static void delete_THaVDCLinearTTDConv(void *p);
   static void deleteArray_THaVDCLinearTTDConv(void *p);
   static void destruct_THaVDCLinearTTDConv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaVDCLinearTTDConv*)
   {
      ::THaVDCLinearTTDConv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaVDCLinearTTDConv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaVDCLinearTTDConv", ::THaVDCLinearTTDConv::Class_Version(), "./THaVDCLinearTTDConv.h", 14,
                  typeid(::THaVDCLinearTTDConv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaVDCLinearTTDConv::Dictionary, isa_proxy, 4,
                  sizeof(::THaVDCLinearTTDConv) );
      instance.SetNew(&new_THaVDCLinearTTDConv);
      instance.SetNewArray(&newArray_THaVDCLinearTTDConv);
      instance.SetDelete(&delete_THaVDCLinearTTDConv);
      instance.SetDeleteArray(&deleteArray_THaVDCLinearTTDConv);
      instance.SetDestructor(&destruct_THaVDCLinearTTDConv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaVDCLinearTTDConv*)
   {
      return GenerateInitInstanceLocal((::THaVDCLinearTTDConv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaVDCLinearTTDConv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBBShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaBBShower(void *p);
   static void deleteArray_THaBBShower(void *p);
   static void destruct_THaBBShower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBBShower*)
   {
      ::THaBBShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBBShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBBShower", ::THaBBShower::Class_Version(), "./THaBBShower.h", 15,
                  typeid(::THaBBShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBBShower::Dictionary, isa_proxy, 4,
                  sizeof(::THaBBShower) );
      instance.SetDelete(&delete_THaBBShower);
      instance.SetDeleteArray(&deleteArray_THaBBShower);
      instance.SetDestructor(&destruct_THaBBShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBBShower*)
   {
      return GenerateInitInstanceLocal((::THaBBShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBBShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBBTotalShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaBBTotalShower(void *p);
   static void deleteArray_THaBBTotalShower(void *p);
   static void destruct_THaBBTotalShower(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBBTotalShower*)
   {
      ::THaBBTotalShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBBTotalShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBBTotalShower", ::THaBBTotalShower::Class_Version(), "./THaBBTotalShower.h", 35,
                  typeid(::THaBBTotalShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBBTotalShower::Dictionary, isa_proxy, 4,
                  sizeof(::THaBBTotalShower) );
      instance.SetDelete(&delete_THaBBTotalShower);
      instance.SetDeleteArray(&deleteArray_THaBBTotalShower);
      instance.SetDestructor(&destruct_THaBBTotalShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBBTotalShower*)
   {
      return GenerateInitInstanceLocal((::THaBBTotalShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBBTotalShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaTimingPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaTimingPlane(void *p);
   static void deleteArray_THaTimingPlane(void *p);
   static void destruct_THaTimingPlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaTimingPlane*)
   {
      ::THaTimingPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaTimingPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaTimingPlane", ::THaTimingPlane::Class_Version(), "./THaTimingPlane.h", 54,
                  typeid(::THaTimingPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaTimingPlane::Dictionary, isa_proxy, 4,
                  sizeof(::THaTimingPlane) );
      instance.SetDelete(&delete_THaTimingPlane);
      instance.SetDeleteArray(&deleteArray_THaTimingPlane);
      instance.SetDestructor(&destruct_THaTimingPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaTimingPlane*)
   {
      return GenerateInitInstanceLocal((::THaTimingPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaTimingPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaScintPlaneDet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaScintPlaneDet(void *p = 0);
   static void *newArray_THaScintPlaneDet(Long_t size, void *p);
   static void delete_THaScintPlaneDet(void *p);
   static void deleteArray_THaScintPlaneDet(void *p);
   static void destruct_THaScintPlaneDet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaScintPlaneDet*)
   {
      ::THaScintPlaneDet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaScintPlaneDet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaScintPlaneDet", ::THaScintPlaneDet::Class_Version(), "./THaScintPlaneDet.h", 76,
                  typeid(::THaScintPlaneDet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaScintPlaneDet::Dictionary, isa_proxy, 4,
                  sizeof(::THaScintPlaneDet) );
      instance.SetNew(&new_THaScintPlaneDet);
      instance.SetNewArray(&newArray_THaScintPlaneDet);
      instance.SetDelete(&delete_THaScintPlaneDet);
      instance.SetDeleteArray(&deleteArray_THaScintPlaneDet);
      instance.SetDestructor(&destruct_THaScintPlaneDet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaScintPlaneDet*)
   {
      return GenerateInitInstanceLocal((::THaScintPlaneDet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaScintPlaneDet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBBShowerBlock_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaBBShowerBlock(void *p = 0);
   static void *newArray_THaBBShowerBlock(Long_t size, void *p);
   static void delete_THaBBShowerBlock(void *p);
   static void deleteArray_THaBBShowerBlock(void *p);
   static void destruct_THaBBShowerBlock(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBBShowerBlock*)
   {
      ::THaBBShowerBlock *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBBShowerBlock >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBBShowerBlock", ::THaBBShowerBlock::Class_Version(), "./THaBBShowerBlock.h", 12,
                  typeid(::THaBBShowerBlock), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBBShowerBlock::Dictionary, isa_proxy, 4,
                  sizeof(::THaBBShowerBlock) );
      instance.SetNew(&new_THaBBShowerBlock);
      instance.SetNewArray(&newArray_THaBBShowerBlock);
      instance.SetDelete(&delete_THaBBShowerBlock);
      instance.SetDeleteArray(&deleteArray_THaBBShowerBlock);
      instance.SetDestructor(&destruct_THaBBShowerBlock);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBBShowerBlock*)
   {
      return GenerateInitInstanceLocal((::THaBBShowerBlock*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBBShowerBlock*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBBShowerCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaBBShowerCluster(void *p = 0);
   static void *newArray_THaBBShowerCluster(Long_t size, void *p);
   static void delete_THaBBShowerCluster(void *p);
   static void deleteArray_THaBBShowerCluster(void *p);
   static void destruct_THaBBShowerCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBBShowerCluster*)
   {
      ::THaBBShowerCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBBShowerCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBBShowerCluster", ::THaBBShowerCluster::Class_Version(), "./THaBBShowerCluster.h", 13,
                  typeid(::THaBBShowerCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBBShowerCluster::Dictionary, isa_proxy, 4,
                  sizeof(::THaBBShowerCluster) );
      instance.SetNew(&new_THaBBShowerCluster);
      instance.SetNewArray(&newArray_THaBBShowerCluster);
      instance.SetDelete(&delete_THaBBShowerCluster);
      instance.SetDeleteArray(&deleteArray_THaBBShowerCluster);
      instance.SetDestructor(&destruct_THaBBShowerCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBBShowerCluster*)
   {
      return GenerateInitInstanceLocal((::THaBBShowerCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBBShowerCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLWirePlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLWirePlane(void *p = 0);
   static void *newArray_TreeSearchcLcLWirePlane(Long_t size, void *p);
   static void delete_TreeSearchcLcLWirePlane(void *p);
   static void deleteArray_TreeSearchcLcLWirePlane(void *p);
   static void destruct_TreeSearchcLcLWirePlane(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::WirePlane*)
   {
      ::TreeSearch::WirePlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::WirePlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::WirePlane", ::TreeSearch::WirePlane::Class_Version(), "./WirePlane.h", 34,
                  typeid(::TreeSearch::WirePlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::WirePlane::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::WirePlane) );
      instance.SetNew(&new_TreeSearchcLcLWirePlane);
      instance.SetNewArray(&newArray_TreeSearchcLcLWirePlane);
      instance.SetDelete(&delete_TreeSearchcLcLWirePlane);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLWirePlane);
      instance.SetDestructor(&destruct_TreeSearchcLcLWirePlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::WirePlane*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::WirePlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::WirePlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLProjection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLProjection(void *p = 0);
   static void *newArray_TreeSearchcLcLProjection(Long_t size, void *p);
   static void delete_TreeSearchcLcLProjection(void *p);
   static void deleteArray_TreeSearchcLcLProjection(void *p);
   static void destruct_TreeSearchcLcLProjection(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Projection*)
   {
      ::TreeSearch::Projection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Projection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Projection", ::TreeSearch::Projection::Class_Version(), "./Projection.h", 32,
                  typeid(::TreeSearch::Projection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Projection::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Projection) );
      instance.SetNew(&new_TreeSearchcLcLProjection);
      instance.SetNewArray(&newArray_TreeSearchcLcLProjection);
      instance.SetDelete(&delete_TreeSearchcLcLProjection);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLProjection);
      instance.SetDestructor(&destruct_TreeSearchcLcLProjection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Projection*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Projection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Projection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLRoad_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLRoad(void *p = 0);
   static void *newArray_TreeSearchcLcLRoad(Long_t size, void *p);
   static void delete_TreeSearchcLcLRoad(void *p);
   static void deleteArray_TreeSearchcLcLRoad(void *p);
   static void destruct_TreeSearchcLcLRoad(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Road*)
   {
      ::TreeSearch::Road *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Road >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Road", ::TreeSearch::Road::Class_Version(), "./Road.h", 30,
                  typeid(::TreeSearch::Road), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Road::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Road) );
      instance.SetNew(&new_TreeSearchcLcLRoad);
      instance.SetNewArray(&newArray_TreeSearchcLcLRoad);
      instance.SetDelete(&delete_TreeSearchcLcLRoad);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLRoad);
      instance.SetDestructor(&destruct_TreeSearchcLcLRoad);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Road*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Road*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Road*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLTimeToDistConv_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLTimeToDistConv(void *p);
   static void deleteArray_TreeSearchcLcLTimeToDistConv(void *p);
   static void destruct_TreeSearchcLcLTimeToDistConv(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::TimeToDistConv*)
   {
      ::TreeSearch::TimeToDistConv *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::TimeToDistConv >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::TimeToDistConv", ::TreeSearch::TimeToDistConv::Class_Version(), "./TimeToDistConv.h", 21,
                  typeid(::TreeSearch::TimeToDistConv), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::TimeToDistConv::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::TimeToDistConv) );
      instance.SetDelete(&delete_TreeSearchcLcLTimeToDistConv);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLTimeToDistConv);
      instance.SetDestructor(&destruct_TreeSearchcLcLTimeToDistConv);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::TimeToDistConv*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::TimeToDistConv*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::TimeToDistConv*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLHit(void *p = 0);
   static void *newArray_TreeSearchcLcLHit(Long_t size, void *p);
   static void delete_TreeSearchcLcLHit(void *p);
   static void deleteArray_TreeSearchcLcLHit(void *p);
   static void destruct_TreeSearchcLcLHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Hit*)
   {
      ::TreeSearch::Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Hit", ::TreeSearch::Hit::Class_Version(), "./Hit.h", 27,
                  typeid(::TreeSearch::Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Hit::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Hit) );
      instance.SetNew(&new_TreeSearchcLcLHit);
      instance.SetNewArray(&newArray_TreeSearchcLcLHit);
      instance.SetDelete(&delete_TreeSearchcLcLHit);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLHit);
      instance.SetDestructor(&destruct_TreeSearchcLcLHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Hit*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLFitCoord_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLFitCoord(void *p = 0);
   static void *newArray_TreeSearchcLcLFitCoord(Long_t size, void *p);
   static void delete_TreeSearchcLcLFitCoord(void *p);
   static void deleteArray_TreeSearchcLcLFitCoord(void *p);
   static void destruct_TreeSearchcLcLFitCoord(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::FitCoord*)
   {
      ::TreeSearch::FitCoord *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::FitCoord >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::FitCoord", ::TreeSearch::FitCoord::Class_Version(), "./Hit.h", 214,
                  typeid(::TreeSearch::FitCoord), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::FitCoord::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::FitCoord) );
      instance.SetNew(&new_TreeSearchcLcLFitCoord);
      instance.SetNewArray(&newArray_TreeSearchcLcLFitCoord);
      instance.SetDelete(&delete_TreeSearchcLcLFitCoord);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLFitCoord);
      instance.SetDestructor(&destruct_TreeSearchcLcLFitCoord);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::FitCoord*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::FitCoord*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::FitCoord*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLLinearTTD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLLinearTTD(void *p = 0);
   static void *newArray_TreeSearchcLcLLinearTTD(Long_t size, void *p);
   static void delete_TreeSearchcLcLLinearTTD(void *p);
   static void deleteArray_TreeSearchcLcLLinearTTD(void *p);
   static void destruct_TreeSearchcLcLLinearTTD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::LinearTTD*)
   {
      ::TreeSearch::LinearTTD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::LinearTTD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::LinearTTD", ::TreeSearch::LinearTTD::Class_Version(), "./TimeToDistConv.h", 55,
                  typeid(::TreeSearch::LinearTTD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::LinearTTD::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::LinearTTD) );
      instance.SetNew(&new_TreeSearchcLcLLinearTTD);
      instance.SetNewArray(&newArray_TreeSearchcLcLLinearTTD);
      instance.SetDelete(&delete_TreeSearchcLcLLinearTTD);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLLinearTTD);
      instance.SetDestructor(&destruct_TreeSearchcLcLLinearTTD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::LinearTTD*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::LinearTTD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::LinearTTD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLTanhFitTTD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLTanhFitTTD(void *p = 0);
   static void *newArray_TreeSearchcLcLTanhFitTTD(Long_t size, void *p);
   static void delete_TreeSearchcLcLTanhFitTTD(void *p);
   static void deleteArray_TreeSearchcLcLTanhFitTTD(void *p);
   static void destruct_TreeSearchcLcLTanhFitTTD(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::TanhFitTTD*)
   {
      ::TreeSearch::TanhFitTTD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::TanhFitTTD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::TanhFitTTD", ::TreeSearch::TanhFitTTD::Class_Version(), "./TimeToDistConv.h", 79,
                  typeid(::TreeSearch::TanhFitTTD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::TanhFitTTD::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::TanhFitTTD) );
      instance.SetNew(&new_TreeSearchcLcLTanhFitTTD);
      instance.SetNewArray(&newArray_TreeSearchcLcLTanhFitTTD);
      instance.SetDelete(&delete_TreeSearchcLcLTanhFitTTD);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLTanhFitTTD);
      instance.SetDestructor(&destruct_TreeSearchcLcLTanhFitTTD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::TanhFitTTD*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::TanhFitTTD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::TanhFitTTD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLMCHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLMCHit(void *p = 0);
   static void *newArray_TreeSearchcLcLMCHit(Long_t size, void *p);
   static void delete_TreeSearchcLcLMCHit(void *p);
   static void deleteArray_TreeSearchcLcLMCHit(void *p);
   static void destruct_TreeSearchcLcLMCHit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::MCHit*)
   {
      ::TreeSearch::MCHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::MCHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::MCHit", ::TreeSearch::MCHit::Class_Version(), "./Hit.h", 130,
                  typeid(::TreeSearch::MCHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::MCHit::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::MCHit) );
      instance.SetNew(&new_TreeSearchcLcLMCHit);
      instance.SetNewArray(&newArray_TreeSearchcLcLMCHit);
      instance.SetDelete(&delete_TreeSearchcLcLMCHit);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLMCHit);
      instance.SetDestructor(&destruct_TreeSearchcLcLMCHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::MCHit*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::MCHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::MCHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlETObjectmUcOTObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlETObjectmUcOTObjectmUgR_Dictionary();
   static void *new_pairlETObjectmUcOTObjectmUgR(void *p = 0);
   static void *newArray_pairlETObjectmUcOTObjectmUgR(Long_t size, void *p);
   static void delete_pairlETObjectmUcOTObjectmUgR(void *p);
   static void deleteArray_pairlETObjectmUcOTObjectmUgR(void *p);
   static void destruct_pairlETObjectmUcOTObjectmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<TObject*,TObject*>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<TObject*,TObject*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<TObject*,TObject*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<TObject*,TObject*>", "prec_stl/utility", 17,
                  typeid(pair<TObject*,TObject*>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlETObjectmUcOTObjectmUgR_ShowMembers, &pairlETObjectmUcOTObjectmUgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<TObject*,TObject*>) );
      instance.SetNew(&new_pairlETObjectmUcOTObjectmUgR);
      instance.SetNewArray(&newArray_pairlETObjectmUcOTObjectmUgR);
      instance.SetDelete(&delete_pairlETObjectmUcOTObjectmUgR);
      instance.SetDeleteArray(&deleteArray_pairlETObjectmUcOTObjectmUgR);
      instance.SetDestructor(&destruct_pairlETObjectmUcOTObjectmUgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<TObject*,TObject*>*)
   {
      return GenerateInitInstanceLocal((pair<TObject*,TObject*>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<TObject*,TObject*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlETObjectmUcOTObjectmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<TObject*,TObject*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLHitPairIter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLHitPairIter(void *p);
   static void deleteArray_TreeSearchcLcLHitPairIter(void *p);
   static void destruct_TreeSearchcLcLHitPairIter(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::HitPairIter*)
   {
      ::TreeSearch::HitPairIter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::HitPairIter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::HitPairIter", ::TreeSearch::HitPairIter::Class_Version(), "./Hit.h", 160,
                  typeid(::TreeSearch::HitPairIter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::HitPairIter::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::HitPairIter) );
      instance.SetDelete(&delete_TreeSearchcLcLHitPairIter);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLHitPairIter);
      instance.SetDestructor(&destruct_TreeSearchcLcLHitPairIter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::HitPairIter*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::HitPairIter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::HitPairIter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLHitSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLHitSet(void *p = 0);
   static void *newArray_TreeSearchcLcLHitSet(Long_t size, void *p);
   static void delete_TreeSearchcLcLHitSet(void *p);
   static void deleteArray_TreeSearchcLcLHitSet(void *p);
   static void destruct_TreeSearchcLcLHitSet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::HitSet*)
   {
      ::TreeSearch::HitSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::HitSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::HitSet", ::TreeSearch::HitSet::Class_Version(), "./Hit.h", 263,
                  typeid(::TreeSearch::HitSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::HitSet::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::HitSet) );
      instance.SetNew(&new_TreeSearchcLcLHitSet);
      instance.SetNewArray(&newArray_TreeSearchcLcLHitSet);
      instance.SetDelete(&delete_TreeSearchcLcLHitSet);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLHitSet);
      instance.SetDestructor(&destruct_TreeSearchcLcLHitSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::HitSet*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::HitSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::HitSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLNodeDescriptor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TreeSearchcLcLNodeDescriptor_Dictionary();
   static void *new_TreeSearchcLcLNodeDescriptor(void *p = 0);
   static void *newArray_TreeSearchcLcLNodeDescriptor(Long_t size, void *p);
   static void delete_TreeSearchcLcLNodeDescriptor(void *p);
   static void deleteArray_TreeSearchcLcLNodeDescriptor(void *p);
   static void destruct_TreeSearchcLcLNodeDescriptor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::NodeDescriptor*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TreeSearch::NodeDescriptor) == sizeof( ::ROOTShadow::Shadow::TreeSearch::NodeDescriptor));
      ::TreeSearch::NodeDescriptor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TreeSearch::NodeDescriptor),0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::NodeDescriptor", "./Node.h", 18,
                  typeid(::TreeSearch::NodeDescriptor), ::ROOT::DefineBehavior(ptr, ptr),
                  &TreeSearchcLcLNodeDescriptor_ShowMembers, &TreeSearchcLcLNodeDescriptor_Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::NodeDescriptor) );
      instance.SetNew(&new_TreeSearchcLcLNodeDescriptor);
      instance.SetNewArray(&newArray_TreeSearchcLcLNodeDescriptor);
      instance.SetDelete(&delete_TreeSearchcLcLNodeDescriptor);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLNodeDescriptor);
      instance.SetDestructor(&destruct_TreeSearchcLcLNodeDescriptor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::NodeDescriptor*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::NodeDescriptor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::NodeDescriptor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TreeSearchcLcLNodeDescriptor_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::NodeDescriptor*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_Dictionary();
   static void *new_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p = 0);
   static void *newArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(Long_t size, void *p);
   static void delete_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p);
   static void deleteArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p);
   static void destruct_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>", "prec_stl/utility", 17,
                  typeid(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_ShowMembers, &pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>) );
      instance.SetNew(&new_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
      instance.SetNewArray(&newArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
      instance.SetDelete(&delete_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
      instance.SetDeleteArray(&deleteArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
      instance.SetDestructor(&destruct_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)
   {
      return GenerateInitInstanceLocal((pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLTreeWalk_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLTreeWalk(void *p = 0);
   static void *newArray_TreeSearchcLcLTreeWalk(Long_t size, void *p);
   static void delete_TreeSearchcLcLTreeWalk(void *p);
   static void deleteArray_TreeSearchcLcLTreeWalk(void *p);
   static void destruct_TreeSearchcLcLTreeWalk(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::TreeWalk*)
   {
      ::TreeSearch::TreeWalk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::TreeWalk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::TreeWalk", ::TreeSearch::TreeWalk::Class_Version(), "./TreeWalk.h", 45,
                  typeid(::TreeSearch::TreeWalk), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::TreeWalk::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::TreeWalk) );
      instance.SetNew(&new_TreeSearchcLcLTreeWalk);
      instance.SetNewArray(&newArray_TreeSearchcLcLTreeWalk);
      instance.SetDelete(&delete_TreeSearchcLcLTreeWalk);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLTreeWalk);
      instance.SetDestructor(&destruct_TreeSearchcLcLTreeWalk);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::TreeWalk*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::TreeWalk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::TreeWalk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLBits_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLBits(void *p = 0);
   static void *newArray_TreeSearchcLcLBits(Long_t size, void *p);
   static void delete_TreeSearchcLcLBits(void *p);
   static void deleteArray_TreeSearchcLcLBits(void *p);
   static void destruct_TreeSearchcLcLBits(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Bits*)
   {
      ::TreeSearch::Bits *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Bits >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Bits", ::TreeSearch::Bits::Class_Version(), "./Hitpattern.h", 23,
                  typeid(::TreeSearch::Bits), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Bits::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Bits) );
      instance.SetNew(&new_TreeSearchcLcLBits);
      instance.SetNewArray(&newArray_TreeSearchcLcLBits);
      instance.SetDelete(&delete_TreeSearchcLcLBits);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLBits);
      instance.SetDestructor(&destruct_TreeSearchcLcLBits);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Bits*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Bits*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Bits*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLPatternTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLPatternTree(void *p);
   static void deleteArray_TreeSearchcLcLPatternTree(void *p);
   static void destruct_TreeSearchcLcLPatternTree(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::PatternTree*)
   {
      ::TreeSearch::PatternTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::PatternTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::PatternTree", ::TreeSearch::PatternTree::Class_Version(), "./PatternTree.h", 40,
                  typeid(::TreeSearch::PatternTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::PatternTree::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::PatternTree) );
      instance.SetDelete(&delete_TreeSearchcLcLPatternTree);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLPatternTree);
      instance.SetDestructor(&destruct_TreeSearchcLcLPatternTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::PatternTree*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::PatternTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::PatternTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLHitpattern_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLHitpattern(void *p);
   static void deleteArray_TreeSearchcLcLHitpattern(void *p);
   static void destruct_TreeSearchcLcLHitpattern(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Hitpattern*)
   {
      ::TreeSearch::Hitpattern *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Hitpattern >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Hitpattern", ::TreeSearch::Hitpattern::Class_Version(), "./Hitpattern.h", 41,
                  typeid(::TreeSearch::Hitpattern), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Hitpattern::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Hitpattern) );
      instance.SetDelete(&delete_TreeSearchcLcLHitpattern);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLHitpattern);
      instance.SetDestructor(&destruct_TreeSearchcLcLHitpattern);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Hitpattern*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Hitpattern*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Hitpattern*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLTreeParam_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TreeSearchcLcLTreeParam_t_Dictionary();
   static void delete_TreeSearchcLcLTreeParam_t(void *p);
   static void deleteArray_TreeSearchcLcLTreeParam_t(void *p);
   static void destruct_TreeSearchcLcLTreeParam_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::TreeParam_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TreeSearch::TreeParam_t) == sizeof( ::ROOTShadow::Shadow::TreeSearch::TreeParam_t));
      ::TreeSearch::TreeParam_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TreeSearch::TreeParam_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::TreeParam_t", "./PatternTree.h", 21,
                  typeid(::TreeSearch::TreeParam_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &TreeSearchcLcLTreeParam_t_ShowMembers, &TreeSearchcLcLTreeParam_t_Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::TreeParam_t) );
      instance.SetDelete(&delete_TreeSearchcLcLTreeParam_t);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLTreeParam_t);
      instance.SetDestructor(&destruct_TreeSearchcLcLTreeParam_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::TreeParam_t*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::TreeParam_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::TreeParam_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TreeSearchcLcLTreeParam_t_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeParam_t*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLPatternGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLPatternGenerator(void *p = 0);
   static void *newArray_TreeSearchcLcLPatternGenerator(Long_t size, void *p);
   static void delete_TreeSearchcLcLPatternGenerator(void *p);
   static void deleteArray_TreeSearchcLcLPatternGenerator(void *p);
   static void destruct_TreeSearchcLcLPatternGenerator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::PatternGenerator*)
   {
      ::TreeSearch::PatternGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::PatternGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::PatternGenerator", ::TreeSearch::PatternGenerator::Class_Version(), "./PatternGenerator.h", 18,
                  typeid(::TreeSearch::PatternGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::PatternGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::PatternGenerator) );
      instance.SetNew(&new_TreeSearchcLcLPatternGenerator);
      instance.SetNewArray(&newArray_TreeSearchcLcLPatternGenerator);
      instance.SetDelete(&delete_TreeSearchcLcLPatternGenerator);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLPatternGenerator);
      instance.SetDestructor(&destruct_TreeSearchcLcLPatternGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::PatternGenerator*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::PatternGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLPatternGeneratorcLcLStatistics_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TreeSearchcLcLPatternGeneratorcLcLStatistics_t_Dictionary();
   static void *new_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p = 0);
   static void *newArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(Long_t size, void *p);
   static void delete_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p);
   static void deleteArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p);
   static void destruct_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::PatternGenerator::Statistics_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TreeSearch::PatternGenerator::Statistics_t) == sizeof( ::ROOTShadow::Shadow::TreeSearch::PatternGenerator::Statistics_t));
      ::TreeSearch::PatternGenerator::Statistics_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TreeSearch::PatternGenerator::Statistics_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::PatternGenerator::Statistics_t", "./PatternGenerator.h", 28,
                  typeid(::TreeSearch::PatternGenerator::Statistics_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &TreeSearchcLcLPatternGeneratorcLcLStatistics_t_ShowMembers, &TreeSearchcLcLPatternGeneratorcLcLStatistics_t_Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::PatternGenerator::Statistics_t) );
      instance.SetNew(&new_TreeSearchcLcLPatternGeneratorcLcLStatistics_t);
      instance.SetNewArray(&newArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t);
      instance.SetDelete(&delete_TreeSearchcLcLPatternGeneratorcLcLStatistics_t);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t);
      instance.SetDestructor(&destruct_TreeSearchcLcLPatternGeneratorcLcLStatistics_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::PatternGenerator::Statistics_t*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::PatternGenerator::Statistics_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator::Statistics_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TreeSearchcLcLPatternGeneratorcLcLStatistics_t_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator::Statistics_t*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLRoadcLcLPoint_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLRoadcLcLPoint(void *p = 0);
   static void *newArray_TreeSearchcLcLRoadcLcLPoint(Long_t size, void *p);
   static void delete_TreeSearchcLcLRoadcLcLPoint(void *p);
   static void deleteArray_TreeSearchcLcLRoadcLcLPoint(void *p);
   static void destruct_TreeSearchcLcLRoadcLcLPoint(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Road::Point*)
   {
      ::TreeSearch::Road::Point *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Road::Point >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Road::Point", ::TreeSearch::Road::Point::Class_Version(), "./Road.h", 35,
                  typeid(::TreeSearch::Road::Point), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Road::Point::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Road::Point) );
      instance.SetNew(&new_TreeSearchcLcLRoadcLcLPoint);
      instance.SetNewArray(&newArray_TreeSearchcLcLRoadcLcLPoint);
      instance.SetDelete(&delete_TreeSearchcLcLRoadcLcLPoint);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLRoadcLcLPoint);
      instance.SetDestructor(&destruct_TreeSearchcLcLRoadcLcLPoint);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Road::Point*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Road::Point*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Road::Point*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLRoadcLcLCorners_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TreeSearchcLcLRoadcLcLCorners(void *p = 0);
   static void *newArray_TreeSearchcLcLRoadcLcLCorners(Long_t size, void *p);
   static void delete_TreeSearchcLcLRoadcLcLCorners(void *p);
   static void deleteArray_TreeSearchcLcLRoadcLcLCorners(void *p);
   static void destruct_TreeSearchcLcLRoadcLcLCorners(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::Road::Corners*)
   {
      ::TreeSearch::Road::Corners *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::Road::Corners >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::Road::Corners", ::TreeSearch::Road::Corners::Class_Version(), "./Road.h", 53,
                  typeid(::TreeSearch::Road::Corners), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::Road::Corners::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::Road::Corners) );
      instance.SetNew(&new_TreeSearchcLcLRoadcLcLCorners);
      instance.SetNewArray(&newArray_TreeSearchcLcLRoadcLcLCorners);
      instance.SetDelete(&delete_TreeSearchcLcLRoadcLcLCorners);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLRoadcLcLCorners);
      instance.SetDestructor(&destruct_TreeSearchcLcLRoadcLcLCorners);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::Road::Corners*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::Road::Corners*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::Road::Corners*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TreeSearchcLcLBigBite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TreeSearchcLcLBigBite(void *p);
   static void deleteArray_TreeSearchcLcLBigBite(void *p);
   static void destruct_TreeSearchcLcLBigBite(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TreeSearch::BigBite*)
   {
      ::TreeSearch::BigBite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TreeSearch::BigBite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TreeSearch::BigBite", ::TreeSearch::BigBite::Class_Version(), "./BigBite.h", 17,
                  typeid(::TreeSearch::BigBite), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TreeSearch::BigBite::Dictionary, isa_proxy, 4,
                  sizeof(::TreeSearch::BigBite) );
      instance.SetDelete(&delete_TreeSearchcLcLBigBite);
      instance.SetDeleteArray(&deleteArray_TreeSearchcLcLBigBite);
      instance.SetDestructor(&destruct_TreeSearchcLcLBigBite);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TreeSearch::BigBite*)
   {
      return GenerateInitInstanceLocal((::TreeSearch::BigBite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TreeSearch::BigBite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaHe3SpinModule_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void THaHe3SpinModule_Dictionary();
   static void *new_THaHe3SpinModule(void *p = 0);
   static void *newArray_THaHe3SpinModule(Long_t size, void *p);
   static void delete_THaHe3SpinModule(void *p);
   static void deleteArray_THaHe3SpinModule(void *p);
   static void destruct_THaHe3SpinModule(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaHe3SpinModule*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::THaHe3SpinModule) == sizeof( ::ROOTShadow::Shadow::THaHe3SpinModule));
      ::THaHe3SpinModule *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::THaHe3SpinModule),0);
      static ::ROOT::TGenericClassInfo 
         instance("THaHe3SpinModule", "./THaHe3SpinModule.h", 25,
                  typeid(::THaHe3SpinModule), ::ROOT::DefineBehavior(ptr, ptr),
                  &THaHe3SpinModule_ShowMembers, &THaHe3SpinModule_Dictionary, isa_proxy, 4,
                  sizeof(::THaHe3SpinModule) );
      instance.SetNew(&new_THaHe3SpinModule);
      instance.SetNewArray(&newArray_THaHe3SpinModule);
      instance.SetDelete(&delete_THaHe3SpinModule);
      instance.SetDeleteArray(&deleteArray_THaHe3SpinModule);
      instance.SetDestructor(&destruct_THaHe3SpinModule);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaHe3SpinModule*)
   {
      return GenerateInitInstanceLocal((::THaHe3SpinModule*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaHe3SpinModule*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void THaHe3SpinModule_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3SpinModule*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void THaHe3Target_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_THaHe3Target(void *p);
   static void deleteArray_THaHe3Target(void *p);
   static void destruct_THaHe3Target(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaHe3Target*)
   {
      ::THaHe3Target *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaHe3Target >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaHe3Target", ::THaHe3Target::Class_Version(), "./THaHe3Target.h", 46,
                  typeid(::THaHe3Target), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaHe3Target::Dictionary, isa_proxy, 4,
                  sizeof(::THaHe3Target) );
      instance.SetDelete(&delete_THaHe3Target);
      instance.SetDeleteArray(&deleteArray_THaHe3Target);
      instance.SetDestructor(&destruct_THaHe3Target);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaHe3Target*)
   {
      return GenerateInitInstanceLocal((::THaHe3Target*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaHe3Target*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaADCHe3Spin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaADCHe3Spin(void *p = 0);
   static void *newArray_THaADCHe3Spin(Long_t size, void *p);
   static void delete_THaADCHe3Spin(void *p);
   static void deleteArray_THaADCHe3Spin(void *p);
   static void destruct_THaADCHe3Spin(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaADCHe3Spin*)
   {
      ::THaADCHe3Spin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaADCHe3Spin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaADCHe3Spin", ::THaADCHe3Spin::Class_Version(), "./THaADCHe3Spin.h", 45,
                  typeid(::THaADCHe3Spin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaADCHe3Spin::Dictionary, isa_proxy, 4,
                  sizeof(::THaADCHe3Spin) );
      instance.SetNew(&new_THaADCHe3Spin);
      instance.SetNewArray(&newArray_THaADCHe3Spin);
      instance.SetDelete(&delete_THaADCHe3Spin);
      instance.SetDeleteArray(&deleteArray_THaADCHe3Spin);
      instance.SetDestructor(&destruct_THaADCHe3Spin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaADCHe3Spin*)
   {
      return GenerateInitInstanceLocal((::THaADCHe3Spin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaADCHe3Spin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void THaADCHe3SpincLcLADCStateBound_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void THaADCHe3SpincLcLADCStateBound_Dictionary();
   static void *new_THaADCHe3SpincLcLADCStateBound(void *p = 0);
   static void *newArray_THaADCHe3SpincLcLADCStateBound(Long_t size, void *p);
   static void delete_THaADCHe3SpincLcLADCStateBound(void *p);
   static void deleteArray_THaADCHe3SpincLcLADCStateBound(void *p);
   static void destruct_THaADCHe3SpincLcLADCStateBound(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaADCHe3Spin::ADCStateBound*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::THaADCHe3Spin::ADCStateBound) == sizeof( ::ROOTShadow::Shadow::THaADCHe3Spin::ADCStateBound));
      ::THaADCHe3Spin::ADCStateBound *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::THaADCHe3Spin::ADCStateBound),0);
      static ::ROOT::TGenericClassInfo 
         instance("THaADCHe3Spin::ADCStateBound", "./THaADCHe3Spin.h", 75,
                  typeid(::THaADCHe3Spin::ADCStateBound), ::ROOT::DefineBehavior(ptr, ptr),
                  &THaADCHe3SpincLcLADCStateBound_ShowMembers, &THaADCHe3SpincLcLADCStateBound_Dictionary, isa_proxy, 4,
                  sizeof(::THaADCHe3Spin::ADCStateBound) );
      instance.SetNew(&new_THaADCHe3SpincLcLADCStateBound);
      instance.SetNewArray(&newArray_THaADCHe3SpincLcLADCStateBound);
      instance.SetDelete(&delete_THaADCHe3SpincLcLADCStateBound);
      instance.SetDeleteArray(&deleteArray_THaADCHe3SpincLcLADCStateBound);
      instance.SetDestructor(&destruct_THaADCHe3SpincLcLADCStateBound);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaADCHe3Spin::ADCStateBound*)
   {
      return GenerateInitInstanceLocal((::THaADCHe3Spin::ADCStateBound*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaADCHe3Spin::ADCStateBound*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void THaADCHe3SpincLcLADCStateBound_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin::ADCStateBound*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void THaADCHe3SpincLcLChanDef_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void THaADCHe3SpincLcLChanDef_t_Dictionary();
   static void *new_THaADCHe3SpincLcLChanDef_t(void *p = 0);
   static void *newArray_THaADCHe3SpincLcLChanDef_t(Long_t size, void *p);
   static void delete_THaADCHe3SpincLcLChanDef_t(void *p);
   static void deleteArray_THaADCHe3SpincLcLChanDef_t(void *p);
   static void destruct_THaADCHe3SpincLcLChanDef_t(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaADCHe3Spin::ChanDef_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::THaADCHe3Spin::ChanDef_t) == sizeof( ::ROOTShadow::Shadow::THaADCHe3Spin::ChanDef_t));
      ::THaADCHe3Spin::ChanDef_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::THaADCHe3Spin::ChanDef_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("THaADCHe3Spin::ChanDef_t", "./THaADCHe3Spin.h", 81,
                  typeid(::THaADCHe3Spin::ChanDef_t), ::ROOT::DefineBehavior(ptr, ptr),
                  &THaADCHe3SpincLcLChanDef_t_ShowMembers, &THaADCHe3SpincLcLChanDef_t_Dictionary, isa_proxy, 4,
                  sizeof(::THaADCHe3Spin::ChanDef_t) );
      instance.SetNew(&new_THaADCHe3SpincLcLChanDef_t);
      instance.SetNewArray(&newArray_THaADCHe3SpincLcLChanDef_t);
      instance.SetDelete(&delete_THaADCHe3SpincLcLChanDef_t);
      instance.SetDeleteArray(&deleteArray_THaADCHe3SpincLcLChanDef_t);
      instance.SetDestructor(&destruct_THaADCHe3SpincLcLChanDef_t);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaADCHe3Spin::ChanDef_t*)
   {
      return GenerateInitInstanceLocal((::THaADCHe3Spin::ChanDef_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaADCHe3Spin::ChanDef_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void THaADCHe3SpincLcLChanDef_t_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin::ChanDef_t*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void THaBitHe3Spin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THaBitHe3Spin(void *p = 0);
   static void *newArray_THaBitHe3Spin(Long_t size, void *p);
   static void delete_THaBitHe3Spin(void *p);
   static void deleteArray_THaBitHe3Spin(void *p);
   static void destruct_THaBitHe3Spin(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::THaBitHe3Spin*)
   {
      ::THaBitHe3Spin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THaBitHe3Spin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THaBitHe3Spin", ::THaBitHe3Spin::Class_Version(), "./THaBitHe3Spin.h", 45,
                  typeid(::THaBitHe3Spin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::THaBitHe3Spin::Dictionary, isa_proxy, 4,
                  sizeof(::THaBitHe3Spin) );
      instance.SetNew(&new_THaBitHe3Spin);
      instance.SetNewArray(&newArray_THaBitHe3Spin);
      instance.SetDelete(&delete_THaBitHe3Spin);
      instance.SetDeleteArray(&deleteArray_THaBitHe3Spin);
      instance.SetDestructor(&destruct_THaBitHe3Spin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::THaBitHe3Spin*)
   {
      return GenerateInitInstanceLocal((::THaBitHe3Spin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THaBitHe3Spin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr THaOptics::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOptics::Class_Name()
{
   return "THaOptics";
}

//______________________________________________________________________________
const char *THaOptics::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOptics::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOptics::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOptics::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBigBite::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBigBite::Class_Name()
{
   return "THaBigBite";
}

//______________________________________________________________________________
const char *THaBigBite::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBigBite::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBigBite::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBigBite::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBite*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr MWDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MWDC::Class_Name()
{
   return "TreeSearch::MWDC";
}

//______________________________________________________________________________
const char *MWDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MWDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MWDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MWDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MWDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MWDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MWDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MWDC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
//______________________________________________________________________________
atomic_TClass_ptr THaTriggerPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaTriggerPlane::Class_Name()
{
   return "THaTriggerPlane";
}

//______________________________________________________________________________
const char *THaTriggerPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaTriggerPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaTriggerPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaTriggerPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBigBiteTpMwdc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBigBiteTpMwdc::Class_Name()
{
   return "THaBigBiteTpMwdc";
}

//______________________________________________________________________________
const char *THaBigBiteTpMwdc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBiteTpMwdc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBigBiteTpMwdc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBiteTpMwdc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBigBiteTpMwdc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBiteTpMwdc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBigBiteTpMwdc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBigBiteTpMwdc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BBDecData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BBDecData::Class_Name()
{
   return "BBDecData";
}

//______________________________________________________________________________
const char *BBDecData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BBDecData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BBDecData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::BBDecData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BBDecData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BBDecData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BBDecData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::BBDecData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOptics::TOpticsDir::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOptics::TOpticsDir::Class_Name()
{
   return "THaOptics::TOpticsDir";
}

//______________________________________________________________________________
const char *THaOptics::TOpticsDir::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsDir*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOptics::TOpticsDir::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsDir*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOptics::TOpticsDir::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsDir*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOptics::TOpticsDir::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsDir*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOptics::TOpticsPos::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOptics::TOpticsPos::Class_Name()
{
   return "THaOptics::TOpticsPos";
}

//______________________________________________________________________________
const char *THaOptics::TOpticsPos::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsPos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOptics::TOpticsPos::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsPos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOptics::TOpticsPos::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsPos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOptics::TOpticsPos::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOptics::TOpticsPos*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOpticsAGen::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOpticsAGen::Class_Name()
{
   return "THaOpticsAGen";
}

//______________________________________________________________________________
const char *THaOpticsAGen::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAGen*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOpticsAGen::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAGen*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOpticsAGen::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAGen*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOpticsAGen::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAGen*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOpticsHRS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOpticsHRS::Class_Name()
{
   return "THaOpticsHRS";
}

//______________________________________________________________________________
const char *THaOpticsHRS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsHRS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOpticsHRS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsHRS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOpticsHRS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsHRS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOpticsHRS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsHRS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOpticsAnalytical::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOpticsAnalytical::Class_Name()
{
   return "THaOpticsAnalytical";
}

//______________________________________________________________________________
const char *THaOpticsAnalytical::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAnalytical*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOpticsAnalytical::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAnalytical*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOpticsAnalytical::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAnalytical*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOpticsAnalytical::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsAnalytical*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaOpticsNoFeild::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaOpticsNoFeild::Class_Name()
{
   return "THaOpticsNoFeild";
}

//______________________________________________________________________________
const char *THaOpticsNoFeild::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsNoFeild*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaOpticsNoFeild::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsNoFeild*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaOpticsNoFeild::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsNoFeild*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaOpticsNoFeild::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaOpticsNoFeild*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaScintPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaScintPlane::Class_Name()
{
   return "THaScintPlane";
}

//______________________________________________________________________________
const char *THaScintPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaScintPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaScintPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaScintPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaScintPMT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaScintPMT::Class_Name()
{
   return "THaScintPMT";
}

//______________________________________________________________________________
const char *THaScintPMT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaScintPMT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaScintPMT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaScintPMT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPMT*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaScintHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaScintHit::Class_Name()
{
   return "THaScintHit";
}

//______________________________________________________________________________
const char *THaScintHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaScintHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaScintHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaScintHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaScintBar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaScintBar::Class_Name()
{
   return "THaScintBar";
}

//______________________________________________________________________________
const char *THaScintBar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintBar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaScintBar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintBar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaScintBar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintBar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaScintBar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintBar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaTriggerPlaneHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaTriggerPlaneHit::Class_Name()
{
   return "THaTriggerPlaneHit";
}

//______________________________________________________________________________
const char *THaTriggerPlaneHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlaneHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaTriggerPlaneHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlaneHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaTriggerPlaneHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlaneHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaTriggerPlaneHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTriggerPlaneHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaAdcHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaAdcHit::Class_Name()
{
   return "THaAdcHit";
}

//______________________________________________________________________________
const char *THaAdcHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaAdcHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaAdcHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaAdcHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaAdcHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaAdcHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaAdcHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaAdcHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaTdcHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaTdcHit::Class_Name()
{
   return "THaTdcHit";
}

//______________________________________________________________________________
const char *THaTdcHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTdcHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaTdcHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTdcHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaTdcHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTdcHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaTdcHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTdcHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaPartialHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaPartialHit::Class_Name()
{
   return "THaPartialHit";
}

//______________________________________________________________________________
const char *THaPartialHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaPartialHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaPartialHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaPartialHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaPartialHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaPartialHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaPartialHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaPartialHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaMWDCPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaMWDCPlane::Class_Name()
{
   return "THaMWDCPlane";
}

//______________________________________________________________________________
const char *THaMWDCPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaMWDCPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaMWDCPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaMWDCPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaMWDCGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaMWDCGroup::Class_Name()
{
   return "THaMWDCGroup";
}

//______________________________________________________________________________
const char *THaMWDCGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaMWDCGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaMWDCGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaMWDCGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaMWDCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaMWDCHit::Class_Name()
{
   return "THaMWDCHit";
}

//______________________________________________________________________________
const char *THaMWDCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaMWDCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaMWDCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaMWDCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaMWDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaMWDC::Class_Name()
{
   return "THaMWDC";
}

//______________________________________________________________________________
const char *THaMWDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaMWDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaMWDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaMWDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaMWDCLine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaMWDCLine::Class_Name()
{
   return "THaMWDCLine";
}

//______________________________________________________________________________
const char *THaMWDCLine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCLine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaMWDCLine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCLine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaMWDCLine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCLine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaMWDCLine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaMWDCLine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaVDCTableTTDConv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaVDCTableTTDConv::Class_Name()
{
   return "THaVDCTableTTDConv";
}

//______________________________________________________________________________
const char *THaVDCTableTTDConv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCTableTTDConv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaVDCTableTTDConv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCTableTTDConv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaVDCTableTTDConv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCTableTTDConv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaVDCTableTTDConv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCTableTTDConv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaVDC2DTableTTDConv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaVDC2DTableTTDConv::Class_Name()
{
   return "THaVDC2DTableTTDConv";
}

//______________________________________________________________________________
const char *THaVDC2DTableTTDConv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDC2DTableTTDConv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaVDC2DTableTTDConv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDC2DTableTTDConv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaVDC2DTableTTDConv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDC2DTableTTDConv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaVDC2DTableTTDConv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDC2DTableTTDConv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaVDCFuncTTDConv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaVDCFuncTTDConv::Class_Name()
{
   return "THaVDCFuncTTDConv";
}

//______________________________________________________________________________
const char *THaVDCFuncTTDConv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCFuncTTDConv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaVDCFuncTTDConv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCFuncTTDConv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaVDCFuncTTDConv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCFuncTTDConv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaVDCFuncTTDConv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCFuncTTDConv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaVDCLinearTTDConv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaVDCLinearTTDConv::Class_Name()
{
   return "THaVDCLinearTTDConv";
}

//______________________________________________________________________________
const char *THaVDCLinearTTDConv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCLinearTTDConv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaVDCLinearTTDConv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCLinearTTDConv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaVDCLinearTTDConv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCLinearTTDConv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaVDCLinearTTDConv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaVDCLinearTTDConv*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBBShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBBShower::Class_Name()
{
   return "THaBBShower";
}

//______________________________________________________________________________
const char *THaBBShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBBShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBBShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBBShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShower*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBBTotalShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBBTotalShower::Class_Name()
{
   return "THaBBTotalShower";
}

//______________________________________________________________________________
const char *THaBBTotalShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBTotalShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBBTotalShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBTotalShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBBTotalShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBTotalShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBBTotalShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBTotalShower*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaTimingPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaTimingPlane::Class_Name()
{
   return "THaTimingPlane";
}

//______________________________________________________________________________
const char *THaTimingPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTimingPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaTimingPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaTimingPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaTimingPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTimingPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaTimingPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaTimingPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaScintPlaneDet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaScintPlaneDet::Class_Name()
{
   return "THaScintPlaneDet";
}

//______________________________________________________________________________
const char *THaScintPlaneDet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlaneDet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaScintPlaneDet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlaneDet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaScintPlaneDet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlaneDet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaScintPlaneDet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaScintPlaneDet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBBShowerBlock::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBBShowerBlock::Class_Name()
{
   return "THaBBShowerBlock";
}

//______________________________________________________________________________
const char *THaBBShowerBlock::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerBlock*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBBShowerBlock::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerBlock*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBBShowerBlock::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerBlock*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBBShowerBlock::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerBlock*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBBShowerCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBBShowerCluster::Class_Name()
{
   return "THaBBShowerCluster";
}

//______________________________________________________________________________
const char *THaBBShowerCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBBShowerCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBBShowerCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBBShowerCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBBShowerCluster*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr WirePlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WirePlane::Class_Name()
{
   return "TreeSearch::WirePlane";
}

//______________________________________________________________________________
const char *WirePlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::WirePlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WirePlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::WirePlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WirePlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::WirePlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WirePlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::WirePlane*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Projection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Projection::Class_Name()
{
   return "TreeSearch::Projection";
}

//______________________________________________________________________________
const char *Projection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Projection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Projection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Projection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Projection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Projection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Projection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Projection*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Road::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Road::Class_Name()
{
   return "TreeSearch::Road";
}

//______________________________________________________________________________
const char *Road::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Road::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Road::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Road::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr TimeToDistConv::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TimeToDistConv::Class_Name()
{
   return "TreeSearch::TimeToDistConv";
}

//______________________________________________________________________________
const char *TimeToDistConv::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TimeToDistConv*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TimeToDistConv::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TimeToDistConv*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TimeToDistConv::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TimeToDistConv*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TimeToDistConv::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TimeToDistConv*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Hit::Class_Name()
{
   return "TreeSearch::Hit";
}

//______________________________________________________________________________
const char *Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr FitCoord::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FitCoord::Class_Name()
{
   return "TreeSearch::FitCoord";
}

//______________________________________________________________________________
const char *FitCoord::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::FitCoord*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FitCoord::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::FitCoord*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FitCoord::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::FitCoord*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FitCoord::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::FitCoord*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr LinearTTD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LinearTTD::Class_Name()
{
   return "TreeSearch::LinearTTD";
}

//______________________________________________________________________________
const char *LinearTTD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::LinearTTD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LinearTTD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::LinearTTD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LinearTTD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::LinearTTD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LinearTTD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::LinearTTD*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr TanhFitTTD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TanhFitTTD::Class_Name()
{
   return "TreeSearch::TanhFitTTD";
}

//______________________________________________________________________________
const char *TanhFitTTD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TanhFitTTD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TanhFitTTD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TanhFitTTD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TanhFitTTD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TanhFitTTD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TanhFitTTD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TanhFitTTD*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr MCHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCHit::Class_Name()
{
   return "TreeSearch::MCHit";
}

//______________________________________________________________________________
const char *MCHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MCHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MCHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MCHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::MCHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr HitPairIter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitPairIter::Class_Name()
{
   return "TreeSearch::HitPairIter";
}

//______________________________________________________________________________
const char *HitPairIter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitPairIter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitPairIter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitPairIter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitPairIter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitPairIter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitPairIter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitPairIter*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr HitSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitSet::Class_Name()
{
   return "TreeSearch::HitSet";
}

//______________________________________________________________________________
const char *HitSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::HitSet*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr TreeWalk::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TreeWalk::Class_Name()
{
   return "TreeSearch::TreeWalk";
}

//______________________________________________________________________________
const char *TreeWalk::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeWalk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TreeWalk::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeWalk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TreeWalk::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeWalk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TreeWalk::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeWalk*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Bits::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Bits::Class_Name()
{
   return "TreeSearch::Bits";
}

//______________________________________________________________________________
const char *Bits::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Bits*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Bits::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Bits*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Bits::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Bits*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Bits::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Bits*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr PatternTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PatternTree::Class_Name()
{
   return "TreeSearch::PatternTree";
}

//______________________________________________________________________________
const char *PatternTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PatternTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PatternTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PatternTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternTree*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Hitpattern::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Hitpattern::Class_Name()
{
   return "TreeSearch::Hitpattern";
}

//______________________________________________________________________________
const char *Hitpattern::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hitpattern*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Hitpattern::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hitpattern*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Hitpattern::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hitpattern*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Hitpattern::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Hitpattern*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr PatternGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PatternGenerator::Class_Name()
{
   return "TreeSearch::PatternGenerator";
}

//______________________________________________________________________________
const char *PatternGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PatternGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PatternGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PatternGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Road::Point::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Road::Point::Class_Name()
{
   return "TreeSearch::Road::Point";
}

//______________________________________________________________________________
const char *Road::Point::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Point*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Road::Point::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Point*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Road::Point::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Point*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Road::Point::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Point*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr Road::Corners::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Road::Corners::Class_Name()
{
   return "TreeSearch::Road::Corners";
}

//______________________________________________________________________________
const char *Road::Corners::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Corners*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Road::Corners::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Corners*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Road::Corners::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Corners*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Road::Corners::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::Road::Corners*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
      namespace TreeSearch {
//______________________________________________________________________________
atomic_TClass_ptr BigBite::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BigBite::Class_Name()
{
   return "TreeSearch::BigBite";
}

//______________________________________________________________________________
const char *BigBite::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::BigBite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BigBite::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::BigBite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BigBite::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::BigBite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BigBite::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::BigBite*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace TreeSearch
//______________________________________________________________________________
atomic_TClass_ptr THaHe3Target::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaHe3Target::Class_Name()
{
   return "THaHe3Target";
}

//______________________________________________________________________________
const char *THaHe3Target::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3Target*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaHe3Target::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3Target*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaHe3Target::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3Target*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaHe3Target::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3Target*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaADCHe3Spin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaADCHe3Spin::Class_Name()
{
   return "THaADCHe3Spin";
}

//______________________________________________________________________________
const char *THaADCHe3Spin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaADCHe3Spin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaADCHe3Spin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaADCHe3Spin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr THaBitHe3Spin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *THaBitHe3Spin::Class_Name()
{
   return "THaBitHe3Spin";
}

//______________________________________________________________________________
const char *THaBitHe3Spin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBitHe3Spin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THaBitHe3Spin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::THaBitHe3Spin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THaBitHe3Spin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBitHe3Spin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THaBitHe3Spin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::THaBitHe3Spin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void THaBigBite::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBigBite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBigBite::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBigBite::Class(),this);
   }
}

//______________________________________________________________________________
void THaBigBite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBigBite.
      TClass *R__cl = ::THaBigBite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOptics", &fOptics);
      R__insp.InspectMember(fOptics, "fOptics.");
      THaSpectrometer::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaBigBite(void *p) {
      delete ((::THaBigBite*)p);
   }
   static void deleteArray_THaBigBite(void *p) {
      delete [] ((::THaBigBite*)p);
   }
   static void destruct_THaBigBite(void *p) {
      typedef ::THaBigBite current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBigBite

//______________________________________________________________________________
void THaBigBiteTpMwdc::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBigBiteTpMwdc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBigBiteTpMwdc::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBigBiteTpMwdc::Class(),this);
   }
}

//______________________________________________________________________________
void THaBigBiteTpMwdc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBigBiteTpMwdc.
      TClass *R__cl = ::THaBigBiteTpMwdc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWDC", &fMWDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTriggerPlane", &fTriggerPlane);
      THaBigBite::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaBigBiteTpMwdc(void *p) {
      delete ((::THaBigBiteTpMwdc*)p);
   }
   static void deleteArray_THaBigBiteTpMwdc(void *p) {
      delete [] ((::THaBigBiteTpMwdc*)p);
   }
   static void destruct_THaBigBiteTpMwdc(void *p) {
      typedef ::THaBigBiteTpMwdc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBigBiteTpMwdc

//______________________________________________________________________________
void THaScintPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaScintPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaScintPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaScintPlane::Class(),this);
   }
}

//______________________________________________________________________________
void THaScintPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaScintPlane.
      TClass *R__cl = ::THaScintPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBars", &fBars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBars", &fNBars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefHits", &fRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLaHits", &fLaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRaHits", &fRaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLtHits", &fLtHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtHits", &fRtHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartHits", &fPartHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefCh", &fRefCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRefHits", &fNRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefOkay", &fRefOkay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLTNhit", &fLTNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRTNhit", &fRTNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLANhit", &fLANhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRANhit", &fRANhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPaddlesHit", &fNPaddlesHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLtIndex", &fLtIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtIndex", &fRtIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLaIndex", &fLaIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRaIndex", &fRaIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLE", &fLE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRE", &fRE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLrawA", &fLrawA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRrawA", &fRrawA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLpedcA", &fLpedcA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRpedcA", &fRpedcA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLT", &fLT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRT", &fRT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLTcounter", &fLTcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRTcounter", &fRTcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitcounter", &hitcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TDIFF", &TDIFF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF", &TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_tot", &T_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Yt_pos", &Yt_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ya_pos", &Ya_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Y_pred", &Y_pred);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Y_dev", &Y_dev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle", &fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXax", &fXax);
      R__insp.InspectMember(fXax, "fXax.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCount", &fEventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorReferenceChCount", &fErrorReferenceChCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorReferenceChRateWarningThreshold", &fErrorReferenceChRateWarningThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTooManyErrRefCh", &fTooManyErrRefCh);
      THaSubDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaScintPlane(void *p) {
      return  p ? new(p) ::THaScintPlane : new ::THaScintPlane;
   }
   static void *newArray_THaScintPlane(Long_t nElements, void *p) {
      return p ? new(p) ::THaScintPlane[nElements] : new ::THaScintPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaScintPlane(void *p) {
      delete ((::THaScintPlane*)p);
   }
   static void deleteArray_THaScintPlane(void *p) {
      delete [] ((::THaScintPlane*)p);
   }
   static void destruct_THaScintPlane(void *p) {
      typedef ::THaScintPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaScintPlane

//______________________________________________________________________________
void THaAdcHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaAdcHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaAdcHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaAdcHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaAdcHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaAdcHit.
      TClass *R__cl = ::THaAdcHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMT", &fPMT);
      R__insp.InspectMember(fPMT, "fPMT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawAmpl", &fRawAmpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAmplPedCor", &fAmplPedCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAmpl", &fAmpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSide", &fSide);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaAdcHit(void *p) {
      return  p ? new(p) ::THaAdcHit : new ::THaAdcHit;
   }
   static void *newArray_THaAdcHit(Long_t nElements, void *p) {
      return p ? new(p) ::THaAdcHit[nElements] : new ::THaAdcHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaAdcHit(void *p) {
      delete ((::THaAdcHit*)p);
   }
   static void deleteArray_THaAdcHit(void *p) {
      delete [] ((::THaAdcHit*)p);
   }
   static void destruct_THaAdcHit(void *p) {
      typedef ::THaAdcHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaAdcHit

//______________________________________________________________________________
void THaPartialHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaPartialHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaPartialHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaPartialHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaPartialHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaPartialHit.
      TClass *R__cl = ::THaPartialHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScBar", &fScBar);
      R__insp.InspectMember(fScBar, "fScBar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCaseNum", &fCaseNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLt", &fLt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLt_raw", &fLt_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRt", &fRt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRt_raw", &fRt_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLa", &fLa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLa_raw", &fLa_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRa", &fRa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRa_raw", &fRa_raw);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaPartialHit(void *p) {
      return  p ? new(p) ::THaPartialHit : new ::THaPartialHit;
   }
   static void *newArray_THaPartialHit(Long_t nElements, void *p) {
      return p ? new(p) ::THaPartialHit[nElements] : new ::THaPartialHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaPartialHit(void *p) {
      delete ((::THaPartialHit*)p);
   }
   static void deleteArray_THaPartialHit(void *p) {
      delete [] ((::THaPartialHit*)p);
   }
   static void destruct_THaPartialHit(void *p) {
      typedef ::THaPartialHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaPartialHit

//______________________________________________________________________________
void THaScintBar::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaScintBar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaScintBar::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaScintBar::Class(),this);
   }
}

//______________________________________________________________________________
void THaScintBar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaScintBar.
      TClass *R__cl = ::THaScintBar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLPMT", &fLPMT);
      R__insp.InspectMember(fLPMT, "fLPMT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRPMT", &fRPMT);
      R__insp.InspectMember(fRPMT, "fRPMT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXPosPlane", &fXPosPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYPosPlane", &fYPosPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPosPlane", &fZPosPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXWidth", &fXWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYWidth", &fYWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZWidth", &fZWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fc", &fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fatt", &fatt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarType", &fBarType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum_nd", &fBarNum_nd);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaScintBar(void *p) {
      return  p ? new(p) ::THaScintBar : new ::THaScintBar;
   }
   static void *newArray_THaScintBar(Long_t nElements, void *p) {
      return p ? new(p) ::THaScintBar[nElements] : new ::THaScintBar[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaScintBar(void *p) {
      delete ((::THaScintBar*)p);
   }
   static void deleteArray_THaScintBar(void *p) {
      delete [] ((::THaScintBar*)p);
   }
   static void destruct_THaScintBar(void *p) {
      typedef ::THaScintBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaScintBar

//______________________________________________________________________________
void THaScintHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaScintHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaScintHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaScintHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaScintHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaScintHit.
      TClass *R__cl = ::THaScintHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScBar", &fScBar);
      R__insp.InspectMember(fScBar, "fScBar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneNum", &fPlaneNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum_nd", &fBarNum_nd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitXPos", &fHitXPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitYPos", &fHitYPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitZPos", &fHitZPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitTOF", &fHitTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdiff", &fTdiff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitEdep", &fHitEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrder", &fOrder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusterNum", &fClusterNum);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaScintHit(void *p) {
      return  p ? new(p) ::THaScintHit : new ::THaScintHit;
   }
   static void *newArray_THaScintHit(Long_t nElements, void *p) {
      return p ? new(p) ::THaScintHit[nElements] : new ::THaScintHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaScintHit(void *p) {
      delete ((::THaScintHit*)p);
   }
   static void deleteArray_THaScintHit(void *p) {
      delete [] ((::THaScintHit*)p);
   }
   static void destruct_THaScintHit(void *p) {
      typedef ::THaScintHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaScintHit

//______________________________________________________________________________
void THaScintPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaScintPMT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaScintPMT::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaScintPMT::Class(),this);
   }
}

//______________________________________________________________________________
void THaScintPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaScintPMT.
      TClass *R__cl = ::THaScintPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain", &fGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPed", &fPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCRes", &fTDCRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTOffset", &fTOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeWalkPar", &fTimeWalkPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeWalkExp", &fTimeWalkExp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScBar", &fScBar);
      R__insp.InspectMember(fScBar, "fScBar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSide", &fSide);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawLowLim", &fRawLowLim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawUpLim", &fRawUpLim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawWrapAround", &fRawWrapAround);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaScintPMT(void *p) {
      return  p ? new(p) ::THaScintPMT : new ::THaScintPMT;
   }
   static void *newArray_THaScintPMT(Long_t nElements, void *p) {
      return p ? new(p) ::THaScintPMT[nElements] : new ::THaScintPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaScintPMT(void *p) {
      delete ((::THaScintPMT*)p);
   }
   static void deleteArray_THaScintPMT(void *p) {
      delete [] ((::THaScintPMT*)p);
   }
   static void destruct_THaScintPMT(void *p) {
      typedef ::THaScintPMT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaScintPMT

//______________________________________________________________________________
void THaTdcHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaTdcHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaTdcHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaTdcHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaTdcHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaTdcHit.
      TClass *R__cl = ::THaTdcHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMT", &fPMT);
      R__insp.InspectMember(fPMT, "fPMT.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawTime", &fRawTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBarNum", &fBarNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSide", &fSide);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaTdcHit(void *p) {
      return  p ? new(p) ::THaTdcHit : new ::THaTdcHit;
   }
   static void *newArray_THaTdcHit(Long_t nElements, void *p) {
      return p ? new(p) ::THaTdcHit[nElements] : new ::THaTdcHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaTdcHit(void *p) {
      delete ((::THaTdcHit*)p);
   }
   static void deleteArray_THaTdcHit(void *p) {
      delete [] ((::THaTdcHit*)p);
   }
   static void destruct_THaTdcHit(void *p) {
      typedef ::THaTdcHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaTdcHit

//______________________________________________________________________________
void THaTriggerPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaTriggerPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaTriggerPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaTriggerPlane::Class(),this);
   }
}

//______________________________________________________________________________
void THaTriggerPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaTriggerPlane.
      TClass *R__cl = ::THaTriggerPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartialHits", &fPartialHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackProj", &fTrackProj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRatioE", &fMatchRatioE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRatiodE", &fMatchRatiodE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRatioTrack", &fMatchRatioTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEplane", &fEplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEplane", &fdEplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitAcceptanceDx", &fHitAcceptanceDx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitAcceptanceDy", &fHitAcceptanceDy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitAcceptanceDz", &fHitAcceptanceDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitAcceptanceMinDt", &fHitAcceptanceMinDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitAcceptanceMaxDt", &fHitAcceptanceMaxDt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackAcceptanceDx", &fTrackAcceptanceDx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackAcceptanceDy", &fTrackAcceptanceDy);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaTriggerPlane(void *p) {
      delete ((::THaTriggerPlane*)p);
   }
   static void deleteArray_THaTriggerPlane(void *p) {
      delete [] ((::THaTriggerPlane*)p);
   }
   static void destruct_THaTriggerPlane(void *p) {
      typedef ::THaTriggerPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaTriggerPlane

//______________________________________________________________________________
void THaTriggerPlaneHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaTriggerPlaneHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaTriggerPlaneHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaTriggerPlaneHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaTriggerPlaneHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaTriggerPlaneHit.
      TClass *R__cl = ::THaTriggerPlaneHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEHit", &fEHit);
      R__insp.InspectMember(fEHit, "fEHit.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdEHit", &fdEHit);
      R__insp.InspectMember(fdEHit, "fdEHit.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaTriggerPlaneHit(void *p) {
      delete ((::THaTriggerPlaneHit*)p);
   }
   static void deleteArray_THaTriggerPlaneHit(void *p) {
      delete [] ((::THaTriggerPlaneHit*)p);
   }
   static void destruct_THaTriggerPlaneHit(void *p) {
      typedef ::THaTriggerPlaneHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaTriggerPlaneHit

//______________________________________________________________________________
void THaMWDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaMWDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaMWDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaMWDC::Class(),this);
   }
}

//______________________________________________________________________________
void THaMWDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaMWDC.
      TClass *R__cl = ::THaMWDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlanes", &fPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroups", (void*)&fGroups);
      R__insp.InspectMember("vector<THaMWDCGroup*>", (void*)&fGroups, "fGroups.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConstructMatrix[500000]", &fConstructMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fValidBits[500000]", fValidBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneNumbersForBits[500000][21]", fPlaneNumbersForBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fReconstructBits", &fReconstructBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtracks", &fNtracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNmatrices", &fNmatrices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPlanes", &fNPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShowerStatus", &fShowerStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShowerOrigin", &fShowerOrigin);
      R__insp.InspectMember(fShowerOrigin, "fShowerOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalConsideredEvents", &fTotalConsideredEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalTrackingEvents", &fTotalTrackingEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRejectedTrackingEvents", &fRejectedTrackingEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHardMaxTrackingEvents", &fHardMaxTrackingEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSoftMaxTrackingEvents", &fSoftMaxTrackingEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetXhigh", &fTargetXhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetXlow", &fTargetXlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetYhigh", &fTargetYhigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetYlow", &fTargetYlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetZ", &fTargetZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetXExt", &fTargetXExt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetYExt", &fTargetYExt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShowerXExt", &fShowerXExt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fShowerYExt", &fShowerYExt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetWindowXOffset", &fTargetWindowXOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBench", &fBench);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoBench", &fDoBench);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTooBusy", &fTooBusy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoarseProcTime", &fCoarseProcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFineProcTime", &fFineProcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEstNGroups", &fEstNGroups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEstNCalls", &fEstNCalls);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNGroups", &fNGroups);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNCalls", &fNCalls);
      THaTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaMWDC(void *p) {
      delete ((::THaMWDC*)p);
   }
   static void deleteArray_THaMWDC(void *p) {
      delete [] ((::THaMWDC*)p);
   }
   static void destruct_THaMWDC(void *p) {
      typedef ::THaMWDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaMWDC

//______________________________________________________________________________
void THaMWDCPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaMWDCPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaMWDCPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaMWDCPlane::Class(),this);
   }
}

//______________________________________________________________________________
void THaMWDCPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaMWDCPlane.
      TClass *R__cl = ::THaMWDCPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWires", &fWires);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWiresHit", &fNWiresHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNWires", &fNWires);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventType", &fEventType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBit3", &fBit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefCh", &fRefCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefHits", &fRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRefHits", &fNRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRefCh", &fNRefCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefOkay", &fRefOkay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinTime", &fMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTime", &fMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlags", &fFlags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXWidth", &fXWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYWidth", &fYWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosRes", &fPosRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMax", &fXMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXMin", &fXMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMax", &fYMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMin", &fYMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHMax", &fTHMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHMin", &fTHMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPHMax", &fPHMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPHMin", &fPHMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWBeg", &fWBeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWSpac", &fWSpac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCellHeight", &fCellHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWAngle", &fWAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneType", &fPlaneType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCRes", &fTDCRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVel", &fDriftVel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftC1", &fDriftC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftC2", &fDriftC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftC3", &fDriftC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXCorr", &fXCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYCorr", &fYCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaCorr", &fThetaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiCorr", &fPhiCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseInReconstruct", &fUseInReconstruct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTTDConv", &fTTDConv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWDC", &fMWDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalHits", &fTotalHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRejectedHits", &fRejectedHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRawT", &fRawT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCorT", &fCorT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTcounter", &fTcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefT", &fRefT);
      THaSubDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaMWDCPlane(void *p) {
      return  p ? new(p) ::THaMWDCPlane : new ::THaMWDCPlane;
   }
   static void *newArray_THaMWDCPlane(Long_t nElements, void *p) {
      return p ? new(p) ::THaMWDCPlane[nElements] : new ::THaMWDCPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaMWDCPlane(void *p) {
      delete ((::THaMWDCPlane*)p);
   }
   static void deleteArray_THaMWDCPlane(void *p) {
      delete [] ((::THaMWDCPlane*)p);
   }
   static void destruct_THaMWDCPlane(void *p) {
      typedef ::THaMWDCPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaMWDCPlane

//______________________________________________________________________________
void THaMWDCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaMWDCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaMWDCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaMWDCHit::Class(),this);
   }
}

//______________________________________________________________________________
void THaMWDCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaMWDCHit.
      TClass *R__cl = ::THaMWDCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGroup", &fGroup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlane", &fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefTime", &fRefTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoord", &fCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScintOffset", &fScintOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackNum", &fTrackNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLR", &fLR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitStatus", &fHitStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2Cont", &fChi2Cont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoarseChi2Cont", &fCoarseChi2Cont);
      THaVDCHit::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaMWDCHit(void *p) {
      return  p ? new(p) ::THaMWDCHit : new ::THaMWDCHit;
   }
   static void *newArray_THaMWDCHit(Long_t nElements, void *p) {
      return p ? new(p) ::THaMWDCHit[nElements] : new ::THaMWDCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaMWDCHit(void *p) {
      delete ((::THaMWDCHit*)p);
   }
   static void deleteArray_THaMWDCHit(void *p) {
      delete [] ((::THaMWDCHit*)p);
   }
   static void destruct_THaMWDCHit(void *p) {
      typedef ::THaMWDCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaMWDCHit

//______________________________________________________________________________
void THaMWDCLine::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaMWDCLine.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaMWDCLine::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaMWDCLine::Class(),this);
   }
}

//______________________________________________________________________________
void THaMWDCLine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaMWDCLine.
      TClass *R__cl = ::THaMWDCLine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSlope", &fSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIntercept", &fIntercept);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChiSquared", &fChiSquared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeOffset", &fTimeOffset);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaMWDCLine(void *p) {
      return  p ? new(p) ::THaMWDCLine : new ::THaMWDCLine;
   }
   static void *newArray_THaMWDCLine(Long_t nElements, void *p) {
      return p ? new(p) ::THaMWDCLine[nElements] : new ::THaMWDCLine[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaMWDCLine(void *p) {
      delete ((::THaMWDCLine*)p);
   }
   static void deleteArray_THaMWDCLine(void *p) {
      delete [] ((::THaMWDCLine*)p);
   }
   static void destruct_THaMWDCLine(void *p) {
      typedef ::THaMWDCLine current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaMWDCLine

//______________________________________________________________________________
void THaMWDCGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaMWDCGroup.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaMWDCGroup::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaMWDCGroup::Class(),this);
   }
}

//______________________________________________________________________________
void THaMWDCGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaMWDCGroup.
      TClass *R__cl = ::THaMWDCGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("vector<THaMWDCHit*>", (void*)&fHits, "fHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRbits", &fLRbits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneBits", &fPlaneBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGroupStatus", &fGroupStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConstructMatrix", &fConstructMatrix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.InspectMember(fTrack, "fTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2Cont[20]", fChi2Cont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoarseChi2Cont[20]", fCoarseChi2Cont);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2NDoF", &fChi2NDoF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneIndex[20]", fPlaneIndex);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaMWDCGroup(void *p) {
      delete ((::THaMWDCGroup*)p);
   }
   static void deleteArray_THaMWDCGroup(void *p) {
      delete [] ((::THaMWDCGroup*)p);
   }
   static void destruct_THaMWDCGroup(void *p) {
      typedef ::THaMWDCGroup current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaMWDCGroup

//______________________________________________________________________________
void THaVDCFuncTTDConv::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaVDCFuncTTDConv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaVDCFuncTTDConv::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaVDCFuncTTDConv::Class(),this);
   }
}

//______________________________________________________________________________
void THaVDCFuncTTDConv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaVDCFuncTTDConv.
      TClass *R__cl = ::THaVDCFuncTTDConv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVelocity", &fDriftVelocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC1", &fC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC2", &fC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC3", &fC3);
      THaVDCTimeToDistConv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaVDCFuncTTDConv(void *p) {
      return  p ? new(p) ::THaVDCFuncTTDConv : new ::THaVDCFuncTTDConv;
   }
   static void *newArray_THaVDCFuncTTDConv(Long_t nElements, void *p) {
      return p ? new(p) ::THaVDCFuncTTDConv[nElements] : new ::THaVDCFuncTTDConv[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaVDCFuncTTDConv(void *p) {
      delete ((::THaVDCFuncTTDConv*)p);
   }
   static void deleteArray_THaVDCFuncTTDConv(void *p) {
      delete [] ((::THaVDCFuncTTDConv*)p);
   }
   static void destruct_THaVDCFuncTTDConv(void *p) {
      typedef ::THaVDCFuncTTDConv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaVDCFuncTTDConv

//______________________________________________________________________________
void THaVDCLinearTTDConv::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaVDCLinearTTDConv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaVDCLinearTTDConv::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaVDCLinearTTDConv::Class(),this);
   }
}

//______________________________________________________________________________
void THaVDCLinearTTDConv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaVDCLinearTTDConv.
      TClass *R__cl = ::THaVDCLinearTTDConv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVelocity", &fDriftVelocity);
      THaVDCTimeToDistConv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaVDCLinearTTDConv(void *p) {
      return  p ? new(p) ::THaVDCLinearTTDConv : new ::THaVDCLinearTTDConv;
   }
   static void *newArray_THaVDCLinearTTDConv(Long_t nElements, void *p) {
      return p ? new(p) ::THaVDCLinearTTDConv[nElements] : new ::THaVDCLinearTTDConv[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaVDCLinearTTDConv(void *p) {
      delete ((::THaVDCLinearTTDConv*)p);
   }
   static void deleteArray_THaVDCLinearTTDConv(void *p) {
      delete [] ((::THaVDCLinearTTDConv*)p);
   }
   static void destruct_THaVDCLinearTTDConv(void *p) {
      typedef ::THaVDCLinearTTDConv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaVDCLinearTTDConv

//______________________________________________________________________________
void THaVDCTableTTDConv::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaVDCTableTTDConv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaVDCTableTTDConv::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaVDCTableTTDConv::Class(),this);
   }
}

//______________________________________________________________________________
void THaVDCTableTTDConv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaVDCTableTTDConv.
      TClass *R__cl = ::THaVDCTableTTDConv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimes", (void*)&fTimes);
      R__insp.InspectMember("vector<Double_t>", (void*)&fTimes, "fTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistances", (void*)&fDistances);
      R__insp.InspectMember("vector<Double_t>", (void*)&fDistances, "fDistances.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVelocity", &fDriftVelocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableX[500]", TableX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableY[500]", TableY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableT[500][500]", TableT);
      THaVDCTimeToDistConv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaVDCTableTTDConv(void *p) {
      return  p ? new(p) ::THaVDCTableTTDConv : new ::THaVDCTableTTDConv;
   }
   static void *newArray_THaVDCTableTTDConv(Long_t nElements, void *p) {
      return p ? new(p) ::THaVDCTableTTDConv[nElements] : new ::THaVDCTableTTDConv[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaVDCTableTTDConv(void *p) {
      delete ((::THaVDCTableTTDConv*)p);
   }
   static void deleteArray_THaVDCTableTTDConv(void *p) {
      delete [] ((::THaVDCTableTTDConv*)p);
   }
   static void destruct_THaVDCTableTTDConv(void *p) {
      typedef ::THaVDCTableTTDConv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaVDCTableTTDConv

//______________________________________________________________________________
void THaVDC2DTableTTDConv::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaVDC2DTableTTDConv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaVDC2DTableTTDConv::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaVDC2DTableTTDConv::Class(),this);
   }
}

//______________________________________________________________________________
void THaVDC2DTableTTDConv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaVDC2DTableTTDConv.
      TClass *R__cl = ::THaVDC2DTableTTDConv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y0", &y0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nx", &Nx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ny", &Ny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVelocity", &fDriftVelocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableX[500]", TableX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableY[500]", TableY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TableT[500][500]", TableT);
      THaVDCTimeToDistConv::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaVDC2DTableTTDConv(void *p) {
      return  p ? new(p) ::THaVDC2DTableTTDConv : new ::THaVDC2DTableTTDConv;
   }
   static void *newArray_THaVDC2DTableTTDConv(Long_t nElements, void *p) {
      return p ? new(p) ::THaVDC2DTableTTDConv[nElements] : new ::THaVDC2DTableTTDConv[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaVDC2DTableTTDConv(void *p) {
      delete ((::THaVDC2DTableTTDConv*)p);
   }
   static void deleteArray_THaVDC2DTableTTDConv(void *p) {
      delete [] ((::THaVDC2DTableTTDConv*)p);
   }
   static void destruct_THaVDC2DTableTTDConv(void *p) {
      typedef ::THaVDC2DTableTTDConv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaVDC2DTableTTDConv

//______________________________________________________________________________
void THaOptics::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOptics.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOptics::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOptics::Class(),this);
   }
}

//______________________________________________________________________________
void THaOptics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOptics.
      TClass *R__cl = ::THaOptics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpec", &fSpec);
      R__insp.InspectMember(fSpec, "fSpec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDefBeamName", &fDefBeamName);
      R__insp.InspectMember(fDefBeamName, "fDefBeamName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeam", &fBeam);
      R__insp.InspectMember(fBeam, "fBeam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHCS2TCS", &fHCS2TCS);
      R__insp.InspectMember(fHCS2TCS, "fHCS2TCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCS2TRCS", &fTCS2TRCS);
      R__insp.InspectMember(fTCS2TRCS, "fTCS2TRCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCS2HCS", &fTCS2HCS);
      R__insp.InspectMember(fTCS2HCS, "fTCS2HCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRCS2TCS", &fTRCS2TCS);
      R__insp.InspectMember(fTRCS2TCS, "fTRCS2TCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCSOffSetInHCS", &fTCSOffSetInHCS);
      R__insp.InspectMember(fTCSOffSetInHCS, "fTCSOffSetInHCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRCSOffSetInTCS", &fTRCSOffSetInTCS);
      R__insp.InspectMember(fTRCSOffSetInTCS, "fTRCSOffSetInTCS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", &fCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThShift", &fThShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhShift", &fPhShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPShift", &fPShift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPathLenShift", &fPathLenShift);
      THaAnalysisObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOptics(void *p) {
      delete ((::THaOptics*)p);
   }
   static void deleteArray_THaOptics(void *p) {
      delete [] ((::THaOptics*)p);
   }
   static void destruct_THaOptics(void *p) {
      typedef ::THaOptics current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOptics

//______________________________________________________________________________
void THaOptics::TOpticsDir::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOptics::TOpticsDir.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOptics::TOpticsDir::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOptics::TOpticsDir::Class(),this);
   }
}

//______________________________________________________________________________
void THaOptics::TOpticsDir::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOptics::TOpticsDir.
      TClass *R__cl = ::THaOptics::TOpticsDir::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoordSys", &fCoordSys);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOptics", &fOptics);
      R__insp.InspectMember(fOptics, "fOptics.");
      TVector3::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticscLcLTOpticsDir(void *p) {
      delete ((::THaOptics::TOpticsDir*)p);
   }
   static void deleteArray_THaOpticscLcLTOpticsDir(void *p) {
      delete [] ((::THaOptics::TOpticsDir*)p);
   }
   static void destruct_THaOpticscLcLTOpticsDir(void *p) {
      typedef ::THaOptics::TOpticsDir current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOptics::TOpticsDir

//______________________________________________________________________________
void THaOptics::TOpticsPos::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOptics::TOpticsPos.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOptics::TOpticsPos::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOptics::TOpticsPos::Class(),this);
   }
}

//______________________________________________________________________________
void THaOptics::TOpticsPos::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOptics::TOpticsPos.
      TClass *R__cl = ::THaOptics::TOpticsPos::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef THaOptics::TOpticsDir baseClass1;
      baseClass1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticscLcLTOpticsPos(void *p) {
      delete ((::THaOptics::TOpticsPos*)p);
   }
   static void deleteArray_THaOpticscLcLTOpticsPos(void *p) {
      delete [] ((::THaOptics::TOpticsPos*)p);
   }
   static void destruct_THaOpticscLcLTOpticsPos(void *p) {
      typedef ::THaOptics::TOpticsPos current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOptics::TOpticsPos

//______________________________________________________________________________
void THaOpticsAGen::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOpticsAGen.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOpticsAGen::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOpticsAGen::Class(),this);
   }
}

//______________________________________________________________________________
void THaOpticsAGen::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOpticsAGen.
      TClass *R__cl = ::THaOpticsAGen::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC[10]", fC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCv[10]", fCv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBendPlaneCenter", &fBendPlaneCenter);
      R__insp.InspectMember(fBendPlaneCenter, "fBendPlaneCenter.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBendTheta", &fBendTheta);
      THaOptics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticsAGen(void *p) {
      delete ((::THaOpticsAGen*)p);
   }
   static void deleteArray_THaOpticsAGen(void *p) {
      delete [] ((::THaOpticsAGen*)p);
   }
   static void destruct_THaOpticsAGen(void *p) {
      typedef ::THaOpticsAGen current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOpticsAGen

//______________________________________________________________________________
void THaOpticsHRS::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOpticsHRS.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOpticsHRS::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOpticsHRS::Class(),this);
   }
}

//______________________________________________________________________________
void THaOpticsHRS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOpticsHRS.
      TClass *R__cl = ::THaOpticsHRS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMatrixElems", (void*)&fTMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fTMatrixElems, "fTMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDMatrixElems", (void*)&fDMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fDMatrixElems, "fDMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPMatrixElems", (void*)&fPMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fPMatrixElems, "fPMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPTAMatrixElems", (void*)&fPTAMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fPTAMatrixElems, "fPTAMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYMatrixElems", (void*)&fYMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fYMatrixElems, "fYMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYTAMatrixElems", (void*)&fYTAMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fYTAMatrixElems, "fYTAMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFPMatrixElems", (void*)&fFPMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fFPMatrixElems, "fFPMatrixElems.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLMatrixElems", (void*)&fLMatrixElems);
      R__insp.InspectMember("vector<THaMatrixElement>", (void*)&fLMatrixElems, "fLMatrixElems.", false);
      THaOptics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticsHRS(void *p) {
      delete ((::THaOpticsHRS*)p);
   }
   static void deleteArray_THaOpticsHRS(void *p) {
      delete [] ((::THaOpticsHRS*)p);
   }
   static void destruct_THaOpticsHRS(void *p) {
      typedef ::THaOpticsHRS current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOpticsHRS

//______________________________________________________________________________
void THaOpticsAnalytical::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOpticsAnalytical.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOpticsAnalytical::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOpticsAnalytical::Class(),this);
   }
}

//______________________________________________________________________________
void THaOpticsAnalytical::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOpticsAnalytical.
      TClass *R__cl = ::THaOpticsAnalytical::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMagDL", &fMagDL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMagTheta", &fMagTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMagS", &fMagS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRCentral", &fRCentral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRadius2Momentum", &fRadius2Momentum);
      THaOptics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticsAnalytical(void *p) {
      delete ((::THaOpticsAnalytical*)p);
   }
   static void deleteArray_THaOpticsAnalytical(void *p) {
      delete [] ((::THaOpticsAnalytical*)p);
   }
   static void destruct_THaOpticsAnalytical(void *p) {
      typedef ::THaOpticsAnalytical current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOpticsAnalytical

//______________________________________________________________________________
void THaOpticsNoFeild::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaOpticsNoFeild.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaOpticsNoFeild::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaOpticsNoFeild::Class(),this);
   }
}

//______________________________________________________________________________
void THaOpticsNoFeild::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaOpticsNoFeild.
      TClass *R__cl = ::THaOpticsNoFeild::IsA();
      if (R__cl || R__insp.IsA()) { }
      THaOptics::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaOpticsNoFeild(void *p) {
      delete ((::THaOpticsNoFeild*)p);
   }
   static void deleteArray_THaOpticsNoFeild(void *p) {
      delete [] ((::THaOpticsNoFeild*)p);
   }
   static void destruct_THaOpticsNoFeild(void *p) {
      typedef ::THaOpticsNoFeild current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaOpticsNoFeild

//______________________________________________________________________________
void THaBBShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBBShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBBShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBBShower::Class(),this);
   }
}

//______________________________________________________________________________
void THaBBShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBBShower.
      TClass *R__cl = ::THaBBShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoarseProcessed", &fCoarseProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFineProcessed", &fFineProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxNClust", &fMaxNClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNChan", &fNChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChanMap", &fChanMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNclublk", &fNclublk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrows", &fNrows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcols", &fNcols);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlockX", &fBlockX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlockY", &fBlockY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPed", &fPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGain", &fGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEmin", &fEmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhits", &fNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fA", &fA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fA_p", &fA_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fA_c", &fA_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAsum_p", &fAsum_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAsum_c", &fAsum_c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNclust", &fNclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNblk", &fNblk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEblk", &fEblk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRX", &fTRX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRY", &fTRY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdX", &fdX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdY", &fdY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdZ", &fdZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlocks", &fBlocks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusters", &fClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlkGrid", &fBlkGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tan_angle", &tan_angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sin_angle", &sin_angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cos_angle", &cos_angle);
      THaPidDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaBBShower(void *p) {
      delete ((::THaBBShower*)p);
   }
   static void deleteArray_THaBBShower(void *p) {
      delete [] ((::THaBBShower*)p);
   }
   static void destruct_THaBBShower(void *p) {
      typedef ::THaBBShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBBShower

//______________________________________________________________________________
void THaBBTotalShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBBTotalShower.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBBTotalShower::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBBTotalShower::Class(),this);
   }
}

//______________________________________________________________________________
void THaBBTotalShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBBTotalShower.
      TClass *R__cl = ::THaBBTotalShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShower", &fShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPreShower", &fPreShower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDx", &fMaxDx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDy", &fMaxDy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNclust", &fNclust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fID", &fID);
      THaPidDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaBBTotalShower(void *p) {
      delete ((::THaBBTotalShower*)p);
   }
   static void deleteArray_THaBBTotalShower(void *p) {
      delete [] ((::THaBBTotalShower*)p);
   }
   static void destruct_THaBBTotalShower(void *p) {
      typedef ::THaBBTotalShower current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBBTotalShower

//______________________________________________________________________________
void THaBBShowerBlock::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBBShowerBlock.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBBShowerBlock::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBBShowerBlock::Class(),this);
   }
}

//______________________________________________________________________________
void THaBBShowerBlock::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBBShowerBlock.
      TClass *R__cl = ::THaBBShowerBlock::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPed", &fPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain", &fGain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRow", &fRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCol", &fCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStat", &fStat);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaBBShowerBlock(void *p) {
      return  p ? new(p) ::THaBBShowerBlock : new ::THaBBShowerBlock;
   }
   static void *newArray_THaBBShowerBlock(Long_t nElements, void *p) {
      return p ? new(p) ::THaBBShowerBlock[nElements] : new ::THaBBShowerBlock[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaBBShowerBlock(void *p) {
      delete ((::THaBBShowerBlock*)p);
   }
   static void deleteArray_THaBBShowerBlock(void *p) {
      delete [] ((::THaBBShowerBlock*)p);
   }
   static void destruct_THaBBShowerBlock(void *p) {
      typedef ::THaBBShowerBlock current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBBShowerBlock

//______________________________________________________________________________
void THaBBShowerCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBBShowerCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBBShowerCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBBShowerCluster::Class(),this);
   }
}

//______________________________________________________________________________
void THaBBShowerCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBBShowerCluster.
      TClass *R__cl = ::THaBBShowerCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMult", &fMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNMaxBlocks", &fNMaxBlocks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBlocks", &fBlocks);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaBBShowerCluster(void *p) {
      return  p ? new(p) ::THaBBShowerCluster : new ::THaBBShowerCluster;
   }
   static void *newArray_THaBBShowerCluster(Long_t nElements, void *p) {
      return p ? new(p) ::THaBBShowerCluster[nElements] : new ::THaBBShowerCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaBBShowerCluster(void *p) {
      delete ((::THaBBShowerCluster*)p);
   }
   static void deleteArray_THaBBShowerCluster(void *p) {
      delete [] ((::THaBBShowerCluster*)p);
   }
   static void destruct_THaBBShowerCluster(void *p) {
      typedef ::THaBBShowerCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBBShowerCluster

//______________________________________________________________________________
void THaTimingPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaTimingPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaTimingPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaTimingPlane::Class(),this);
   }
}

//______________________________________________________________________________
void THaTimingPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaTimingPlane.
      TClass *R__cl = ::THaTimingPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEplane", &fEplane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdEplane", &fdEplane);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaTimingPlane(void *p) {
      delete ((::THaTimingPlane*)p);
   }
   static void deleteArray_THaTimingPlane(void *p) {
      delete [] ((::THaTimingPlane*)p);
   }
   static void destruct_THaTimingPlane(void *p) {
      typedef ::THaTimingPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaTimingPlane

//______________________________________________________________________________
void THaScintPlaneDet::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaScintPlaneDet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaScintPlaneDet::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaScintPlaneDet::Class(),this);
   }
}

//______________________________________________________________________________
void THaScintPlaneDet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaScintPlaneDet.
      TClass *R__cl = ::THaScintPlaneDet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBars", &fBars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNBars", &fNBars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefHits", &fRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLaHits", &fLaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRaHits", &fRaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLtHits", &fLtHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtHits", &fRtHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartHits", &fPartHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefCh", &fRefCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRefHits", &fNRefHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefOkay", &fRefOkay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLTNhit", &fLTNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRTNhit", &fRTNhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLANhit", &fLANhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRANhit", &fRANhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPaddlesHit", &fNPaddlesHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLtIndex", &fLtIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRtIndex", &fRtIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLaIndex", &fLaIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRaIndex", &fRaIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLE", &fLE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRE", &fRE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLrawA", &fLrawA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRrawA", &fRrawA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLpedcA", &fLpedcA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRpedcA", &fRpedcA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLT", &fLT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRT", &fRT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fLTcounter", &fLTcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRTcounter", &fRTcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hitcounter", &hitcounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Energy", &Energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TDIFF", &TDIFF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TOF", &TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*T_tot", &T_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Yt_pos", &Yt_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Ya_pos", &Ya_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Y_pred", &Y_pred);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Y_dev", &Y_dev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAngle", &fAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackAcceptanceDx", &fTrackAcceptanceDx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackAcceptanceDy", &fTrackAcceptanceDy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRatioTrack", &fMatchRatioTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrackProj", &fTrackProj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCount", &fEventCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorReferenceChCount", &fErrorReferenceChCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorReferenceChRateWarningThreshold", &fErrorReferenceChRateWarningThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTooManyErrRefCh", &fTooManyErrRefCh);
      THaNonTrackingDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaScintPlaneDet(void *p) {
      return  p ? new(p) ::THaScintPlaneDet : new ::THaScintPlaneDet;
   }
   static void *newArray_THaScintPlaneDet(Long_t nElements, void *p) {
      return p ? new(p) ::THaScintPlaneDet[nElements] : new ::THaScintPlaneDet[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaScintPlaneDet(void *p) {
      delete ((::THaScintPlaneDet*)p);
   }
   static void deleteArray_THaScintPlaneDet(void *p) {
      delete [] ((::THaScintPlaneDet*)p);
   }
   static void destruct_THaScintPlaneDet(void *p) {
      typedef ::THaScintPlaneDet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaScintPlaneDet

//______________________________________________________________________________
void BBDecData::Streamer(TBuffer &R__b)
{
   // Stream an object of class BBDecData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BBDecData::Class(),this);
   } else {
      R__b.WriteClassBuffer(BBDecData::Class(),this);
   }
}

//______________________________________________________________________________
void BBDecData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BBDecData.
      TClass *R__cl = ::BBDecData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bits", &bits);
      R__insp.InspectMember(bits, "bits.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtypebits", &evtypebits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtype", &evtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctimel", &ctimel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctimer", &ctimer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulser1", &pulser1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "synchadc1", &synchadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "synchadc2", &synchadc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "synchadc3", &synchadc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "synchadc4", &synchadc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "synchadc14", &synchadc14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeroc1", &timeroc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeroc2", &timeroc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeroc3", &timeroc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeroc4", &timeroc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeroc14", &timeroc14);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rftime1", &rftime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rftime2", &rftime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edtpl", &edtpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edtpr", &edtpr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lenroc12", &lenroc12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lenroc16", &lenroc16);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cnt1", &cnt1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrateLoc", (void*)&fCrateLoc);
      R__insp.InspectMember("vector<BBdataLoc*>", (void*)&fCrateLoc, "fCrateLoc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWordLoc", (void*)&fWordLoc);
      R__insp.InspectMember("vector<BBdataLoc*>", (void*)&fWordLoc, "fWordLoc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist", (void*)&hist);
      R__insp.InspectMember("vector<TH1F*>", (void*)&hist, "hist.", false);
      THaApparatus::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_BBDecData(void *p) {
      return  p ? new(p) ::BBDecData : new ::BBDecData;
   }
   static void *newArray_BBDecData(Long_t nElements, void *p) {
      return p ? new(p) ::BBDecData[nElements] : new ::BBDecData[nElements];
   }
   // Wrapper around operator delete
   static void delete_BBDecData(void *p) {
      delete ((::BBDecData*)p);
   }
   static void deleteArray_BBDecData(void *p) {
      delete [] ((::BBDecData*)p);
   }
   static void destruct_BBDecData(void *p) {
      typedef ::BBDecData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BBDecData

//______________________________________________________________________________
void THaHe3Target::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaHe3Target.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaHe3Target::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaHe3Target::Class(),this);
   }
}

//______________________________________________________________________________
void THaHe3Target::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaHe3Target.
      TClass *R__cl = ::THaHe3Target::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinModule", (void*)&fSpinModule);
      R__insp.InspectMember("vector<THaHe3SpinModule*>", (void*)&fSpinModule, "fSpinModule.", false);
      THaApparatus::ShowMembers(R__insp);
      R__insp.GenericShowMembers("THaHe3SpinModule", ( ::THaHe3SpinModule *) (this ), false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_THaHe3Target(void *p) {
      delete ((::THaHe3Target*)p);
   }
   static void deleteArray_THaHe3Target(void *p) {
      delete [] ((::THaHe3Target*)p);
   }
   static void destruct_THaHe3Target(void *p) {
      typedef ::THaHe3Target current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaHe3Target

//______________________________________________________________________________
void THaADCHe3Spin::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaADCHe3Spin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaADCHe3Spin::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaADCHe3Spin::Class(),this);
   }
}

//______________________________________________________________________________
void THaADCHe3Spin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaADCHe3Spin.
      TClass *R__cl = ::THaADCHe3Spin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCRawUp", &fADCRawUp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCRawDown", &fADCRawDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogic1Window", (void*)&fLogic1Window);
      R__insp.InspectMember("THaADCHe3Spin::ADCStateBound", (void*)&fLogic1Window, "fLogic1Window.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLogic0Window", (void*)&fLogic0Window);
      R__insp.InspectMember("THaADCHe3Spin::ADCStateBound", (void*)&fLogic0Window, "fLogic0Window.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinUpChan", (void*)&fSpinUpChan);
      R__insp.InspectMember("THaADCHe3Spin::ChanDef_t", (void*)&fSpinUpChan, "fSpinUpChan.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinDownChan", (void*)&fSpinDownChan);
      R__insp.InspectMember("THaADCHe3Spin::ChanDef_t", (void*)&fSpinDownChan, "fSpinDownChan.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPermInvalidADC", &fPermInvalidADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMissingADCCount", &fMissingADCCount);
      THaDetector::ShowMembers(R__insp);
      R__insp.GenericShowMembers("THaHe3SpinModule", ( ::THaHe3SpinModule *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaADCHe3Spin(void *p) {
      return  p ? new(p) ::THaADCHe3Spin : new ::THaADCHe3Spin;
   }
   static void *newArray_THaADCHe3Spin(Long_t nElements, void *p) {
      return p ? new(p) ::THaADCHe3Spin[nElements] : new ::THaADCHe3Spin[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaADCHe3Spin(void *p) {
      delete ((::THaADCHe3Spin*)p);
   }
   static void deleteArray_THaADCHe3Spin(void *p) {
      delete [] ((::THaADCHe3Spin*)p);
   }
   static void destruct_THaADCHe3Spin(void *p) {
      typedef ::THaADCHe3Spin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaADCHe3Spin

//______________________________________________________________________________
namespace ROOTDict {
   void THaADCHe3SpincLcLADCStateBound_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class THaADCHe3Spin::ADCStateBound.
      typedef ::ROOTShadow::Shadow::THaADCHe3Spin::ADCStateBound ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin::ADCStateBound*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpBound", &sobj->UpBound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LowBound", &sobj->LowBound);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaADCHe3SpincLcLADCStateBound(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaADCHe3Spin::ADCStateBound : new ::THaADCHe3Spin::ADCStateBound;
   }
   static void *newArray_THaADCHe3SpincLcLADCStateBound(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaADCHe3Spin::ADCStateBound[nElements] : new ::THaADCHe3Spin::ADCStateBound[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaADCHe3SpincLcLADCStateBound(void *p) {
      delete ((::THaADCHe3Spin::ADCStateBound*)p);
   }
   static void deleteArray_THaADCHe3SpincLcLADCStateBound(void *p) {
      delete [] ((::THaADCHe3Spin::ADCStateBound*)p);
   }
   static void destruct_THaADCHe3SpincLcLADCStateBound(void *p) {
      typedef ::THaADCHe3Spin::ADCStateBound current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaADCHe3Spin::ADCStateBound

//______________________________________________________________________________
namespace ROOTDict {
   void THaADCHe3SpincLcLChanDef_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class THaADCHe3Spin::ChanDef_t.
      typedef ::ROOTShadow::Shadow::THaADCHe3Spin::ChanDef_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::THaADCHe3Spin::ChanDef_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "roc", &sobj->roc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slot", &sobj->slot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chan", &sobj->chan);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaADCHe3SpincLcLChanDef_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaADCHe3Spin::ChanDef_t : new ::THaADCHe3Spin::ChanDef_t;
   }
   static void *newArray_THaADCHe3SpincLcLChanDef_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaADCHe3Spin::ChanDef_t[nElements] : new ::THaADCHe3Spin::ChanDef_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaADCHe3SpincLcLChanDef_t(void *p) {
      delete ((::THaADCHe3Spin::ChanDef_t*)p);
   }
   static void deleteArray_THaADCHe3SpincLcLChanDef_t(void *p) {
      delete [] ((::THaADCHe3Spin::ChanDef_t*)p);
   }
   static void destruct_THaADCHe3SpincLcLChanDef_t(void *p) {
      typedef ::THaADCHe3Spin::ChanDef_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaADCHe3Spin::ChanDef_t

//______________________________________________________________________________
void THaBitHe3Spin::Streamer(TBuffer &R__b)
{
   // Stream an object of class THaBitHe3Spin.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(THaBitHe3Spin::Class(),this);
   } else {
      R__b.WriteClassBuffer(THaBitHe3Spin::Class(),this);
   }
}

//______________________________________________________________________________
void THaBitHe3Spin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THaBitHe3Spin.
      TClass *R__cl = ::THaBitHe3Spin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawWord", &fRawWord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fROC", &fROC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinWordHeader", &fSpinWordHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinWordOffSet", &fSpinWordOffSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawWordConverter", &fRawWordConverter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinUpMask", &fSpinUpMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinDownMask", &fSpinDownMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPermInvalidEvt", &fPermInvalidEvt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMissingEvtCount", &fMissingEvtCount);
      THaDetector::ShowMembers(R__insp);
      R__insp.GenericShowMembers("THaHe3SpinModule", ( ::THaHe3SpinModule *) (this ), false);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaBitHe3Spin(void *p) {
      return  p ? new(p) ::THaBitHe3Spin : new ::THaBitHe3Spin;
   }
   static void *newArray_THaBitHe3Spin(Long_t nElements, void *p) {
      return p ? new(p) ::THaBitHe3Spin[nElements] : new ::THaBitHe3Spin[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaBitHe3Spin(void *p) {
      delete ((::THaBitHe3Spin*)p);
   }
   static void deleteArray_THaBitHe3Spin(void *p) {
      delete [] ((::THaBitHe3Spin*)p);
   }
   static void destruct_THaBitHe3Spin(void *p) {
      typedef ::THaBitHe3Spin current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaBitHe3Spin

//______________________________________________________________________________
namespace ROOTDict {
   void THaHe3SpinModule_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class THaHe3SpinModule.
      typedef ::ROOTShadow::Shadow::THaHe3SpinModule ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::THaHe3SpinModule*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinState", &sobj->fSpinState);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSpinStateValid", &sobj->fSpinStateValid);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_THaHe3SpinModule(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaHe3SpinModule : new ::THaHe3SpinModule;
   }
   static void *newArray_THaHe3SpinModule(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::THaHe3SpinModule[nElements] : new ::THaHe3SpinModule[nElements];
   }
   // Wrapper around operator delete
   static void delete_THaHe3SpinModule(void *p) {
      delete ((::THaHe3SpinModule*)p);
   }
   static void deleteArray_THaHe3SpinModule(void *p) {
      delete [] ((::THaHe3SpinModule*)p);
   }
   static void destruct_THaHe3SpinModule(void *p) {
      typedef ::THaHe3SpinModule current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::THaHe3SpinModule

      namespace TreeSearch {
//______________________________________________________________________________
void MWDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::MWDC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::MWDC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::MWDC::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void MWDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::MWDC.
      TClass *R__cl = ::TreeSearch::MWDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlanes", (void*)&fPlanes);
      R__insp.InspectMember("TreeSearch::MWDC::Wpvec_t", (void*)&fPlanes, "fPlanes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProj", (void*)&fProj);
      R__insp.InspectMember("TreeSearch::MWDC::Prvec_t", (void*)&fProj, "fProj.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCalibPlanes", (void*)&fCalibPlanes);
      R__insp.InspectMember("TreeSearch::MWDC::Wpvec_t", (void*)&fCalibPlanes, "fCalibPlanes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRefMap", &fRefMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRefTime", (void*)&fRefTime);
      R__insp.InspectMember("vector<float>", (void*)&fRefTime, "fRefTime.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCrateMap", &fCrateMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxThreads", &fMaxThreads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThreads", &fThreads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f3dMatchvalScalefact", &f3dMatchvalScalefact);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f3dMatchCut", &f3dMatchCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinNdof", &fMinNdof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChisqLimits", (void*)&fChisqLimits);
      R__insp.InspectMember("TreeSearch::vec_pdbl_t", (void*)&fChisqLimits, "fChisqLimits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFailNhits", &fFailNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFailNpat", &fFailNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcombos", &fNcombos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fN3dFits", &fN3dFits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvNum", &fEvNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_track", &t_track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_3dmatch", &t_3dmatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_3dfit", &t_3dfit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_coarse", &t_coarse);
      THaTrackingDetector::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLMWDC(void *p) {
      delete ((::TreeSearch::MWDC*)p);
   }
   static void deleteArray_TreeSearchcLcLMWDC(void *p) {
      delete [] ((::TreeSearch::MWDC*)p);
   }
   static void destruct_TreeSearchcLcLMWDC(void *p) {
      typedef ::TreeSearch::MWDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::MWDC

      namespace TreeSearch {
//______________________________________________________________________________
void WirePlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::WirePlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::WirePlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::WirePlane::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void WirePlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::WirePlane.
      TClass *R__cl = ::TreeSearch::WirePlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlaneNum", &fPlaneNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWireStart", &fWireStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWireSpacing", &fWireSpacing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoordOffset", &fCoordOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartner", &fPartner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProjection", &fProjection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMWDC", &fMWDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResolution", &fResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinTime", &fMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxTime", &fMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftimeoffset", &ftimeoffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxHits", &fMaxHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTTDConv", &fTTDConv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDCOffset", (void*)&fTDCOffset);
      R__insp.InspectMember("vector<float>", (void*)&fTDCOffset, "fTDCOffset.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHits", &fHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFitCoords", &fFitCoords);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNmiss", &fNmiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrej", &fNrej);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWasSorted", &fWasSorted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhitwires", &fNhitwires);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNmultihit", &fNmultihit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNmaxmul", &fNmaxmul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcl", &fNcl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdbl", &fNdbl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClsiz", &fClsiz);
      THaSubDetector::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLWirePlane(void *p) {
      return  p ? new(p) ::TreeSearch::WirePlane : new ::TreeSearch::WirePlane;
   }
   static void *newArray_TreeSearchcLcLWirePlane(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::WirePlane[nElements] : new ::TreeSearch::WirePlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLWirePlane(void *p) {
      delete ((::TreeSearch::WirePlane*)p);
   }
   static void deleteArray_TreeSearchcLcLWirePlane(void *p) {
      delete [] ((::TreeSearch::WirePlane*)p);
   }
   static void destruct_TreeSearchcLcLWirePlane(void *p) {
      typedef ::TreeSearch::WirePlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::WirePlane

      namespace TreeSearch {
//______________________________________________________________________________
void Projection::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Projection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Projection::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Projection::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Projection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Projection.
      TClass *R__cl = ::TreeSearch::Projection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlanes", (void*)&fPlanes);
      R__insp.InspectMember("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >", (void*)&fPlanes, "fPlanes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlevels", &fNlevels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSlope", &fMaxSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxis", &fAxis);
      R__insp.InspectMember(fAxis, "fAxis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDetector", &fDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPatternTree", &fPatternTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinFitPlanes", &fMinFitPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxMiss", &fMaxMiss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRequire1of2", &fRequire1of2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlaneCombos", &fPlaneCombos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxPat", &fMaxPat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFrontMaxBinDist", &fFrontMaxBinDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBackMaxBinDist", &fBackMaxBinDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitMaxDist", &fHitMaxDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConfLevel", &fConfLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChisqLimits", (void*)&fChisqLimits);
      R__insp.InspectMember("TreeSearch::vec_pdbl_t", (void*)&fChisqLimits, "fChisqLimits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHitpattern", &fHitpattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPatternsFound", (void*)&fPatternsFound);
      R__insp.InspectMember("TreeSearch::Projection::NodeVec_t", (void*)&fPatternsFound, "fPatternsFound.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRoads", &fRoads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNgoodRoads", &fNgoodRoads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRoadCorners", &fRoadCorners);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_hits", &n_hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_bins", &n_bins);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_binhits", &n_binhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxhits_bin", &maxhits_bin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_test", &n_test);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_pat", &n_pat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_roads", &n_roads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_dupl", &n_dupl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n_badfits", &n_badfits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_treesearch", &t_treesearch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_roads", &t_roads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_fit", &t_fit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t_track", &t_track);
      THaAnalysisObject::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLProjection(void *p) {
      return  p ? new(p) ::TreeSearch::Projection : new ::TreeSearch::Projection;
   }
   static void *newArray_TreeSearchcLcLProjection(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::Projection[nElements] : new ::TreeSearch::Projection[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLProjection(void *p) {
      delete ((::TreeSearch::Projection*)p);
   }
   static void deleteArray_TreeSearchcLcLProjection(void *p) {
      delete [] ((::TreeSearch::Projection*)p);
   }
   static void destruct_TreeSearchcLcLProjection(void *p) {
      typedef ::TreeSearch::Projection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Projection

      namespace TreeSearch {
//______________________________________________________________________________
void Road::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Road.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Road::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Road::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Road::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Road.
      TClass *R__cl = ::TreeSearch::Road::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPatterns", (void*)&fPatterns);
      R__insp.InspectMember("TreeSearch::Road::NodeList_t", (void*)&fPatterns, "fPatterns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("TreeSearch::Hset_t", (void*)&fHits, "fHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPoints", (void*)&fPoints);
      R__insp.InspectMember("vector<Pvec_t>", (void*)&fPoints, "fPoints.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitCoord", (void*)&fFitCoord);
      R__insp.InspectMember("TreeSearch::Road::Pvec_t", (void*)&fFitCoord, "fFitCoord.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProjection", &fProjection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCornerX[5]", fCornerX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZL", &fZL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZU", &fZU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSlope", &fSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV[3]", fV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDof", &fDof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGood", &fGood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBuild", &fBuild);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGrown", &fGrown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNfits", &fNfits);
      TObject::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLRoad(void *p) {
      return  p ? new(p) ::TreeSearch::Road : new ::TreeSearch::Road;
   }
   static void *newArray_TreeSearchcLcLRoad(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::Road[nElements] : new ::TreeSearch::Road[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLRoad(void *p) {
      delete ((::TreeSearch::Road*)p);
   }
   static void deleteArray_TreeSearchcLcLRoad(void *p) {
      delete [] ((::TreeSearch::Road*)p);
   }
   static void destruct_TreeSearchcLcLRoad(void *p) {
      typedef ::TreeSearch::Road current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Road

      namespace TreeSearch {
//______________________________________________________________________________
void TimeToDistConv::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::TimeToDistConv.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::TimeToDistConv::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::TimeToDistConv::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void TimeToDistConv::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::TimeToDistConv.
      TClass *R__cl = ::TreeSearch::TimeToDistConv::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNparam", &fNparam);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLTimeToDistConv(void *p) {
      delete ((::TreeSearch::TimeToDistConv*)p);
   }
   static void deleteArray_TreeSearchcLcLTimeToDistConv(void *p) {
      delete [] ((::TreeSearch::TimeToDistConv*)p);
   }
   static void destruct_TreeSearchcLcLTimeToDistConv(void *p) {
      typedef ::TreeSearch::TimeToDistConv current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::TimeToDistConv

      namespace TreeSearch {
//______________________________________________________________________________
void Hit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Hit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Hit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Hit::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Hit.
      TClass *R__cl = ::TreeSearch::Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWireNum", &fWireNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawTDC", &fRawTDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosL", &fPosL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosR", &fPosR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResolution", &fResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWirePlane", &fWirePlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCl", &fCl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMulti", &fMulti);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTdiff", &fTdiff);
      TObject::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLHit(void *p) {
      return  p ? new(p) ::TreeSearch::Hit : new ::TreeSearch::Hit;
   }
   static void *newArray_TreeSearchcLcLHit(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::Hit[nElements] : new ::TreeSearch::Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLHit(void *p) {
      delete ((::TreeSearch::Hit*)p);
   }
   static void deleteArray_TreeSearchcLcLHit(void *p) {
      delete [] ((::TreeSearch::Hit*)p);
   }
   static void destruct_TreeSearchcLcLHit(void *p) {
      typedef ::TreeSearch::Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Hit

      namespace TreeSearch {
//______________________________________________________________________________
void FitCoord::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::FitCoord.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::FitCoord::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::FitCoord::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void FitCoord::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::FitCoord.
      TClass *R__cl = ::TreeSearch::FitCoord::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHit", &fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRoad", &fRoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackPos", &fTrackPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrackSlope", &fTrackSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f3DTrkPos", &f3DTrkPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f3DTrkSlope", &f3DTrkSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFitRank", &fFitRank);
      TObject::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLFitCoord(void *p) {
      return  p ? new(p) ::TreeSearch::FitCoord : new ::TreeSearch::FitCoord;
   }
   static void *newArray_TreeSearchcLcLFitCoord(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::FitCoord[nElements] : new ::TreeSearch::FitCoord[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLFitCoord(void *p) {
      delete ((::TreeSearch::FitCoord*)p);
   }
   static void deleteArray_TreeSearchcLcLFitCoord(void *p) {
      delete [] ((::TreeSearch::FitCoord*)p);
   }
   static void destruct_TreeSearchcLcLFitCoord(void *p) {
      typedef ::TreeSearch::FitCoord current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::FitCoord

      namespace TreeSearch {
//______________________________________________________________________________
void LinearTTD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::LinearTTD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::LinearTTD::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::LinearTTD::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void LinearTTD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::LinearTTD.
      TClass *R__cl = ::TreeSearch::LinearTTD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVel", &fDriftVel);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TreeSearch::TimeToDistConv baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLLinearTTD(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::LinearTTD : new ::TreeSearch::LinearTTD;
   }
   static void *newArray_TreeSearchcLcLLinearTTD(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::LinearTTD[nElements] : new ::TreeSearch::LinearTTD[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLLinearTTD(void *p) {
      delete ((::TreeSearch::LinearTTD*)p);
   }
   static void deleteArray_TreeSearchcLcLLinearTTD(void *p) {
      delete [] ((::TreeSearch::LinearTTD*)p);
   }
   static void destruct_TreeSearchcLcLLinearTTD(void *p) {
      typedef ::TreeSearch::LinearTTD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::LinearTTD

      namespace TreeSearch {
//______________________________________________________________________________
void TanhFitTTD::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::TanhFitTTD.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::TanhFitTTD::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::TanhFitTTD::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void TanhFitTTD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::TanhFitTTD.
      TClass *R__cl = ::TreeSearch::TanhFitTTD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftVel", &fDriftVel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC0", &fC0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fC2", &fC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInvC0", &fInvC0);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TreeSearch::TimeToDistConv baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLTanhFitTTD(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::TanhFitTTD : new ::TreeSearch::TanhFitTTD;
   }
   static void *newArray_TreeSearchcLcLTanhFitTTD(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::TanhFitTTD[nElements] : new ::TreeSearch::TanhFitTTD[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLTanhFitTTD(void *p) {
      delete ((::TreeSearch::TanhFitTTD*)p);
   }
   static void deleteArray_TreeSearchcLcLTanhFitTTD(void *p) {
      delete [] ((::TreeSearch::TanhFitTTD*)p);
   }
   static void destruct_TreeSearchcLcLTanhFitTTD(void *p) {
      typedef ::TreeSearch::TanhFitTTD current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::TanhFitTTD

      namespace TreeSearch {
//______________________________________________________________________________
void MCHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::MCHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::MCHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::MCHit::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void MCHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::MCHit.
      TClass *R__cl = ::TreeSearch::MCHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCTrack", &fMCTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCPos", &fMCPos);
      //This works around a msvc bug and should be harmless on other platforms
      typedef TreeSearch::Hit baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLMCHit(void *p) {
      return  p ? new(p) ::TreeSearch::MCHit : new ::TreeSearch::MCHit;
   }
   static void *newArray_TreeSearchcLcLMCHit(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::MCHit[nElements] : new ::TreeSearch::MCHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLMCHit(void *p) {
      delete ((::TreeSearch::MCHit*)p);
   }
   static void deleteArray_TreeSearchcLcLMCHit(void *p) {
      delete [] ((::TreeSearch::MCHit*)p);
   }
   static void destruct_TreeSearchcLcLMCHit(void *p) {
      typedef ::TreeSearch::MCHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::MCHit

//______________________________________________________________________________
namespace ROOTDict {
   void pairlETObjectmUcOTObjectmUgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<TObject*,TObject*>.
      typedef ::ROOTShadow::Shadow::pairlETObjectmUcOTObjectmUgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<TObject*,TObject*>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*first", &sobj->first);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*second", &sobj->second);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlETObjectmUcOTObjectmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TObject*,TObject*> : new pair<TObject*,TObject*>;
   }
   static void *newArray_pairlETObjectmUcOTObjectmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TObject*,TObject*>[nElements] : new pair<TObject*,TObject*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlETObjectmUcOTObjectmUgR(void *p) {
      delete ((pair<TObject*,TObject*>*)p);
   }
   static void deleteArray_pairlETObjectmUcOTObjectmUgR(void *p) {
      delete [] ((pair<TObject*,TObject*>*)p);
   }
   static void destruct_pairlETObjectmUcOTObjectmUgR(void *p) {
      typedef pair<TObject*,TObject*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<TObject*,TObject*>

      namespace TreeSearch {
//______________________________________________________________________________
void HitPairIter::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::HitPairIter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::HitPairIter::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::HitPairIter::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void HitPairIter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::HitPairIter.
      TClass *R__cl = ::TreeSearch::HitPairIter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCollA", &fCollA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCollB", &fCollB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIterA", &fIterA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIterB", &fIterB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSaveIter", &fSaveIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSaveHit", &fSaveHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxDist", &fMaxDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStarted", &fStarted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScanning", &fScanning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrent", (void*)&fCurrent);
      R__insp.InspectMember("TreeSearch::ObjPair_t", (void*)&fCurrent, "fCurrent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNext", (void*)&fNext);
      R__insp.InspectMember("TreeSearch::ObjPair_t", (void*)&fNext, "fNext.", false);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLHitPairIter(void *p) {
      delete ((::TreeSearch::HitPairIter*)p);
   }
   static void deleteArray_TreeSearchcLcLHitPairIter(void *p) {
      delete [] ((::TreeSearch::HitPairIter*)p);
   }
   static void destruct_TreeSearchcLcLHitPairIter(void *p) {
      typedef ::TreeSearch::HitPairIter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::HitPairIter

      namespace TreeSearch {
//______________________________________________________________________________
void HitSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::HitSet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::HitSet::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::HitSet::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void HitSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::HitSet.
      TClass *R__cl = ::TreeSearch::HitSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hits", (void*)&hits);
      R__insp.InspectMember("TreeSearch::Hset_t", (void*)&hits, "hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "plane_pattern", &plane_pattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nplanes", &nplanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "used", &used);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLHitSet(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::HitSet : new ::TreeSearch::HitSet;
   }
   static void *newArray_TreeSearchcLcLHitSet(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::HitSet[nElements] : new ::TreeSearch::HitSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLHitSet(void *p) {
      delete ((::TreeSearch::HitSet*)p);
   }
   static void deleteArray_TreeSearchcLcLHitSet(void *p) {
      delete [] ((::TreeSearch::HitSet*)p);
   }
   static void destruct_TreeSearchcLcLHitSet(void *p) {
      typedef ::TreeSearch::HitSet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::HitSet

//______________________________________________________________________________
namespace ROOTDict {
   void TreeSearchcLcLNodeDescriptor_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TreeSearch::NodeDescriptor.
      typedef ::ROOTShadow::Shadow::TreeSearch::NodeDescriptor ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::NodeDescriptor*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*link", &sobj->link);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parent", &sobj->parent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shift", &sobj->shift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mirrored", &sobj->mirrored);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "depth", &sobj->depth);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLNodeDescriptor(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::NodeDescriptor : new ::TreeSearch::NodeDescriptor;
   }
   static void *newArray_TreeSearchcLcLNodeDescriptor(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::NodeDescriptor[nElements] : new ::TreeSearch::NodeDescriptor[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLNodeDescriptor(void *p) {
      delete ((::TreeSearch::NodeDescriptor*)p);
   }
   static void deleteArray_TreeSearchcLcLNodeDescriptor(void *p) {
      delete [] ((::TreeSearch::NodeDescriptor*)p);
   }
   static void destruct_TreeSearchcLcLNodeDescriptor(void *p) {
      typedef ::TreeSearch::NodeDescriptor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::NodeDescriptor

//______________________________________________________________________________
namespace ROOTDict {
   void pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>.
      typedef ::ROOTShadow::Shadow::pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("TreeSearch::NodeDescriptor", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
      R__insp.InspectMember(sobj->second, "second.");
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> : new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>;
   }
   static void *newArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>[nElements] : new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p) {
      delete ((pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)p);
   }
   static void deleteArray_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p) {
      delete [] ((pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)p);
   }
   static void destruct_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void *p) {
      typedef pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>

      namespace TreeSearch {
//______________________________________________________________________________
void TreeWalk::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::TreeWalk.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::TreeWalk::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::TreeWalk::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void TreeWalk::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::TreeWalk.
      TClass *R__cl = ::TreeSearch::TreeWalk::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlevels", &fNlevels);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLTreeWalk(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::TreeWalk : new ::TreeSearch::TreeWalk;
   }
   static void *newArray_TreeSearchcLcLTreeWalk(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::TreeWalk[nElements] : new ::TreeSearch::TreeWalk[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLTreeWalk(void *p) {
      delete ((::TreeSearch::TreeWalk*)p);
   }
   static void deleteArray_TreeSearchcLcLTreeWalk(void *p) {
      delete [] ((::TreeSearch::TreeWalk*)p);
   }
   static void destruct_TreeSearchcLcLTreeWalk(void *p) {
      typedef ::TreeSearch::TreeWalk current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::TreeWalk

      namespace TreeSearch {
//______________________________________________________________________________
void Bits::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Bits.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Bits::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Bits::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Bits::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Bits.
      TClass *R__cl = ::TreeSearch::Bits::IsA();
      if (R__cl || R__insp.IsA()) { }
      TBits::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLBits(void *p) {
      return  p ? new(p) ::TreeSearch::Bits : new ::TreeSearch::Bits;
   }
   static void *newArray_TreeSearchcLcLBits(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::Bits[nElements] : new ::TreeSearch::Bits[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLBits(void *p) {
      delete ((::TreeSearch::Bits*)p);
   }
   static void deleteArray_TreeSearchcLcLBits(void *p) {
      delete [] ((::TreeSearch::Bits*)p);
   }
   static void destruct_TreeSearchcLcLBits(void *p) {
      typedef ::TreeSearch::Bits current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Bits

      namespace TreeSearch {
//______________________________________________________________________________
void PatternTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::PatternTree.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::PatternTree::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::PatternTree::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void PatternTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::PatternTree.
      TClass *R__cl = ::TreeSearch::PatternTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParameters", (void*)&fParameters);
      R__insp.InspectMember("TreeSearch::TreeParam_t", (void*)&fParameters, "fParameters.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParamOK", &fParamOK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPatterns", (void*)&fPatterns);
      R__insp.InspectMember("vector<Pattern>", (void*)&fPatterns, "fPatterns.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLinks", (void*)&fLinks);
      R__insp.InspectMember("vector<Link>", (void*)&fLinks, "fLinks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBits", (void*)&fBits);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fBits, "fBits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpat", &fNpat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlnk", &fNlnk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNbit", &fNbit);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLPatternTree(void *p) {
      delete ((::TreeSearch::PatternTree*)p);
   }
   static void deleteArray_TreeSearchcLcLPatternTree(void *p) {
      delete [] ((::TreeSearch::PatternTree*)p);
   }
   static void destruct_TreeSearchcLcLPatternTree(void *p) {
      typedef ::TreeSearch::PatternTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::PatternTree

      namespace TreeSearch {
//______________________________________________________________________________
void Hitpattern::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Hitpattern.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Hitpattern::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Hitpattern::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Hitpattern::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Hitpattern.
      TClass *R__cl = ::TreeSearch::Hitpattern::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlevels", &fNlevels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNplanes", &fNplanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScale", &fScale);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBinWidth", &fBinWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOffset", &fOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPattern", &fPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHits", (void*)&fHits);
      R__insp.InspectMember("vector<std::vector<Hit*> >", (void*)&fHits, "fHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitList", (void*)&fHitList);
      R__insp.InspectMember("vector<UInt_t>", (void*)&fHitList, "fHitList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxhitBin", &fMaxhitBin);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLHitpattern(void *p) {
      delete ((::TreeSearch::Hitpattern*)p);
   }
   static void deleteArray_TreeSearchcLcLHitpattern(void *p) {
      delete [] ((::TreeSearch::Hitpattern*)p);
   }
   static void destruct_TreeSearchcLcLHitpattern(void *p) {
      typedef ::TreeSearch::Hitpattern current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Hitpattern

//______________________________________________________________________________
namespace ROOTDict {
   void TreeSearchcLcLTreeParam_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TreeSearch::TreeParam_t.
      typedef ::ROOTShadow::Shadow::TreeSearch::TreeParam_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::TreeParam_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxdepth", &sobj->fMaxdepth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNormalized", &sobj->fNormalized);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &sobj->fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxslope", &sobj->fMaxslope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZpos", (void*)&sobj->fZpos);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->fZpos, "fZpos.", false);
   }

}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLTreeParam_t(void *p) {
      delete ((::TreeSearch::TreeParam_t*)p);
   }
   static void deleteArray_TreeSearchcLcLTreeParam_t(void *p) {
      delete [] ((::TreeSearch::TreeParam_t*)p);
   }
   static void destruct_TreeSearchcLcLTreeParam_t(void *p) {
      typedef ::TreeSearch::TreeParam_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::TreeParam_t

      namespace TreeSearch {
//______________________________________________________________________________
void PatternGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::PatternGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::PatternGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::PatternGenerator::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void PatternGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::PatternGenerator.
      TClass *R__cl = ::TreeSearch::PatternGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNlevels", &fNlevels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNplanes", &fNplanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxSlope", &fMaxSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", (void*)&fZ);
      R__insp.InspectMember("vector<double>", (void*)&fZ, "fZ.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHashTable", (void*)&fHashTable);
      R__insp.InspectMember("vector<HashNode>", (void*)&fHashTable, "fHashTable.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStats", (void*)&fStats);
      R__insp.InspectMember("TreeSearch::PatternGenerator::Statistics_t", (void*)&fStats, "fStats.", false);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLPatternGenerator(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::PatternGenerator : new ::TreeSearch::PatternGenerator;
   }
   static void *newArray_TreeSearchcLcLPatternGenerator(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::PatternGenerator[nElements] : new ::TreeSearch::PatternGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLPatternGenerator(void *p) {
      delete ((::TreeSearch::PatternGenerator*)p);
   }
   static void deleteArray_TreeSearchcLcLPatternGenerator(void *p) {
      delete [] ((::TreeSearch::PatternGenerator*)p);
   }
   static void destruct_TreeSearchcLcLPatternGenerator(void *p) {
      typedef ::TreeSearch::PatternGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::PatternGenerator

//______________________________________________________________________________
namespace ROOTDict {
   void TreeSearchcLcLPatternGeneratorcLcLStatistics_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TreeSearch::PatternGenerator::Statistics_t.
      typedef ::ROOTShadow::Shadow::TreeSearch::PatternGenerator::Statistics_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::TreeSearch::PatternGenerator::Statistics_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPatterns", &sobj->nPatterns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nLinks", &sobj->nLinks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBytes", &sobj->nBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxChildListLength", &sobj->MaxChildListLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHashBytes", &sobj->nHashBytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nAllPatterns", &sobj->nAllPatterns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BuildTime", &sobj->BuildTime);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::PatternGenerator::Statistics_t : new ::TreeSearch::PatternGenerator::Statistics_t;
   }
   static void *newArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::PatternGenerator::Statistics_t[nElements] : new ::TreeSearch::PatternGenerator::Statistics_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p) {
      delete ((::TreeSearch::PatternGenerator::Statistics_t*)p);
   }
   static void deleteArray_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p) {
      delete [] ((::TreeSearch::PatternGenerator::Statistics_t*)p);
   }
   static void destruct_TreeSearchcLcLPatternGeneratorcLcLStatistics_t(void *p) {
      typedef ::TreeSearch::PatternGenerator::Statistics_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::PatternGenerator::Statistics_t

      namespace TreeSearch {
//______________________________________________________________________________
void Road::Point::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Road::Point.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Road::Point::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Road::Point::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Road::Point::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Road::Point.
      TClass *R__cl = ::TreeSearch::Road::Point::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hit", &hit);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLRoadcLcLPoint(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::Road::Point : new ::TreeSearch::Road::Point;
   }
   static void *newArray_TreeSearchcLcLRoadcLcLPoint(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TreeSearch::Road::Point[nElements] : new ::TreeSearch::Road::Point[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLRoadcLcLPoint(void *p) {
      delete ((::TreeSearch::Road::Point*)p);
   }
   static void deleteArray_TreeSearchcLcLRoadcLcLPoint(void *p) {
      delete [] ((::TreeSearch::Road::Point*)p);
   }
   static void destruct_TreeSearchcLcLRoadcLcLPoint(void *p) {
      typedef ::TreeSearch::Road::Point current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Road::Point

      namespace TreeSearch {
//______________________________________________________________________________
void Road::Corners::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::Road::Corners.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::Road::Corners::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::Road::Corners::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void Road::Corners::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::Road::Corners.
      TClass *R__cl = ::TreeSearch::Road::Corners::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLL", &fXLL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXLR", &fXLR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZL", &fZL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXUL", &fXUL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXUR", &fXUR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZU", &fZU);
      TObject::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TreeSearchcLcLRoadcLcLCorners(void *p) {
      return  p ? new(p) ::TreeSearch::Road::Corners : new ::TreeSearch::Road::Corners;
   }
   static void *newArray_TreeSearchcLcLRoadcLcLCorners(Long_t nElements, void *p) {
      return p ? new(p) ::TreeSearch::Road::Corners[nElements] : new ::TreeSearch::Road::Corners[nElements];
   }
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLRoadcLcLCorners(void *p) {
      delete ((::TreeSearch::Road::Corners*)p);
   }
   static void deleteArray_TreeSearchcLcLRoadcLcLCorners(void *p) {
      delete [] ((::TreeSearch::Road::Corners*)p);
   }
   static void destruct_TreeSearchcLcLRoadcLcLCorners(void *p) {
      typedef ::TreeSearch::Road::Corners current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::Road::Corners

      namespace TreeSearch {
//______________________________________________________________________________
void BigBite::Streamer(TBuffer &R__b)
{
   // Stream an object of class TreeSearch::BigBite.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TreeSearch::BigBite::Class(),this);
   } else {
      R__b.WriteClassBuffer(TreeSearch::BigBite::Class(),this);
   }
}

} // namespace TreeSearch
//______________________________________________________________________________
      namespace TreeSearch {
void BigBite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TreeSearch::BigBite.
      TClass *R__cl = ::TreeSearch::BigBite::IsA();
      if (R__cl || R__insp.IsA()) { }
      THaSpectrometer::ShowMembers(R__insp);
}

} // namespace TreeSearch
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_TreeSearchcLcLBigBite(void *p) {
      delete ((::TreeSearch::BigBite*)p);
   }
   static void deleteArray_TreeSearchcLcLBigBite(void *p) {
      delete [] ((::TreeSearch::BigBite*)p);
   }
   static void destruct_TreeSearchcLcLBigBite(void *p) {
      typedef ::TreeSearch::BigBite current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::TreeSearch::BigBite

namespace ROOTDict {
   void listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR_Dictionary();
   static void *new_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p = 0);
   static void *newArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(Long_t size, void *p);
   static void delete_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p);
   static void deleteArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p);
   static void destruct_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>*)
   {
      list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>", -2, "prec_stl/list", 44,
                  typeid(list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR_Dictionary, isa_proxy, 0,
                  sizeof(list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>) );
      instance.SetNew(&new_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR);
      instance.SetNewArray(&newArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR);
      instance.SetDelete(&delete_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR);
      instance.SetDeleteArray(&deleteArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR);
      instance.SetDestructor(&destruct_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> : new list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>;
   }
   static void *newArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>[nElements] : new list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p) {
      delete ((list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>*)p);
   }
   static void deleteArray_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p) {
      delete [] ((list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>*)p);
   }
   static void destruct_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgR(void *p) {
      typedef list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>

namespace ROOTDict {
   void setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR_Dictionary();
   static void *new_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p = 0);
   static void *newArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(Long_t size, void *p);
   static void delete_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p);
   static void deleteArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p);
   static void destruct_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>*)
   {
      set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>", -2, "prec_stl/set", 49,
                  typeid(set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR_Dictionary, isa_proxy, 0,
                  sizeof(set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>) );
      instance.SetNew(&new_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR);
      instance.SetNewArray(&newArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR);
      instance.SetDelete(&delete_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR);
      instance.SetDeleteArray(&deleteArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR);
      instance.SetDestructor(&destruct_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Insert< set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess> : new set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>;
   }
   static void *newArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>[nElements] : new set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p) {
      delete ((set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>*)p);
   }
   static void deleteArray_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p) {
      delete [] ((set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>*)p);
   }
   static void destruct_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLessgR(void *p) {
      typedef set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>

namespace ROOTDict {
   void vectorlETHaHe3SpinModulemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETHaHe3SpinModulemUgR_Dictionary();
   static void *new_vectorlETHaHe3SpinModulemUgR(void *p = 0);
   static void *newArray_vectorlETHaHe3SpinModulemUgR(Long_t size, void *p);
   static void delete_vectorlETHaHe3SpinModulemUgR(void *p);
   static void deleteArray_vectorlETHaHe3SpinModulemUgR(void *p);
   static void destruct_vectorlETHaHe3SpinModulemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<THaHe3SpinModule*>*)
   {
      vector<THaHe3SpinModule*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<THaHe3SpinModule*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<THaHe3SpinModule*>", -2, "prec_stl/vector", 49,
                  typeid(vector<THaHe3SpinModule*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETHaHe3SpinModulemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<THaHe3SpinModule*>) );
      instance.SetNew(&new_vectorlETHaHe3SpinModulemUgR);
      instance.SetNewArray(&newArray_vectorlETHaHe3SpinModulemUgR);
      instance.SetDelete(&delete_vectorlETHaHe3SpinModulemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETHaHe3SpinModulemUgR);
      instance.SetDestructor(&destruct_vectorlETHaHe3SpinModulemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<THaHe3SpinModule*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<THaHe3SpinModule*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETHaHe3SpinModulemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<THaHe3SpinModule*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETHaHe3SpinModulemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<THaHe3SpinModule*> : new vector<THaHe3SpinModule*>;
   }
   static void *newArray_vectorlETHaHe3SpinModulemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<THaHe3SpinModule*>[nElements] : new vector<THaHe3SpinModule*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETHaHe3SpinModulemUgR(void *p) {
      delete ((vector<THaHe3SpinModule*>*)p);
   }
   static void deleteArray_vectorlETHaHe3SpinModulemUgR(void *p) {
      delete [] ((vector<THaHe3SpinModule*>*)p);
   }
   static void destruct_vectorlETHaHe3SpinModulemUgR(void *p) {
      typedef vector<THaHe3SpinModule*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<THaHe3SpinModule*>

namespace ROOTDict {
   void vectorlETHaOpticsHRScLcLTHaMatrixElementgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETHaOpticsHRScLcLTHaMatrixElementgR_Dictionary();
   static void *new_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p = 0);
   static void *newArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(Long_t size, void *p);
   static void delete_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p);
   static void deleteArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p);
   static void destruct_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<THaOpticsHRS::THaMatrixElement>*)
   {
      vector<THaOpticsHRS::THaMatrixElement> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<THaOpticsHRS::THaMatrixElement>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<THaOpticsHRS::THaMatrixElement>", -2, "prec_stl/vector", 49,
                  typeid(vector<THaOpticsHRS::THaMatrixElement>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETHaOpticsHRScLcLTHaMatrixElementgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<THaOpticsHRS::THaMatrixElement>) );
      instance.SetNew(&new_vectorlETHaOpticsHRScLcLTHaMatrixElementgR);
      instance.SetNewArray(&newArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR);
      instance.SetDelete(&delete_vectorlETHaOpticsHRScLcLTHaMatrixElementgR);
      instance.SetDeleteArray(&deleteArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR);
      instance.SetDestructor(&destruct_vectorlETHaOpticsHRScLcLTHaMatrixElementgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<THaOpticsHRS::THaMatrixElement> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<THaOpticsHRS::THaMatrixElement>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETHaOpticsHRScLcLTHaMatrixElementgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<THaOpticsHRS::THaMatrixElement>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<THaOpticsHRS::THaMatrixElement> : new vector<THaOpticsHRS::THaMatrixElement>;
   }
   static void *newArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<THaOpticsHRS::THaMatrixElement>[nElements] : new vector<THaOpticsHRS::THaMatrixElement>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p) {
      delete ((vector<THaOpticsHRS::THaMatrixElement>*)p);
   }
   static void deleteArray_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p) {
      delete [] ((vector<THaOpticsHRS::THaMatrixElement>*)p);
   }
   static void destruct_vectorlETHaOpticsHRScLcLTHaMatrixElementgR(void *p) {
      typedef vector<THaOpticsHRS::THaMatrixElement> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<THaOpticsHRS::THaMatrixElement>

namespace ROOTDict {
   void vectorlETreeSearchcLcLProjectionmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETreeSearchcLcLProjectionmUgR_Dictionary();
   static void *new_vectorlETreeSearchcLcLProjectionmUgR(void *p = 0);
   static void *newArray_vectorlETreeSearchcLcLProjectionmUgR(Long_t size, void *p);
   static void delete_vectorlETreeSearchcLcLProjectionmUgR(void *p);
   static void deleteArray_vectorlETreeSearchcLcLProjectionmUgR(void *p);
   static void destruct_vectorlETreeSearchcLcLProjectionmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TreeSearch::Projection*>*)
   {
      vector<TreeSearch::Projection*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TreeSearch::Projection*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TreeSearch::Projection*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TreeSearch::Projection*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETreeSearchcLcLProjectionmUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TreeSearch::Projection*>) );
      instance.SetNew(&new_vectorlETreeSearchcLcLProjectionmUgR);
      instance.SetNewArray(&newArray_vectorlETreeSearchcLcLProjectionmUgR);
      instance.SetDelete(&delete_vectorlETreeSearchcLcLProjectionmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETreeSearchcLcLProjectionmUgR);
      instance.SetDestructor(&destruct_vectorlETreeSearchcLcLProjectionmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TreeSearch::Projection*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TreeSearch::Projection*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETreeSearchcLcLProjectionmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TreeSearch::Projection*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETreeSearchcLcLProjectionmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::Projection*> : new vector<TreeSearch::Projection*>;
   }
   static void *newArray_vectorlETreeSearchcLcLProjectionmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::Projection*>[nElements] : new vector<TreeSearch::Projection*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETreeSearchcLcLProjectionmUgR(void *p) {
      delete ((vector<TreeSearch::Projection*>*)p);
   }
   static void deleteArray_vectorlETreeSearchcLcLProjectionmUgR(void *p) {
      delete [] ((vector<TreeSearch::Projection*>*)p);
   }
   static void destruct_vectorlETreeSearchcLcLProjectionmUgR(void *p) {
      typedef vector<TreeSearch::Projection*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TreeSearch::Projection*>

namespace ROOTDict {
   void vectorlETreeSearchcLcLRoadcLcLPointmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETreeSearchcLcLRoadcLcLPointmUgR_Dictionary();
   static void *new_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p = 0);
   static void *newArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR(Long_t size, void *p);
   static void delete_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p);
   static void deleteArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p);
   static void destruct_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TreeSearch::Road::Point*>*)
   {
      vector<TreeSearch::Road::Point*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TreeSearch::Road::Point*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TreeSearch::Road::Point*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TreeSearch::Road::Point*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETreeSearchcLcLRoadcLcLPointmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TreeSearch::Road::Point*>) );
      instance.SetNew(&new_vectorlETreeSearchcLcLRoadcLcLPointmUgR);
      instance.SetNewArray(&newArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR);
      instance.SetDelete(&delete_vectorlETreeSearchcLcLRoadcLcLPointmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR);
      instance.SetDestructor(&destruct_vectorlETreeSearchcLcLRoadcLcLPointmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TreeSearch::Road::Point*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TreeSearch::Road::Point*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETreeSearchcLcLRoadcLcLPointmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TreeSearch::Road::Point*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::Road::Point*> : new vector<TreeSearch::Road::Point*>;
   }
   static void *newArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::Road::Point*>[nElements] : new vector<TreeSearch::Road::Point*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p) {
      delete ((vector<TreeSearch::Road::Point*>*)p);
   }
   static void deleteArray_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p) {
      delete [] ((vector<TreeSearch::Road::Point*>*)p);
   }
   static void destruct_vectorlETreeSearchcLcLRoadcLcLPointmUgR(void *p) {
      typedef vector<TreeSearch::Road::Point*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TreeSearch::Road::Point*>

namespace ROOTDict {
   void vectorlETreeSearchcLcLWirePlanemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETreeSearchcLcLWirePlanemUgR_Dictionary();
   static void *new_vectorlETreeSearchcLcLWirePlanemUgR(void *p = 0);
   static void *newArray_vectorlETreeSearchcLcLWirePlanemUgR(Long_t size, void *p);
   static void delete_vectorlETreeSearchcLcLWirePlanemUgR(void *p);
   static void deleteArray_vectorlETreeSearchcLcLWirePlanemUgR(void *p);
   static void destruct_vectorlETreeSearchcLcLWirePlanemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TreeSearch::WirePlane*>*)
   {
      vector<TreeSearch::WirePlane*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TreeSearch::WirePlane*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TreeSearch::WirePlane*>", -2, "prec_stl/vector", 49,
                  typeid(vector<TreeSearch::WirePlane*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETreeSearchcLcLWirePlanemUgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TreeSearch::WirePlane*>) );
      instance.SetNew(&new_vectorlETreeSearchcLcLWirePlanemUgR);
      instance.SetNewArray(&newArray_vectorlETreeSearchcLcLWirePlanemUgR);
      instance.SetDelete(&delete_vectorlETreeSearchcLcLWirePlanemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlETreeSearchcLcLWirePlanemUgR);
      instance.SetDestructor(&destruct_vectorlETreeSearchcLcLWirePlanemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TreeSearch::WirePlane*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TreeSearch::WirePlane*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETreeSearchcLcLWirePlanemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TreeSearch::WirePlane*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETreeSearchcLcLWirePlanemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::WirePlane*> : new vector<TreeSearch::WirePlane*>;
   }
   static void *newArray_vectorlETreeSearchcLcLWirePlanemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TreeSearch::WirePlane*>[nElements] : new vector<TreeSearch::WirePlane*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETreeSearchcLcLWirePlanemUgR(void *p) {
      delete ((vector<TreeSearch::WirePlane*>*)p);
   }
   static void deleteArray_vectorlETreeSearchcLcLWirePlanemUgR(void *p) {
      delete [] ((vector<TreeSearch::WirePlane*>*)p);
   }
   static void destruct_vectorlETreeSearchcLcLWirePlanemUgR(void *p) {
      typedef vector<TreeSearch::WirePlane*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TreeSearch::WirePlane*>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR_Dictionary();
   static void *new_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p);
   static void destruct_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<TreeSearch::Road::Point*> >*)
   {
      vector<vector<TreeSearch::Road::Point*> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<TreeSearch::Road::Point*> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<TreeSearch::Road::Point*> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<TreeSearch::Road::Point*> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<TreeSearch::Road::Point*> >) );
      instance.SetNew(&new_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<TreeSearch::Road::Point*> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<TreeSearch::Road::Point*> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<TreeSearch::Road::Point*> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TreeSearch::Road::Point*> > : new vector<vector<TreeSearch::Road::Point*> >;
   }
   static void *newArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<TreeSearch::Road::Point*> >[nElements] : new vector<vector<TreeSearch::Road::Point*> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p) {
      delete ((vector<vector<TreeSearch::Road::Point*> >*)p);
   }
   static void deleteArray_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p) {
      delete [] ((vector<vector<TreeSearch::Road::Point*> >*)p);
   }
   static void destruct_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUgRsPgR(void *p) {
      typedef vector<vector<TreeSearch::Road::Point*> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<TreeSearch::Road::Point*> >

/********************************************************
* BigBiteDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBigBiteDict();

extern "C" void G__set_cpp_environmentBigBiteDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("THaBigBite.h");
  G__add_compiledheader("THaBigBiteTpMwdc.h");
  G__add_compiledheader("BBDecData.h");
  G__add_compiledheader("THaOptics.h");
  G__add_compiledheader("THaOpticsAGen.h");
  G__add_compiledheader("THaOpticsHRS.h");
  G__add_compiledheader("THaOpticsAnalytical.h");
  G__add_compiledheader("THaOpticsNoFeild.h");
  G__add_compiledheader("THaTriggerPlane.h");
  G__add_compiledheader("THaTriggerPlaneHit.h");
  G__add_compiledheader("THaScintPlane.h");
  G__add_compiledheader("THaAdcHit.h");
  G__add_compiledheader("THaPartialHit.h");
  G__add_compiledheader("THaScintBar.h");
  G__add_compiledheader("THaScintHit.h");
  G__add_compiledheader("THaScintPMT.h");
  G__add_compiledheader("THaTdcHit.h");
  G__add_compiledheader("THaMWDC.h");
  G__add_compiledheader("THaMWDCPlane.h");
  G__add_compiledheader("THaMWDCGroup.h");
  G__add_compiledheader("THaMWDCHit.h");
  G__add_compiledheader("THaMWDCLine.h");
  G__add_compiledheader("THaVDCTableTTDConv.h");
  G__add_compiledheader("THaVDC2DTableTTDConv.h");
  G__add_compiledheader("THaVDCFuncTTDConv.h");
  G__add_compiledheader("THaVDCLinearTTDConv.h");
  G__add_compiledheader("THaBBTotalShower.h");
  G__add_compiledheader("THaTimingPlane.h");
  G__add_compiledheader("THaScintPlaneDet.h");
  G__add_compiledheader("THaBBShower.h");
  G__add_compiledheader("THaBBShowerCluster.h");
  G__add_compiledheader("THaBBShowerBlock.h");
  G__add_compiledheader("MWDC.h");
  G__add_compiledheader("WirePlane.h");
  G__add_compiledheader("Hit.h");
  G__add_compiledheader("TimeToDistConv.h");
  G__add_compiledheader("Hitpattern.h");
  G__add_compiledheader("Projection.h");
  G__add_compiledheader("Pattern.h");
  G__add_compiledheader("PatternTree.h");
  G__add_compiledheader("PatternGenerator.h");
  G__add_compiledheader("TreeWalk.h");
  G__add_compiledheader("Road.h");
  G__add_compiledheader("BigBite.h");
  G__add_compiledheader("THaHe3Target.h");
  G__add_compiledheader("THaADCHe3Spin.h");
  G__add_compiledheader("THaBitHe3Spin.h");
  G__add_compiledheader("THaHe3SpinModule.h");
  G__add_compiledheader("Helper.h");
  G__add_compiledheader("Types.h");
  G__cpp_reset_tagtableBigBiteDict();
}
#include <new>
extern "C" int G__cpp_dllrevBigBiteDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* THaOptics */
static int G__BigBiteDict_306_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) THaOptics(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOptics(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaOptics*) G__getstructoffset())->ApplyOptics((THaTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaOptics*) G__getstructoffset())->ApplyOptics((THaTrack*) G__int(libp->para[0]), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaOptics*) G__getstructoffset())->ApplyOptics(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, *((TVector3*) G__int(libp->para[4])), *((TVector3*) G__int(libp->para[5]))
, *(TVector3*) libp->para[6].ref, *(TVector3*) libp->para[7].ref
, *(Double_t*) G__Doubleref(&libp->para[8]), *(Double_t*) G__Doubleref(&libp->para[9])
, *(Double_t*) G__Doubleref(&libp->para[10]), *(Double_t*) G__Doubleref(&libp->para[11])
, *(Double_t*) G__Doubleref(&libp->para[12])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = ((THaOptics*) G__getstructoffset())->CrossingLineLine2D(*((TVector2*) G__int(libp->para[0])), *((TVector2*) G__int(libp->para[1]))
, *((TVector2*) G__int(libp->para[2])), *((TVector2*) G__int(libp->para[3])));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((THaOptics*) G__getstructoffset())->CrossingSurfLine3D(*((TVector3*) G__int(libp->para[0])), *((TVector3*) G__int(libp->para[1]))
, *((TVector3*) G__int(libp->para[2])), *((TVector3*) G__int(libp->para[3])));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaOptics*) G__getstructoffset())->GetPcentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaOptics*) G__getstructoffset())->GetCollDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaOptics*) G__getstructoffset())->GetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaOptics*) G__getstructoffset())->SetBeamName((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaOptics*) G__getstructoffset())->ZeroOrderCorrection(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaOptics*) G__getstructoffset())->ApplyCorrection(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOptics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOptics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOptics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOptics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_306_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOptics G__TTHaOptics;
static int G__BigBiteDict_306_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOptics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOptics*) (soff+(sizeof(THaOptics)*i)))->~G__TTHaOptics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOptics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOptics*) (soff))->~G__TTHaOptics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBigBite */
static int G__BigBiteDict_307_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBigBite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaBigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaBigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaBigBite*) G__getstructoffset())->MountOptics((THaOptics*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaBigBite*) G__getstructoffset())->GetOptics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBigBite*) G__getstructoffset())->DebugPort((void*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBigBite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBigBite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBigBite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBigBite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBigBite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_307_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBigBite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBigBite G__TTHaBigBite;
static int G__BigBiteDict_307_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBigBite*) (soff+(sizeof(THaBigBite)*i)))->~G__TTHaBigBite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBigBite*) (soff))->~G__TTHaBigBite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch */
static int G__BigBiteDict_308_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::EProjType& obj = TreeSearch::operator++(*(TreeSearch::EProjType*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_308_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::operator++(*(TreeSearch::EProjType*) libp->para[0].ref, (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::MWDC */
static int G__BigBiteDict_309_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::MWDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::MWDC(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TreeSearch::MWDC(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::MWDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TreeSearch::MWDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::MWDC((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TreeSearch::MWDC((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::MWDC*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::MWDC*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::MWDC*) G__getstructoffset())->EnableEventDisplay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::MWDC*) G__getstructoffset())->EnableEventDisplay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::pdbl_t& obj = ((const TreeSearch::MWDC*) G__getstructoffset())->GetChisqLimits((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::MWDC*) G__getstructoffset())->GetRefTime((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::MWDC*) G__getstructoffset())->NameToType((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::MWDC*) G__getstructoffset())->GetEvNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::WirePlane*>& obj = ((TreeSearch::MWDC*) G__getstructoffset())->GetListOfPlanes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::Projection*>& obj = ((TreeSearch::MWDC*) G__getstructoffset())->GetListOfProjections();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::MWDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MWDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::MWDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::MWDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::MWDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MWDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::MWDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MWDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_309_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::MWDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::MWDC G__TTreeSearchcLcLMWDC;
static int G__BigBiteDict_309_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::MWDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::MWDC*) (soff+(sizeof(TreeSearch::MWDC)*i)))->~G__TTreeSearchcLcLMWDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::MWDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::MWDC*) (soff))->~G__TTreeSearchcLcLMWDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaTriggerPlane */
static int G__BigBiteDict_310_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTriggerPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTriggerPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaTriggerPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTriggerPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaTriggerPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetEPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetdEPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetHitAcceptanceDx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetHitAcceptanceDy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetHitAcceptanceDz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetHitAcceptanceMinDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetHitAcceptanceMaxDt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetNPartialHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetPartialHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetPartialHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetTrackHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTriggerPlane*) G__getstructoffset())->GetNTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetMatchRatioE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetMatchRatiodE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlane*) G__getstructoffset())->GetMatchRatioTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaTriggerPlane*) G__getstructoffset())->CoarseMatchingHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaTriggerPlane*) G__getstructoffset())->FineMatchingHits(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaTriggerPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaTriggerPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaTriggerPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaTriggerPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTriggerPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_310_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTriggerPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaTriggerPlane G__TTHaTriggerPlane;
static int G__BigBiteDict_310_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaTriggerPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaTriggerPlane*) (soff+(sizeof(THaTriggerPlane)*i)))->~G__TTHaTriggerPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaTriggerPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaTriggerPlane*) (soff))->~G__TTHaTriggerPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBigBiteTpMwdc */
static int G__BigBiteDict_311_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBigBiteTpMwdc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaBigBiteTpMwdc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaBigBiteTpMwdc((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBigBiteTpMwdc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBiteTpMwdc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBigBiteTpMwdc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBigBiteTpMwdc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBigBiteTpMwdc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBiteTpMwdc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBigBiteTpMwdc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBigBiteTpMwdc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_311_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBigBiteTpMwdc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBigBiteTpMwdc G__TTHaBigBiteTpMwdc;
static int G__BigBiteDict_311_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBigBiteTpMwdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBigBiteTpMwdc*) (soff+(sizeof(THaBigBiteTpMwdc)*i)))->~G__TTHaBigBiteTpMwdc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBigBiteTpMwdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBigBiteTpMwdc*) (soff))->~G__TTHaBigBiteTpMwdc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BBDecData */
static int G__BigBiteDict_317_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BBDecData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BBDecData((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) BBDecData((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BBDecData((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) BBDecData((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BBDecData[n];
       } else {
         p = new((void*) gvp) BBDecData[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new BBDecData;
       } else {
         p = new((void*) gvp) BBDecData;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BBDecData*) G__getstructoffset())->WriteHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BBDecData*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BBDecData*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BBDecData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BBDecData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BBDecData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BBDecData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BBDecData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BBDecData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BBDecData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BBDecData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_317_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BBDecData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BBDecData G__TBBDecData;
static int G__BigBiteDict_317_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BBDecData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BBDecData*) (soff+(sizeof(BBDecData)*i)))->~G__TBBDecData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BBDecData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BBDecData*) (soff))->~G__TBBDecData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOptics::TOpticsDir */
static int G__BigBiteDict_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsDir(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsDir(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsDir(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsDir((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsDir((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsDir* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsDir(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsDir(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((THaOptics::TOpticsDir*) G__getstructoffset())->GetVector();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaOptics::TOpticsDir*) G__getstructoffset())->GetCoordSys());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaOptics::TOpticsDir*) G__getstructoffset())->GetOptics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->SetAll((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 4:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->SetAll((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 3:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->SetAll((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 2:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->SetAll((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->TransCoordSys((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   case 1:
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->TransCoordSys((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator+=(*(THaOptics::TOpticsDir*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator-=(*(THaOptics::TOpticsDir*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator=(*(THaOptics::TOpticsDir*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator+=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsDir& obj = ((THaOptics::TOpticsDir*) G__getstructoffset())->operator-=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOptics::TOpticsDir::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsDir::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOptics::TOpticsDir::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOptics::TOpticsDir::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOptics::TOpticsDir*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsDir::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::TOpticsDir::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsDir::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_327_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::TOpticsDir::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOptics::TOpticsDir G__TTHaOpticscLcLTOpticsDir;
static int G__BigBiteDict_327_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOptics::TOpticsDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOptics::TOpticsDir*) (soff+(sizeof(THaOptics::TOpticsDir)*i)))->~G__TTHaOpticscLcLTOpticsDir();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOptics::TOpticsDir*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOptics::TOpticsDir*) (soff))->~G__TTHaOpticscLcLTOpticsDir();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOptics::TOpticsPos */
static int G__BigBiteDict_328_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsPos(
(THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOptics::TOpticsPos((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaOptics::TOpticsPos((THaOptics::TOpticsDir::ECoordSys) G__int(libp->para[0]), (THaOptics*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsPos(*(THaOptics::TOpticsPos*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsPos(*(THaOptics::TOpticsPos*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOptics::TOpticsPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaOptics::TOpticsPos(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THaOptics::TOpticsPos(*(THaOptics::TOpticsDir*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsPos& obj = ((THaOptics::TOpticsPos*) G__getstructoffset())->operator=(*(THaOptics::TOpticsPos*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsPos& obj = ((THaOptics::TOpticsPos*) G__getstructoffset())->operator=(*(THaOptics::TOpticsDir*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsPos& obj = ((THaOptics::TOpticsPos*) G__getstructoffset())->operator+=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const THaOptics::TOpticsPos& obj = ((THaOptics::TOpticsPos*) G__getstructoffset())->operator-=(*(TVector3*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOptics::TOpticsPos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsPos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOptics::TOpticsPos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOptics::TOpticsPos::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOptics::TOpticsPos*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsPos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::TOpticsPos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOptics::TOpticsPos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_328_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOptics::TOpticsPos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOptics::TOpticsPos G__TTHaOpticscLcLTOpticsPos;
static int G__BigBiteDict_328_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOptics::TOpticsPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOptics::TOpticsPos*) (soff+(sizeof(THaOptics::TOpticsPos)*i)))->~G__TTHaOpticscLcLTOpticsPos();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOptics::TOpticsPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOptics::TOpticsPos*) (soff))->~G__TTHaOpticscLcLTOpticsPos();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOpticsAGen */
static int G__BigBiteDict_330_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOpticsAGen* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsAGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) THaOpticsAGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsAGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOpticsAGen(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOpticsAGen::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAGen::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOpticsAGen::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOpticsAGen::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOpticsAGen*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAGen::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsAGen::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAGen::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_330_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsAGen::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOpticsAGen G__TTHaOpticsAGen;
static int G__BigBiteDict_330_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOpticsAGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOpticsAGen*) (soff+(sizeof(THaOpticsAGen)*i)))->~G__TTHaOpticsAGen();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOpticsAGen*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOpticsAGen*) (soff))->~G__TTHaOpticsAGen();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOpticsHRS */
static int G__BigBiteDict_331_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOpticsHRS* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsHRS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) THaOpticsHRS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsHRS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOpticsHRS(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOpticsHRS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsHRS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOpticsHRS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOpticsHRS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOpticsHRS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsHRS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsHRS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsHRS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_331_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsHRS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOpticsHRS G__TTHaOpticsHRS;
static int G__BigBiteDict_331_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOpticsHRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOpticsHRS*) (soff+(sizeof(THaOpticsHRS)*i)))->~G__TTHaOpticsHRS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOpticsHRS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOpticsHRS*) (soff))->~G__TTHaOpticsHRS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOpticsAnalytical */
static int G__BigBiteDict_340_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOpticsAnalytical* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsAnalytical(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) THaOpticsAnalytical(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsAnalytical(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOpticsAnalytical(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->CalxA((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->CalR((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->SetRCentral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TComplex* pobj;
         TComplex xobj = THaOpticsAnalytical::CSqrt((Double_t) G__double(libp->para[0]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TComplex* pobj;
         TComplex xobj = THaOpticsAnalytical::CSqrt(*((TComplex*) G__int(libp->para[0])));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) THaOpticsAnalytical::Power((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TComplex* pobj;
         TComplex xobj = THaOpticsAnalytical::Power(*((TComplex*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TComplex* pobj;
         TComplex xobj = THaOpticsAnalytical::Complex((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new TComplex(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->GetMagneticFieldFrontShift());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->GetMagneticFieldRearSlopeAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->GetMagneticFieldTopCrossing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->GetCurveRadiusOfCentralMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->SetMagneticFieldFrontShift((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->SetMagneticFieldRearSlopeAngle((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->SetMagneticFieldTopCrossing((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaOpticsAnalytical*) G__getstructoffset())->SetCurveRadiusOfCentralMomentum((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOpticsAnalytical*) G__getstructoffset())->Fitter(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOpticsAnalytical::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAnalytical::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOpticsAnalytical::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOpticsAnalytical::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOpticsAnalytical*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAnalytical::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsAnalytical::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsAnalytical::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_340_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsAnalytical::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOpticsAnalytical G__TTHaOpticsAnalytical;
static int G__BigBiteDict_340_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOpticsAnalytical*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOpticsAnalytical*) (soff+(sizeof(THaOpticsAnalytical)*i)))->~G__TTHaOpticsAnalytical();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOpticsAnalytical*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOpticsAnalytical*) (soff))->~G__TTHaOpticsAnalytical();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaOpticsNoFeild */
static int G__BigBiteDict_341_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaOpticsNoFeild* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsNoFeild(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     } else {
       p = new((void*) gvp) THaOpticsNoFeild(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaOpticsNoFeild(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaOpticsNoFeild(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaSpectrometer*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaOpticsNoFeild::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsNoFeild::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaOpticsNoFeild::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaOpticsNoFeild::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaOpticsNoFeild*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsNoFeild::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsNoFeild::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaOpticsNoFeild::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_341_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaOpticsNoFeild::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaOpticsNoFeild G__TTHaOpticsNoFeild;
static int G__BigBiteDict_341_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaOpticsNoFeild*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaOpticsNoFeild*) (soff+(sizeof(THaOpticsNoFeild)*i)))->~G__TTHaOpticsNoFeild();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaOpticsNoFeild*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaOpticsNoFeild*) (soff))->~G__TTHaOpticsNoFeild();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaScintPlane */
static int G__BigBiteDict_344_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaScintPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) THaScintPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlane[n];
     } else {
       p = new((void*) gvp) THaScintPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlane;
     } else {
       p = new((void*) gvp) THaScintPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlane*) G__getstructoffset())->CoarseProcess(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlane*) G__getstructoffset())->FineProcess(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaScintPlane*) G__getstructoffset())->IsTracking());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaScintPlane*) G__getstructoffset())->IsPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((THaScintPlane*) G__getstructoffset())->ReadNumberSignStartComment((FILE*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlane*) G__getstructoffset())->BuildAllBars(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlane*) G__getstructoffset())->BuildCompleteBars(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNBars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNLtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNRtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNLaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNRaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNPartHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRefHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetLtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetLtHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRtHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetLaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetLaHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRaHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBarHitT((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBarHitT((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBarHitA((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetBarHitA((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->GetNRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetRefCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlane*) G__getstructoffset())->AreRefChOkay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetPartHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlane*) G__getstructoffset())->GetPartHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaScintPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaScintPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaScintPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_344_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaScintPlane G__TTHaScintPlane;
static int G__BigBiteDict_344_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaScintPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaScintPlane*) (soff+(sizeof(THaScintPlane)*i)))->~G__TTHaScintPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaScintPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaScintPlane*) (soff))->~G__TTHaScintPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaScintPMT */
static int G__BigBiteDict_345_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (THaScintBar*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THaScintPMT(
(Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaScintPMT((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPMT((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) THaScintPMT((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintPMT[n];
       } else {
         p = new((void*) gvp) THaScintPMT[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintPMT;
       } else {
         p = new((void*) gvp) THaScintPMT;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPMT*) G__getstructoffset())->GetScintBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetGain((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetPed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetTDCRes((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetTOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetTimeWalk((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetTimeWExp((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetScintBar((THaScintBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetBarNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetSide((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetRawLowLim((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetRawUpLim((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->SetRawWrapAround((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetGain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPMT*) G__getstructoffset())->GetPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetTDCRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetTOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetTimeWalk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetTimeWExp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPMT*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPMT*) G__getstructoffset())->GetSide());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPMT*) G__getstructoffset())->GetRawLowLim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPMT*) G__getstructoffset())->GetRawUpLim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPMT*) G__getstructoffset())->GetRawWrapAround());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaScintPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaScintPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaScintPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_345_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_345_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaScintPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaScintPMT(*(THaScintPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaScintPMT G__TTHaScintPMT;
static int G__BigBiteDict_345_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaScintPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaScintPMT*) (soff+(sizeof(THaScintPMT)*i)))->~G__TTHaScintPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaScintPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaScintPMT*) (soff))->~G__TTHaScintPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_345_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPMT* dest = (THaScintPMT*) G__getstructoffset();
   *dest = *(THaScintPMT*) libp->para[0].ref;
   const THaScintPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaScintHit */
static int G__BigBiteDict_346_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaScintHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) THaScintHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintHit((THaScintHit*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaScintHit((THaScintHit*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintHit[n];
       } else {
         p = new((void*) gvp) THaScintHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintHit;
       } else {
         p = new((void*) gvp) THaScintHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaScintHit((THaScintHit*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaScintHit((THaScintHit*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaScintHit(
(THaScintHit*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) THaScintHit(
(THaScintHit*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintHit*) G__getstructoffset())->GetScintBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->GetPlaneNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->GetBarNum_nd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaScintHit*) G__getstructoffset())->GetHitTdiff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->GetOrder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->GetClusterNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetScintBar((THaScintBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetPlaneNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetBarNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetBarNum_nd((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetYHitPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetHitTOF((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetHitEdep((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetHitTdiff((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetHitOrder((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->SetClusterNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->AddEnergy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintHit*) G__getstructoffset())->CopyScintHit((THaScintHit*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaScintHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaScintHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaScintHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_346_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_346_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaScintHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaScintHit(*(THaScintHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaScintHit G__TTHaScintHit;
static int G__BigBiteDict_346_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaScintHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaScintHit*) (soff+(sizeof(THaScintHit)*i)))->~G__TTHaScintHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaScintHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaScintHit*) (soff))->~G__TTHaScintHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_346_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintHit* dest = (THaScintHit*) G__getstructoffset();
   *dest = *(THaScintHit*) libp->para[0].ref;
   const THaScintHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaScintBar */
static int G__BigBiteDict_347_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 25:
     //m: 25
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]), (Int_t) G__int(libp->para[23])
, (Double_t) G__double(libp->para[24]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]), (Int_t) G__int(libp->para[23])
, (Double_t) G__double(libp->para[24]));
     }
     break;
   case 24:
     //m: 24
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]), (Int_t) G__int(libp->para[23]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]), (Int_t) G__int(libp->para[23]));
     }
     break;
   case 23:
     //m: 23
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21])
, (Int_t) G__int(libp->para[22]));
     }
     break;
   case 22:
     //m: 22
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]), (Double_t) G__double(libp->para[21]));
     }
     break;
   case 21:
     //m: 21
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19])
, (Int_t) G__int(libp->para[20]));
     }
     break;
   case 20:
     //m: 20
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]), (Int_t) G__int(libp->para[19]));
     }
     break;
   case 19:
     //m: 19
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Int_t) G__int(libp->para[18]));
     }
     break;
   case 18:
     //m: 18
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17]));
     }
     break;
   case 17:
     //m: 17
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]));
     }
     break;
   case 16:
     //m: 16
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]), (Double_t) G__double(libp->para[15]));
     }
     break;
   case 15:
     //m: 15
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13])
, (Int_t) G__int(libp->para[14]));
     }
     break;
   case 14:
     //m: 14
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]), (Double_t) G__double(libp->para[13]));
     }
     break;
   case 13:
     //m: 13
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11])
, (Double_t) G__double(libp->para[12]));
     }
     break;
   case 12:
     //m: 12
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t) G__double(libp->para[11]));
     }
     break;
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Int_t) G__int(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THaScintBar(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) THaScintBar((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintBar((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) THaScintBar((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintBar[n];
       } else {
         p = new((void*) gvp) THaScintBar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaScintBar;
       } else {
         p = new((void*) gvp) THaScintBar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetXPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetYPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetZPos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetXWidth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetYWidth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetZWidth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetC((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetAtt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetBarType((THaScintBar::EBarType) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetBarNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->SetBarNum_nd((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetXWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetYWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetZWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetAtt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaScintBar*) G__getstructoffset())->GetLPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaScintBar*) G__getstructoffset())->GetRPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintBar*) G__getstructoffset())->GetBarType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintBar*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintBar*) G__getstructoffset())->GetBarNum_nd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaScintBar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintBar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaScintBar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaScintBar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintBar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintBar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintBar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintBar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_347_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintBar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_347_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaScintBar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaScintBar(*(THaScintBar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaScintBar G__TTHaScintBar;
static int G__BigBiteDict_347_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaScintBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaScintBar*) (soff+(sizeof(THaScintBar)*i)))->~G__TTHaScintBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaScintBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaScintBar*) (soff))->~G__TTHaScintBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_347_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintBar* dest = (THaScintBar*) G__getstructoffset();
   *dest = *(THaScintBar*) libp->para[0].ref;
   const THaScintBar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaTriggerPlaneHit */
static int G__BigBiteDict_348_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTriggerPlaneHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaTriggerPlaneHit((THaScintHit*) G__int(libp->para[0]), (THaScintHit*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaTriggerPlaneHit((THaScintHit*) G__int(libp->para[0]), (THaScintHit*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetEHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetdEHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaTriggerPlaneHit*) G__getstructoffset())->IsFullHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaTriggerPlaneHit*) G__getstructoffset())->IsPartialHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTriggerPlaneHit*) G__getstructoffset())->Status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitTOF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetSecondaryHitXPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetSecondaryHitYPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetSecondaryHitZPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const THaTriggerPlaneHit*) G__getstructoffset())->GetDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitdEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTriggerPlaneHit*) G__getstructoffset())->GetHitTotalEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaTriggerPlaneHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlaneHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaTriggerPlaneHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaTriggerPlaneHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaTriggerPlaneHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlaneHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTriggerPlaneHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTriggerPlaneHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_348_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTriggerPlaneHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_348_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaTriggerPlaneHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaTriggerPlaneHit(*(THaTriggerPlaneHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaTriggerPlaneHit G__TTHaTriggerPlaneHit;
static int G__BigBiteDict_348_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaTriggerPlaneHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaTriggerPlaneHit*) (soff+(sizeof(THaTriggerPlaneHit)*i)))->~G__TTHaTriggerPlaneHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaTriggerPlaneHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaTriggerPlaneHit*) (soff))->~G__TTHaTriggerPlaneHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_348_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTriggerPlaneHit* dest = (THaTriggerPlaneHit*) G__getstructoffset();
   *dest = *(THaTriggerPlaneHit*) libp->para[0].ref;
   const THaTriggerPlaneHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaAdcHit */
static int G__BigBiteDict_352_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaAdcHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaAdcHit((THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaAdcHit((THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaAdcHit((THaScintPMT*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaAdcHit((THaScintPMT*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaAdcHit[n];
       } else {
         p = new((void*) gvp) THaAdcHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaAdcHit;
       } else {
         p = new((void*) gvp) THaAdcHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaAdcHit*) G__getstructoffset())->GetPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaAdcHit*) G__getstructoffset())->GetRawAmpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaAdcHit*) G__getstructoffset())->GetAmplPedCor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaAdcHit*) G__getstructoffset())->GetAmpl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaAdcHit*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaAdcHit*) G__getstructoffset())->GetSide());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaAdcHit*) G__getstructoffset())->CorrectHit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaAdcHit*) G__getstructoffset())->SetRawAmpl((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaAdcHit*) G__getstructoffset())->SetBarNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaAdcHit*) G__getstructoffset())->SetSide((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaAdcHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaAdcHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaAdcHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaAdcHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaAdcHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaAdcHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaAdcHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaAdcHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_352_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaAdcHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_352_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaAdcHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaAdcHit(*(THaAdcHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaAdcHit G__TTHaAdcHit;
static int G__BigBiteDict_352_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaAdcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaAdcHit*) (soff+(sizeof(THaAdcHit)*i)))->~G__TTHaAdcHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaAdcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaAdcHit*) (soff))->~G__TTHaAdcHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_352_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaAdcHit* dest = (THaAdcHit*) G__getstructoffset();
   *dest = *(THaAdcHit*) libp->para[0].ref;
   const THaAdcHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaTdcHit */
static int G__BigBiteDict_353_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTdcHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTdcHit(
(THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) THaTdcHit(
(THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTdcHit((THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaTdcHit((THaScintPMT*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTdcHit((THaScintPMT*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaTdcHit((THaScintPMT*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaTdcHit[n];
       } else {
         p = new((void*) gvp) THaTdcHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaTdcHit;
       } else {
         p = new((void*) gvp) THaTdcHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTdcHit*) G__getstructoffset())->GetPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTdcHit*) G__getstructoffset())->GetRawTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaTdcHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTdcHit*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaTdcHit*) G__getstructoffset())->GetSide());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THaTdcHit*) G__getstructoffset())->UpdateTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THaTdcHit*) G__getstructoffset())->UpdateTime();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaTdcHit*) G__getstructoffset())->SetRawTime((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaTdcHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTdcHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaTdcHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaTdcHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaTdcHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTdcHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTdcHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTdcHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_353_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTdcHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_353_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaTdcHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaTdcHit(*(THaTdcHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaTdcHit G__TTHaTdcHit;
static int G__BigBiteDict_353_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaTdcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaTdcHit*) (soff+(sizeof(THaTdcHit)*i)))->~G__TTHaTdcHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaTdcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaTdcHit*) (soff))->~G__TTHaTdcHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_353_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTdcHit* dest = (THaTdcHit*) G__getstructoffset();
   *dest = *(THaTdcHit*) libp->para[0].ref;
   const THaTdcHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaPartialHit */
static int G__BigBiteDict_354_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaPartialHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 11:
     //m: 11
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]));
     }
     break;
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaPartialHit(
(THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit((THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaPartialHit((THaScintBar*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaPartialHit((THaScintBar*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaPartialHit((THaScintBar*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaPartialHit[n];
       } else {
         p = new((void*) gvp) THaPartialHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaPartialHit;
       } else {
         p = new((void*) gvp) THaPartialHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaPartialHit*) G__getstructoffset())->GetScintBar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaPartialHit*) G__getstructoffset())->GetBarNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaPartialHit*) G__getstructoffset())->GetCaseNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetLt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetRt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetLa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetRa());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetLt_raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetRt_raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetLa_raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaPartialHit*) G__getstructoffset())->GetRa_raw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetScintBar((THaScintBar*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetBarNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetCaseNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetLt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetRt((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetLa((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetRa((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetLt_raw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetRt_raw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetLa_raw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->SetRa_raw((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaPartialHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaPartialHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaPartialHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaPartialHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaPartialHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaPartialHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaPartialHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaPartialHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_354_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaPartialHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_354_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaPartialHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaPartialHit(*(THaPartialHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaPartialHit G__TTHaPartialHit;
static int G__BigBiteDict_354_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaPartialHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaPartialHit*) (soff+(sizeof(THaPartialHit)*i)))->~G__TTHaPartialHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaPartialHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaPartialHit*) (soff))->~G__TTHaPartialHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_354_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaPartialHit* dest = (THaPartialHit*) G__getstructoffset();
   *dest = *(THaPartialHit*) libp->para[0].ref;
   const THaPartialHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaMWDCPlane */
static int G__BigBiteDict_358_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaMWDCPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaMWDCPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCPlane((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaMWDCPlane((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCPlane[n];
       } else {
         p = new((void*) gvp) THaMWDCPlane[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCPlane;
       } else {
         p = new((void*) gvp) THaMWDCPlane;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNWires());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetWires());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetWire((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNWiresHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetRefCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetRefHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetNRefHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetXWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetYWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetWBeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetWSpac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetCellHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetWAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetTDCRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetPosRes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetDriftVel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMaxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMaxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMinX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMinY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMaxTH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMaxPH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMinTH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetActAreaMinPH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetXCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetYCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetThetaCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCPlane*) G__getstructoffset())->GetPhiCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCPlane*) G__getstructoffset())->IsInReconstruction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->GetPlaneType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCPlane*) G__getstructoffset())->IsXPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCPlane*) G__getstructoffset())->IsUPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCPlane*) G__getstructoffset())->IsVPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCPlane*) G__getstructoffset())->IsYPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaMWDCPlane*) G__getstructoffset())->AreRefChOkay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetXWidth();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetYWidth();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetWBeg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetWSpac((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetWAngle((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetWAngleDeg((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetTDCRes((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetPosRes((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetDriftVel((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMaxX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMaxY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMinX((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMinY((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMaxTH((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMaxPH((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMinTH((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetActAreaMinPH((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetXCorr((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetYCorr((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetThetaDegCorr((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetPhiDegCorr((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetInReconstruct((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->SetHits((TClonesArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaMWDCPlane*) G__getstructoffset())->GetTTDConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((THaMWDCPlane*) G__getstructoffset())->ConvertDriftTimeToDistance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaMWDCPlane*) G__getstructoffset())->ConvertDriftTimeToDistance((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCPlane*) G__getstructoffset())->XYtoPlaneCoord((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCPlane*) G__getstructoffset())->GetXYCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->LoadMCHitAt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->PrintDriftCuts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaMWDCPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaMWDCPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaMWDCPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_358_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaMWDCPlane G__TTHaMWDCPlane;
static int G__BigBiteDict_358_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaMWDCPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaMWDCPlane*) (soff+(sizeof(THaMWDCPlane)*i)))->~G__TTHaMWDCPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaMWDCPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaMWDCPlane*) (soff))->~G__TTHaMWDCPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaMWDCGroup */
static int G__BigBiteDict_359_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaMWDCGroup(
*((vector<THaMWDCHit*>*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])
, (TMatrixD*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) THaMWDCGroup(
*((vector<THaMWDCHit*>*) G__int(libp->para[0])), (UInt_t) G__int(libp->para[1])
, (TMatrixD*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaMWDCGroup(
(THaMWDCHit**) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (TMatrixD*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) THaMWDCGroup(
(THaMWDCHit**) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (TMatrixD*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaMWDCGroup(*(THaMWDCGroup*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) THaMWDCGroup(*(THaMWDCGroup*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         THaTrack* pobj;
         THaTrack xobj = ((THaMWDCGroup*) G__getstructoffset())->GetTrack();
         pobj = new THaTrack(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetNDoF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetChi2NDoF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((THaMWDCGroup*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<THaMWDCHit*>* pobj;
         vector<THaMWDCHit*> xobj = ((THaMWDCGroup*) G__getstructoffset())->GetHits();
         pobj = new vector<THaMWDCHit*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaMWDCGroup*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((THaMWDCGroup*) G__getstructoffset())->GetPlaneBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((THaMWDCGroup*) G__getstructoffset())->GetLRbits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaMWDCGroup*) G__getstructoffset())->GetConstructMatrix());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetChi2Cont((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCGroup*) G__getstructoffset())->GetCoarseChi2Cont((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((THaMWDCGroup*) G__getstructoffset())->GetStatusBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsL1Group());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsL2Group());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsFresh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsCoarse());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsFine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsValidTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCGroup*) G__getstructoffset())->SetTrackNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCGroup*) G__getstructoffset())->SetChi2Cont();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCGroup*) G__getstructoffset())->SetL1Group((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCGroup*) G__getstructoffset())->SetL2Group((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaMWDCGroup*) G__getstructoffset())->DoCoarseTracking());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((THaMWDCGroup*) G__getstructoffset())->DoFineTracking((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((THaMWDCGroup*) G__getstructoffset())->DoFineTracking());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCGroup*) G__getstructoffset())->IsSimilarTrack(*((THaTrack*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaMWDCGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaMWDCGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaMWDCGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_359_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaMWDCGroup G__TTHaMWDCGroup;
static int G__BigBiteDict_359_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaMWDCGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaMWDCGroup*) (soff+(sizeof(THaMWDCGroup)*i)))->~G__TTHaMWDCGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaMWDCGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaMWDCGroup*) (soff))->~G__TTHaMWDCGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_359_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCGroup* dest = (THaMWDCGroup*) G__getstructoffset();
   *dest = *(THaMWDCGroup*) libp->para[0].ref;
   const THaMWDCGroup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaMWDCHit */
static int G__BigBiteDict_360_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaMWDCHit(
(THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit((THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaMWDCHit((THaMWDCPlane*) G__int(libp->para[0]), (THaVDCWire*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCHit((THaMWDCPlane*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaMWDCHit((THaMWDCPlane*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCHit[n];
       } else {
         p = new((void*) gvp) THaMWDCHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCHit;
       } else {
         p = new((void*) gvp) THaMWDCHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDCHit*) G__getstructoffset())->GetPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaMWDCHit*) G__getstructoffset())->GetGroup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetCoord((Double_t) G__double(libp->para[0]), (THaMWDCHit::ELR) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetCoord((Double_t) G__double(libp->para[0]), (THaMWDCHit::ELR) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetCoord((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetCoord());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetTrackNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaMWDCHit*) G__getstructoffset())->GetTrackNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCHit*) G__getstructoffset())->VerifiedByShower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCHit*) G__getstructoffset())->VerifiedByShowerDouble());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCHit*) G__getstructoffset())->IsValidByShower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaMWDCHit*) G__getstructoffset())->IsValidByShowerDouble());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetVerifiedByShower((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetIsValidByShower((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetOwnedStatus((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetScintOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetLR((THaMWDCHit::ELR) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->FixLR((THaMWDCHit::ELR) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->UnfixLR();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaMWDCHit*) G__getstructoffset())->GetLR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetChi2Cont((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->SetCoarseChi2Cont((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetChi2Cont());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaMWDCHit*) G__getstructoffset())->GetCoarseChi2Cont());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCHit*) G__getstructoffset())->IsDataValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCHit*) G__getstructoffset())->IsOwned());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCHit*) G__getstructoffset())->IsLRFixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaMWDCHit*) G__getstructoffset())->IsCoordValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaMWDCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaMWDCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaMWDCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_360_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaMWDCHit G__TTHaMWDCHit;
static int G__BigBiteDict_360_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaMWDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaMWDCHit*) (soff+(sizeof(THaMWDCHit)*i)))->~G__TTHaMWDCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaMWDCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaMWDCHit*) (soff))->~G__TTHaMWDCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaMWDC */
static int G__BigBiteDict_361_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDC(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaMWDC(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaMWDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDC((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaMWDC((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THaMWDC*) G__getstructoffset())->EnableBenchmarks((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THaMWDC*) G__getstructoffset())->EnableBenchmarks();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const THaMWDC*) G__getstructoffset())->GetNPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDC*) G__getstructoffset())->GetPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDC*) G__getstructoffset())->GetPlane((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const THaMWDC*) G__getstructoffset())->GetNGroups());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<THaMWDCGroup*>* pobj;
         vector<THaMWDCGroup*> xobj = ((THaMWDC*) G__getstructoffset())->GetGroups();
         pobj = new vector<THaMWDCGroup*>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaMWDC*) G__getstructoffset())->GetGroup((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaMWDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaMWDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaMWDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_361_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaMWDC G__TTHaMWDC;
static int G__BigBiteDict_361_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaMWDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaMWDC*) (soff+(sizeof(THaMWDC)*i)))->~G__TTHaMWDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaMWDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaMWDC*) (soff))->~G__TTHaMWDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaMWDCLine */
static int G__BigBiteDict_393_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCLine* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCLine(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) THaMWDCLine(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCLine(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaMWDCLine(
(Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCLine((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaMWDCLine((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaMWDCLine((Double_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaMWDCLine((Double_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCLine[n];
       } else {
         p = new((void*) gvp) THaMWDCLine[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new THaMWDCLine;
       } else {
         p = new((void*) gvp) THaMWDCLine;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCLine*) G__getstructoffset())->GetSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCLine*) G__getstructoffset())->GetIntercept());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCLine*) G__getstructoffset())->GetChiSquared());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCLine*) G__getstructoffset())->GetTimeOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaMWDCLine*) G__getstructoffset())->Y((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaMWDCLine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCLine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaMWDCLine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaMWDCLine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaMWDCLine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCLine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCLine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaMWDCLine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_393_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaMWDCLine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_393_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaMWDCLine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaMWDCLine(*(THaMWDCLine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaMWDCLine G__TTHaMWDCLine;
static int G__BigBiteDict_393_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaMWDCLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaMWDCLine*) (soff+(sizeof(THaMWDCLine)*i)))->~G__TTHaMWDCLine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaMWDCLine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaMWDCLine*) (soff))->~G__TTHaMWDCLine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_393_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaMWDCLine* dest = (THaMWDCLine*) G__getstructoffset();
   *dest = *(THaMWDCLine*) libp->para[0].ref;
   const THaMWDCLine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaVDCTableTTDConv */
static int G__BigBiteDict_394_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCTableTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCTableTTDConv[n];
     } else {
       p = new((void*) gvp) THaVDCTableTTDConv[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCTableTTDConv;
     } else {
       p = new((void*) gvp) THaVDCTableTTDConv;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCTableTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaVDCTableTTDConv((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) THaVDCTableTTDConv((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((THaVDCTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((THaVDCTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaVDCTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDCTableTTDConv*) G__getstructoffset())->LoadTable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDCTableTTDConv*) G__getstructoffset())->GetDriftVelocity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaVDCTableTTDConv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCTableTTDConv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaVDCTableTTDConv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaVDCTableTTDConv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDCTableTTDConv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCTableTTDConv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCTableTTDConv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCTableTTDConv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_394_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCTableTTDConv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaVDCTableTTDConv G__TTHaVDCTableTTDConv;
static int G__BigBiteDict_394_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaVDCTableTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaVDCTableTTDConv*) (soff+(sizeof(THaVDCTableTTDConv)*i)))->~G__TTHaVDCTableTTDConv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaVDCTableTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaVDCTableTTDConv*) (soff))->~G__TTHaVDCTableTTDConv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaVDC2DTableTTDConv */
static int G__BigBiteDict_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDC2DTableTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDC2DTableTTDConv[n];
     } else {
       p = new((void*) gvp) THaVDC2DTableTTDConv[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDC2DTableTTDConv;
     } else {
       p = new((void*) gvp) THaVDC2DTableTTDConv;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDC2DTableTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaVDC2DTableTTDConv((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) THaVDC2DTableTTDConv((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((THaVDC2DTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((THaVDC2DTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaVDC2DTableTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDC2DTableTTDConv*) G__getstructoffset())->ConvertDistToTime((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDC2DTableTTDConv*) G__getstructoffset())->LoadTable((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDC2DTableTTDConv*) G__getstructoffset())->PrintTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDC2DTableTTDConv*) G__getstructoffset())->GetDriftVelocity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaVDC2DTableTTDConv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDC2DTableTTDConv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaVDC2DTableTTDConv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaVDC2DTableTTDConv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDC2DTableTTDConv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDC2DTableTTDConv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDC2DTableTTDConv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDC2DTableTTDConv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_395_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDC2DTableTTDConv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaVDC2DTableTTDConv G__TTHaVDC2DTableTTDConv;
static int G__BigBiteDict_395_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaVDC2DTableTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaVDC2DTableTTDConv*) (soff+(sizeof(THaVDC2DTableTTDConv)*i)))->~G__TTHaVDC2DTableTTDConv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaVDC2DTableTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaVDC2DTableTTDConv*) (soff))->~G__TTHaVDC2DTableTTDConv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaVDCFuncTTDConv */
static int G__BigBiteDict_396_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCFuncTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCFuncTTDConv[n];
     } else {
       p = new((void*) gvp) THaVDCFuncTTDConv[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCFuncTTDConv;
     } else {
       p = new((void*) gvp) THaVDCFuncTTDConv;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCFuncTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaVDCFuncTTDConv(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) THaVDCFuncTTDConv(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((THaVDCFuncTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((THaVDCFuncTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaVDCFuncTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDCFuncTTDConv*) G__getstructoffset())->ConvertDistToTime((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDCFuncTTDConv*) G__getstructoffset())->GetDriftVelocity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaVDCFuncTTDConv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCFuncTTDConv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaVDCFuncTTDConv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaVDCFuncTTDConv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDCFuncTTDConv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCFuncTTDConv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCFuncTTDConv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCFuncTTDConv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_396_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCFuncTTDConv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaVDCFuncTTDConv G__TTHaVDCFuncTTDConv;
static int G__BigBiteDict_396_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaVDCFuncTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaVDCFuncTTDConv*) (soff+(sizeof(THaVDCFuncTTDConv)*i)))->~G__TTHaVDCFuncTTDConv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaVDCFuncTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaVDCFuncTTDConv*) (soff))->~G__TTHaVDCFuncTTDConv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaVDCLinearTTDConv */
static int G__BigBiteDict_397_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCLinearTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCLinearTTDConv[n];
     } else {
       p = new((void*) gvp) THaVDCLinearTTDConv[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaVDCLinearTTDConv;
     } else {
       p = new((void*) gvp) THaVDCLinearTTDConv;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaVDCLinearTTDConv* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaVDCLinearTTDConv((Double_t) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) THaVDCLinearTTDConv((Double_t) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((THaVDCLinearTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((THaVDCLinearTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((THaVDCLinearTTDConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDCLinearTTDConv*) G__getstructoffset())->ConvertDistToTime((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((THaVDCLinearTTDConv*) G__getstructoffset())->GetDriftVelocity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaVDCLinearTTDConv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCLinearTTDConv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaVDCLinearTTDConv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaVDCLinearTTDConv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaVDCLinearTTDConv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCLinearTTDConv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCLinearTTDConv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaVDCLinearTTDConv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_397_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaVDCLinearTTDConv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaVDCLinearTTDConv G__TTHaVDCLinearTTDConv;
static int G__BigBiteDict_397_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaVDCLinearTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaVDCLinearTTDConv*) (soff+(sizeof(THaVDCLinearTTDConv)*i)))->~G__TTHaVDCLinearTTDConv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaVDCLinearTTDConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaVDCLinearTTDConv*) (soff))->~G__TTHaVDCLinearTTDConv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBBShower */
static int G__BigBiteDict_398_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaBBShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShower((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaBBShower((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShower((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaBBShower((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShower*) G__getstructoffset())->GetNclust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShower*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShower*) G__getstructoffset())->GetE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShower*) G__getstructoffset())->GetX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShower*) G__getstructoffset())->GetY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBBShower*) G__getstructoffset())->GetNBlocks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((THaBBShower*) G__getstructoffset())->GetBlockX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((THaBBShower*) G__getstructoffset())->GetBlockY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((THaBBShower*) G__getstructoffset())->GetBlockdX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((THaBBShower*) G__getstructoffset())->GetBlockdY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((THaBBShower*) G__getstructoffset())->GetBlockdZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShower*) G__getstructoffset())->GetBlockA_c((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBBShower*) G__getstructoffset())->GetNRows());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBBShower*) G__getstructoffset())->GetNCols());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBBShower*) G__getstructoffset())->BlockColRowToNumber((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaBBShower*) G__getstructoffset())->GetClust((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShower*) G__getstructoffset())->AddCluster((THaBBShowerCluster*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShower*) G__getstructoffset())->RemoveCluster((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShower*) G__getstructoffset())->AddCluster(*(THaBBShowerCluster*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShower*) G__getstructoffset())->LoadMCHitAt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBBShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBBShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBBShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_398_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBBShower G__TTHaBBShower;
static int G__BigBiteDict_398_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBBShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBBShower*) (soff+(sizeof(THaBBShower)*i)))->~G__TTHaBBShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBBShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBBShower*) (soff))->~G__TTHaBBShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBBTotalShower */
static int G__BigBiteDict_399_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBTotalShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaBBTotalShower((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) THaBBTotalShower((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBTotalShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (THaApparatus*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (THaApparatus*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaBBTotalShower(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBTotalShower*) G__getstructoffset())->GetE((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBTotalShower*) G__getstructoffset())->GetY((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBTotalShower*) G__getstructoffset())->GetX((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBTotalShower*) G__getstructoffset())->GetID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaBBTotalShower*) G__getstructoffset())->GetShower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaBBTotalShower*) G__getstructoffset())->GetPreShower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBTotalShower*) G__getstructoffset())->LoadMCHitAt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBBTotalShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBTotalShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBBTotalShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBBTotalShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBTotalShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBTotalShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBTotalShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBTotalShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_399_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBTotalShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBBTotalShower G__TTHaBBTotalShower;
static int G__BigBiteDict_399_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBBTotalShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBBTotalShower*) (soff+(sizeof(THaBBTotalShower)*i)))->~G__TTHaBBTotalShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBBTotalShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBBTotalShower*) (soff))->~G__TTHaBBTotalShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaTimingPlane */
static int G__BigBiteDict_400_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaTimingPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTimingPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaTimingPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaTimingPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaTimingPlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTimingPlane*) G__getstructoffset())->GetEPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaTimingPlane*) G__getstructoffset())->GetdEPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaTimingPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTimingPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaTimingPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaTimingPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaTimingPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTimingPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTimingPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaTimingPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_400_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaTimingPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaTimingPlane G__TTHaTimingPlane;
static int G__BigBiteDict_400_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaTimingPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaTimingPlane*) (soff+(sizeof(THaTimingPlane)*i)))->~G__TTHaTimingPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaTimingPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaTimingPlane*) (soff))->~G__TTHaTimingPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaScintPlaneDet */
static int G__BigBiteDict_402_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPlaneDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlaneDet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaScintPlaneDet(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlaneDet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaScintPlaneDet((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaScintPlaneDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlaneDet[n];
     } else {
       p = new((void*) gvp) THaScintPlaneDet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaScintPlaneDet;
     } else {
       p = new((void*) gvp) THaScintPlaneDet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((THaScintPlaneDet*) G__getstructoffset())->ReadNumberSignStartComment((FILE*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlaneDet*) G__getstructoffset())->BuildAllBars(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlaneDet*) G__getstructoffset())->BuildCompleteBars(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNBars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNLtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNRtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNLaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNRaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNPartHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRefHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRefHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetLtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetLtHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRtHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRtHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetLaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetLaHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRaHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRaHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBarHitT((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBarHitT((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBarHitA((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetBarHitA((const char) G__int(libp->para[0]), (THaScintBar*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetNRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRefCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetRefCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaScintPlaneDet*) G__getstructoffset())->AreRefChOkay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetPartHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const THaScintPlaneDet*) G__getstructoffset())->GetPartHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THaScintPlaneDet*) G__getstructoffset())->GetMatchRatioTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaScintPlaneDet*) G__getstructoffset())->FineMatchingHits(*(TClonesArray*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaScintPlaneDet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlaneDet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaScintPlaneDet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaScintPlaneDet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaScintPlaneDet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlaneDet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPlaneDet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaScintPlaneDet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_402_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaScintPlaneDet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaScintPlaneDet G__TTHaScintPlaneDet;
static int G__BigBiteDict_402_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaScintPlaneDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaScintPlaneDet*) (soff+(sizeof(THaScintPlaneDet)*i)))->~G__TTHaScintPlaneDet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaScintPlaneDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaScintPlaneDet*) (soff))->~G__TTHaScintPlaneDet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBBShowerBlock */
static int G__BigBiteDict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerBlock* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShowerBlock[n];
     } else {
       p = new((void*) gvp) THaBBShowerBlock[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShowerBlock;
     } else {
       p = new((void*) gvp) THaBBShowerBlock;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerBlock* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaBBShowerBlock(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) THaBBShowerBlock(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerBlock*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerBlock*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerBlock*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerBlock*) G__getstructoffset())->GetPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerBlock*) G__getstructoffset())->GetGain());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShowerBlock*) G__getstructoffset())->GetRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShowerBlock*) G__getstructoffset())->GetCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShowerBlock*) G__getstructoffset())->GetStat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetPed((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetGain((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetRow((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetCol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->SetStat((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaBBShowerBlock*) G__getstructoffset())->operator=((THaBBShowerBlock*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBBShowerBlock::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerBlock::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBBShowerBlock::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBBShowerBlock::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerBlock*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerBlock::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShowerBlock::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerBlock::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_404_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShowerBlock::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_404_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaBBShowerBlock* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaBBShowerBlock(*(THaBBShowerBlock*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBBShowerBlock G__TTHaBBShowerBlock;
static int G__BigBiteDict_404_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBBShowerBlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBBShowerBlock*) (soff+(sizeof(THaBBShowerBlock)*i)))->~G__TTHaBBShowerBlock();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBBShowerBlock*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBBShowerBlock*) (soff))->~G__TTHaBBShowerBlock();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_404_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerBlock* dest = (THaBBShowerBlock*) G__getstructoffset();
   *dest = *(THaBBShowerBlock*) libp->para[0].ref;
   const THaBBShowerBlock& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBBShowerCluster */
static int G__BigBiteDict_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShowerCluster[n];
     } else {
       p = new((void*) gvp) THaBBShowerCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBBShowerCluster;
     } else {
       p = new((void*) gvp) THaBBShowerCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaBBShowerCluster((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) THaBBShowerCluster((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaBBShowerCluster((Int_t) G__int(libp->para[0]), (THaBBShowerBlock*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaBBShowerCluster((Int_t) G__int(libp->para[0]), (THaBBShowerBlock*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerCluster*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerCluster*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const THaBBShowerCluster*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShowerCluster*) G__getstructoffset())->GetMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaBBShowerCluster*) G__getstructoffset())->GetNMaxBlocks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->SetX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->SetY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->SetE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->SetMult((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((THaBBShowerCluster*) G__getstructoffset())->GetBlocks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaBBShowerCluster*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->AddBlock((THaBBShowerBlock*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->DeleteArrays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBBShowerCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBBShowerCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBBShowerCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBBShowerCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShowerCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBBShowerCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_405_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBBShowerCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_405_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaBBShowerCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaBBShowerCluster(*(THaBBShowerCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBBShowerCluster G__TTHaBBShowerCluster;
static int G__BigBiteDict_405_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBBShowerCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBBShowerCluster*) (soff+(sizeof(THaBBShowerCluster)*i)))->~G__TTHaBBShowerCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBBShowerCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBBShowerCluster*) (soff))->~G__TTHaBBShowerCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_405_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBBShowerCluster* dest = (THaBBShowerCluster*) G__getstructoffset();
   *dest = *(THaBBShowerCluster*) libp->para[0].ref;
   const THaBBShowerCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::WirePlane */
static int G__BigBiteDict_507_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::WirePlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::WirePlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TreeSearch::WirePlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::WirePlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TreeSearch::WirePlane((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::WirePlane((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TreeSearch::WirePlane((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::WirePlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::WirePlane[n];
     } else {
       p = new((void*) gvp) TreeSearch::WirePlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::WirePlane;
     } else {
       p = new((void*) gvp) TreeSearch::WirePlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::WirePlane*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::WirePlane*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeSearch::WirePlane*) G__getstructoffset())->AddFitCoord(*(TreeSearch::FitCoord*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->Contains((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->Contains(*(TVector2*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::WirePlane*) G__getstructoffset())->EnableCalibration((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::WirePlane*) G__getstructoffset())->EnableCalibration();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetProjection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetPartner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::WirePlane*) G__getstructoffset())->SetPartner((TreeSearch::WirePlane*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetMWDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetMaxSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetWireStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetWireSpacing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetMaxLRdist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetTTDConv());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetCoords());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetNcoords());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->GetPlaneNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->IsCalibrating());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::WirePlane*) G__getstructoffset())->IsRequired());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::WirePlane*) G__getstructoffset())->SetPlaneNum((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::WirePlane*) G__getstructoffset())->SetProjection((TreeSearch::Projection*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::WirePlane*) G__getstructoffset())->SetRequired((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::WirePlane*) G__getstructoffset())->SetRequired();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::WirePlane*) G__getstructoffset())->CheckCrosstalk();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::WirePlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::WirePlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::WirePlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::WirePlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::WirePlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::WirePlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::WirePlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::WirePlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_507_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::WirePlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::WirePlane G__TTreeSearchcLcLWirePlane;
static int G__BigBiteDict_507_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::WirePlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::WirePlane*) (soff+(sizeof(TreeSearch::WirePlane)*i)))->~G__TTreeSearchcLcLWirePlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::WirePlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::WirePlane*) (soff))->~G__TTreeSearchcLcLWirePlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Projection */
static int G__BigBiteDict_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Projection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Projection(
(TreeSearch::EProjType) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (THaDetectorBase*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) TreeSearch::Projection(
(TreeSearch::EProjType) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (THaDetectorBase*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Projection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Projection[n];
     } else {
       p = new((void*) gvp) TreeSearch::Projection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Projection;
     } else {
       p = new((void*) gvp) TreeSearch::Projection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TreeSearch::Projection*) G__getstructoffset())->AddPlane((TreeSearch::WirePlane*) G__int(libp->para[0]), (TreeSearch::WirePlane*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TreeSearch::Projection*) G__getstructoffset())->AddPlane((TreeSearch::WirePlane*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::Projection*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::Projection*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Projection*) G__getstructoffset())->Decode(*(THaEvData*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Projection*) G__getstructoffset())->InitLevel2(*(TDatime*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Projection*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Projection*) G__getstructoffset())->FillHitpattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Projection*) G__getstructoffset())->Track());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Projection*) G__getstructoffset())->MakeRoads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((const TreeSearch::Projection*) G__getstructoffset())->GetAxis();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetBinMaxDistB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetBinMaxDistF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::pdbl_t& obj = ((const TreeSearch::Projection*) G__getstructoffset())->GetChisqLimits((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetConfLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetCosAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetHitMaxDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetHitpattern());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetMaxSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetMinFitPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetNgoodRoads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetNlevels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetNpatterns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetNplanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetNroads());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetPlaneCombos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetPlane((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetPlaneZ((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetRoad((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetSinAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::Projection*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Projection*) G__getstructoffset())->GetZsize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Projection*) G__getstructoffset())->SetMaxSlope((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Projection*) G__getstructoffset())->SetPatternTree((TreeSearch::PatternTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Projection*) G__getstructoffset())->SetWidth((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::WirePlane*>& obj = ((TreeSearch::Projection*) G__getstructoffset())->GetListOfPlanes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Projection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Projection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Projection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Projection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Projection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Projection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Projection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Projection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_508_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Projection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Projection G__TTreeSearchcLcLProjection;
static int G__BigBiteDict_508_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Projection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Projection*) (soff+(sizeof(TreeSearch::Projection)*i)))->~G__TTreeSearchcLcLProjection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Projection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Projection*) (soff))->~G__TTreeSearchcLcLProjection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Road */
static int G__BigBiteDict_509_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Road((TreeSearch::Projection*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TreeSearch::Road((TreeSearch::Projection*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Road(*(TreeSearch::Node_t*) libp->para[0].ref, (TreeSearch::Projection*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TreeSearch::Road(*(TreeSearch::Node_t*) libp->para[0].ref, (TreeSearch::Projection*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road[n];
     } else {
       p = new((void*) gvp) TreeSearch::Road[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road;
     } else {
       p = new((void*) gvp) TreeSearch::Road;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Road(*(TreeSearch::Road*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TreeSearch::Road(*(TreeSearch::Road*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::Road& obj = ((TreeSearch::Road*) G__getstructoffset())->operator=(*(TreeSearch::Road*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TreeSearch::Road*) G__getstructoffset())->Add(*(TreeSearch::Node_t*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->ClearGrow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TreeSearch::Road*) G__getstructoffset())->Fit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::Hset_t& obj = ((const TreeSearch::Road*) G__getstructoffset())->GetHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::Road::Pvec_t& obj = ((const TreeSearch::Road*) G__getstructoffset())->GetPoints();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road*) G__getstructoffset())->GetPos((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road*) G__getstructoffset())->GetPosErrsq((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Road*) G__getstructoffset())->GetProjection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road*) G__getstructoffset())->GetSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Road*) G__getstructoffset())->GetTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::Road*) G__getstructoffset())->HasGrown());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TreeSearch::Road*) G__getstructoffset())->Include((TreeSearch::Road*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2* pobj;
         const TVector2 xobj = ((const TreeSearch::Road*) G__getstructoffset())->Intersect((TreeSearch::Road*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::Road*) G__getstructoffset())->IsGood());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::Road*) G__getstructoffset())->IsInFrontRange(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::Road*) G__getstructoffset())->IsVoid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->SetGrow();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->SetTrack((THaTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->Void();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Road::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Road::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Road::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_509_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Road G__TTreeSearchcLcLRoad;
static int G__BigBiteDict_509_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Road*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Road*) (soff+(sizeof(TreeSearch::Road)*i)))->~G__TTreeSearchcLcLRoad();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Road*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Road*) (soff))->~G__TTreeSearchcLcLRoad();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > */
static int G__BigBiteDict_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reference obj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->at((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_reference obj = ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->at((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator* pobj;
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator xobj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->begin();
         pobj = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator* pobj;
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator xobj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->end();
         pobj = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator* pobj;
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator xobj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator* pobj;
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator xobj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->rend();
         pobj = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->resize((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->resize((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]), (TreeSearch::WirePlane*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reference obj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->operator[]((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_reference obj = ((const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->operator[]((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >[n];
     } else {
       p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >;
     } else {
       p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TreeSearch::WirePlane**) libp->para[1].ref : *(TreeSearch::WirePlane**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TreeSearch::WirePlane**) libp->para[1].ref : *(TreeSearch::WirePlane**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >(*(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >(*(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[0])), *((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[0])), *((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >& obj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->operator=(*(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->reserve((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TreeSearch::WirePlane*& obj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TreeSearch::WirePlane*& obj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TreeSearch::WirePlane**) libp->para[0].ref : *(TreeSearch::WirePlane**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->swap(*(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator* pobj;
         vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator xobj = ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TreeSearch::WirePlane**) libp->para[1].ref : *(TreeSearch::WirePlane**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[0])), *((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[0])), (vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TreeSearch::WirePlane**) libp->para[2].ref : *(TreeSearch::WirePlane**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->erase(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->erase(*((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[0])), *((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_522_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > G__TvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR;
static int G__BigBiteDict_522_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) (soff+(sizeof(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >)*i)))->~G__TvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*) (soff))->~G__TvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > */
static int G__BigBiteDict_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reference obj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->at((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_reference obj = ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->at((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator* pobj;
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator xobj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->begin();
         pobj = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator* pobj;
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator xobj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->end();
         pobj = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator* pobj;
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator xobj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator* pobj;
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator xobj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->rend();
         pobj = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->resize((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->resize((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]), (TreeSearch::Projection*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reference obj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->operator[]((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_reference obj = ((const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->operator[]((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >[n];
     } else {
       p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >;
     } else {
       p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TreeSearch::Projection**) libp->para[1].ref : *(TreeSearch::Projection**) (void*) (&G__Mlong(libp->para[1])));
     } else {
       p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]), libp->para[1].ref ? *(TreeSearch::Projection**) libp->para[1].ref : *(TreeSearch::Projection**) (void*) (&G__Mlong(libp->para[1])));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >(*(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >(*(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[0])), *((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[0])), *((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >& obj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->operator=(*(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->reserve((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TreeSearch::Projection*& obj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TreeSearch::Projection*& obj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->push_back(libp->para[0].ref ? *(TreeSearch::Projection**) libp->para[0].ref : *(TreeSearch::Projection**) (void*) (&G__Mlong(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->swap(*(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator* pobj;
         vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator xobj = ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[0])), libp->para[1].ref ? *(TreeSearch::Projection**) libp->para[1].ref : *(TreeSearch::Projection**) (void*) (&G__Mlong(libp->para[1])));
         pobj = new vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[0])), *((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->insert(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[0])), (vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type) G__int(libp->para[1])
, libp->para[2].ref ? *(TreeSearch::Projection**) libp->para[2].ref : *(TreeSearch::Projection**) (void*) (&G__Mlong(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->erase(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->erase(*((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[0])), *((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_526_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > G__TvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR;
static int G__BigBiteDict_526_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) (soff+(sizeof(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >)*i)))->~G__TvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*) (soff))->~G__TvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::TimeToDistConv */
static int G__BigBiteDict_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::TimeToDistConv*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::TimeToDistConv*) G__getstructoffset())->GetNparam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::TimeToDistConv*) G__getstructoffset())->GetParameter((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::TimeToDistConv*) G__getstructoffset())->SetParameters(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::TimeToDistConv::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TimeToDistConv::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::TimeToDistConv::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::TimeToDistConv::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::TimeToDistConv*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TimeToDistConv*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TimeToDistConv*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TimeToDistConv*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TimeToDistConv::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TimeToDistConv::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TimeToDistConv::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_541_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TimeToDistConv::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::TimeToDistConv G__TTreeSearchcLcLTimeToDistConv;
static int G__BigBiteDict_541_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::TimeToDistConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::TimeToDistConv*) (soff+(sizeof(TreeSearch::TimeToDistConv)*i)))->~G__TTreeSearchcLcLTimeToDistConv();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::TimeToDistConv*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::TimeToDistConv*) (soff))->~G__TTreeSearchcLcLTimeToDistConv();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Hit */
static int G__BigBiteDict_542_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Hit[n];
     } else {
       p = new((void*) gvp) TreeSearch::Hit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Hit;
     } else {
       p = new((void*) gvp) TreeSearch::Hit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Hit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TreeSearch::WirePlane*) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) TreeSearch::Hit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TreeSearch::WirePlane*) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::Hit*) G__getstructoffset())->Compare((TreeSearch::Hit*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TreeSearch::Hit*) G__getstructoffset())->ConvertTimeToDist((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::Hit*) G__getstructoffset())->GetWireNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetWirePos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetRawTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetDriftTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetDriftDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetPosL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetPosR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hit*) G__getstructoffset())->GetResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Hit*) G__getstructoffset())->GetWirePlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hit*) G__getstructoffset())->GetPlaneNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_542_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_542_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::Hit(*(TreeSearch::Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Hit G__TTreeSearchcLcLHit;
static int G__BigBiteDict_542_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Hit*) (soff+(sizeof(TreeSearch::Hit)*i)))->~G__TTreeSearchcLcLHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Hit*) (soff))->~G__TTreeSearchcLcLHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_542_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hit* dest = (TreeSearch::Hit*) G__getstructoffset();
   *dest = *(TreeSearch::Hit*) libp->para[0].ref;
   const TreeSearch::Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::FitCoord */
static int G__BigBiteDict_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::FitCoord* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::FitCoord(
(TreeSearch::Hit*) G__int(libp->para[0]), (TreeSearch::Road*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) TreeSearch::FitCoord(
(TreeSearch::Hit*) G__int(libp->para[0]), (TreeSearch::Road*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::FitCoord* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::FitCoord[n];
     } else {
       p = new((void*) gvp) TreeSearch::FitCoord[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::FitCoord;
     } else {
       p = new((void*) gvp) TreeSearch::FitCoord;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetRoad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetDriftTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetDriftDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetTrackPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetTrackSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetTrackDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetResidual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->Get3DTrkPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->Get3DTrkSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->Get3DTrkDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::FitCoord*) G__getstructoffset())->Get3DTrkResid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TreeSearch::FitCoord*) G__getstructoffset())->GetWireNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::FitCoord::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::FitCoord::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::FitCoord::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::FitCoord::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::FitCoord*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::FitCoord::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::FitCoord::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::FitCoord::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_543_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::FitCoord::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_543_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::FitCoord* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::FitCoord(*(TreeSearch::FitCoord*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::FitCoord G__TTreeSearchcLcLFitCoord;
static int G__BigBiteDict_543_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::FitCoord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::FitCoord*) (soff+(sizeof(TreeSearch::FitCoord)*i)))->~G__TTreeSearchcLcLFitCoord();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::FitCoord*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::FitCoord*) (soff))->~G__TTreeSearchcLcLFitCoord();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_543_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::FitCoord* dest = (TreeSearch::FitCoord*) G__getstructoffset();
   *dest = *(TreeSearch::FitCoord*) libp->para[0].ref;
   const TreeSearch::FitCoord& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::LinearTTD */
static int G__BigBiteDict_549_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::LinearTTD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::LinearTTD[n];
     } else {
       p = new((void*) gvp) TreeSearch::LinearTTD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::LinearTTD;
     } else {
       p = new((void*) gvp) TreeSearch::LinearTTD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::LinearTTD*) G__getstructoffset())->GetDriftVel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::LinearTTD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::LinearTTD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::LinearTTD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::LinearTTD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::LinearTTD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::LinearTTD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::LinearTTD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::LinearTTD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_549_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::LinearTTD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_549_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::LinearTTD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::LinearTTD(*(TreeSearch::LinearTTD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::LinearTTD G__TTreeSearchcLcLLinearTTD;
static int G__BigBiteDict_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::LinearTTD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::LinearTTD*) (soff+(sizeof(TreeSearch::LinearTTD)*i)))->~G__TTreeSearchcLcLLinearTTD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::LinearTTD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::LinearTTD*) (soff))->~G__TTreeSearchcLcLLinearTTD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::TanhFitTTD */
static int G__BigBiteDict_550_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::TanhFitTTD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::TanhFitTTD[n];
     } else {
       p = new((void*) gvp) TreeSearch::TanhFitTTD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::TanhFitTTD;
     } else {
       p = new((void*) gvp) TreeSearch::TanhFitTTD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::TanhFitTTD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TanhFitTTD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::TanhFitTTD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::TanhFitTTD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TanhFitTTD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TanhFitTTD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TanhFitTTD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TanhFitTTD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_550_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TanhFitTTD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_550_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::TanhFitTTD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::TanhFitTTD(*(TreeSearch::TanhFitTTD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::TanhFitTTD G__TTreeSearchcLcLTanhFitTTD;
static int G__BigBiteDict_550_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::TanhFitTTD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::TanhFitTTD*) (soff+(sizeof(TreeSearch::TanhFitTTD)*i)))->~G__TTreeSearchcLcLTanhFitTTD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::TanhFitTTD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::TanhFitTTD*) (soff))->~G__TTreeSearchcLcLTanhFitTTD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::MCHit */
static int G__BigBiteDict_555_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::MCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::MCHit[n];
     } else {
       p = new((void*) gvp) TreeSearch::MCHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::MCHit;
     } else {
       p = new((void*) gvp) TreeSearch::MCHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::MCHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::MCHit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TreeSearch::WirePlane*) G__int(libp->para[5])
, (TreeSearch::MCTrack*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) TreeSearch::MCHit(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (TreeSearch::WirePlane*) G__int(libp->para[5])
, (TreeSearch::MCTrack*) G__int(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::MCHit*) G__getstructoffset())->GetMCTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::MCHit*) G__getstructoffset())->GetMCPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::MCHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MCHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::MCHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::MCHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::MCHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MCHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::MCHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::MCHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_555_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::MCHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_555_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::MCHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::MCHit(*(TreeSearch::MCHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::MCHit G__TTreeSearchcLcLMCHit;
static int G__BigBiteDict_555_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::MCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::MCHit*) (soff+(sizeof(TreeSearch::MCHit)*i)))->~G__TTreeSearchcLcLMCHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::MCHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::MCHit*) (soff))->~G__TTreeSearchcLcLMCHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_555_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::MCHit* dest = (TreeSearch::MCHit*) G__getstructoffset();
   *dest = *(TreeSearch::MCHit*) libp->para[0].ref;
   const TreeSearch::MCHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<TObject*,TObject*> */
static int G__BigBiteDict_556_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TObject*,TObject*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TObject*,TObject*>[n];
     } else {
       p = new((void*) gvp) pair<TObject*,TObject*>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TObject*,TObject*>;
     } else {
       p = new((void*) gvp) pair<TObject*,TObject*>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_556_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TObject*,TObject*>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<TObject*,TObject*>(libp->para[0].ref ? *(TObject**) libp->para[0].ref : *(TObject**) (void*) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(TObject**) libp->para[1].ref : *(TObject**) (void*) (&G__Mlong(libp->para[1])));
   } else {
     p = new((void*) gvp) pair<TObject*,TObject*>(libp->para[0].ref ? *(TObject**) libp->para[0].ref : *(TObject**) (void*) (&G__Mlong(libp->para[0])), libp->para[1].ref ? *(TObject**) libp->para[1].ref : *(TObject**) (void*) (&G__Mlong(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_556_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<TObject*,TObject*>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<TObject*,TObject*>(*(pair<TObject*,TObject*>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<TObject*,TObject*> G__TpairlETObjectmUcOTObjectmUgR;
static int G__BigBiteDict_556_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<TObject*,TObject*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<TObject*,TObject*>*) (soff+(sizeof(pair<TObject*,TObject*>)*i)))->~G__TpairlETObjectmUcOTObjectmUgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<TObject*,TObject*>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<TObject*,TObject*>*) (soff))->~G__TpairlETObjectmUcOTObjectmUgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::HitPairIter */
static int G__BigBiteDict_557_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::HitPairIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::HitPairIter(
(TSeqCollection*) G__int(libp->para[0]), (TSeqCollection*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TreeSearch::HitPairIter(
(TSeqCollection*) G__int(libp->para[0]), (TSeqCollection*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::HitPairIter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::HitPairIter(*(TreeSearch::HitPairIter*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TreeSearch::HitPairIter(*(TreeSearch::HitPairIter*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::HitPairIter& obj = ((TreeSearch::HitPairIter*) G__getstructoffset())->operator=(*(TreeSearch::HitPairIter*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->GetCollection((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->GetCollection());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitPairIter*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::HitPairIter& obj = ((TreeSearch::HitPairIter*) G__getstructoffset())->Next();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::HitPairIter& obj = ((TreeSearch::HitPairIter*) G__getstructoffset())->operator++();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TreeSearch::HitPairIter* pobj;
         TreeSearch::HitPairIter xobj = ((TreeSearch::HitPairIter*) G__getstructoffset())->operator++((int) G__int(libp->para[0]));
         pobj = new TreeSearch::HitPairIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::ObjPair_t* pobj;
         const TreeSearch::ObjPair_t xobj = ((const TreeSearch::HitPairIter*) G__getstructoffset())->operator()();
         pobj = new TreeSearch::ObjPair_t(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::ObjPair_t& obj = ((TreeSearch::HitPairIter*) G__getstructoffset())->operator*();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->operator==(*(TreeSearch::HitPairIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->operator!=(*(TreeSearch::HitPairIter*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->operator bool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->operator!());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::HitPairIter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitPairIter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::HitPairIter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::HitPairIter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::HitPairIter*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitPairIter*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitPairIter*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitPairIter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitPairIter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::HitPairIter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitPairIter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_557_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::HitPairIter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::HitPairIter G__TTreeSearchcLcLHitPairIter;
static int G__BigBiteDict_557_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::HitPairIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::HitPairIter*) (soff+(sizeof(TreeSearch::HitPairIter)*i)))->~G__TTreeSearchcLcLHitPairIter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::HitPairIter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::HitPairIter*) (soff))->~G__TTreeSearchcLcLHitPairIter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::HitSet */
static int G__BigBiteDict_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::HitSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::HitSet[n];
     } else {
       p = new((void*) gvp) TreeSearch::HitSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::HitSet;
     } else {
       p = new((void*) gvp) TreeSearch::HitSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) TreeSearch::HitSet::CheckMatch(*(TreeSearch::Hset_t*) libp->para[0].ref, (TBits*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::HitSet*) G__getstructoffset())->CheckMatch((TBits*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) TreeSearch::HitSet::GetMatchValue(*(TreeSearch::Hset_t*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((const TreeSearch::HitSet*) G__getstructoffset())->IsSimilarTo(*(TreeSearch::HitSet*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((const TreeSearch::HitSet*) G__getstructoffset())->IsSimilarTo(*(TreeSearch::HitSet*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::HitSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::HitSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::HitSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::HitSet*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitSet*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitSet*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::HitSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::HitSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::HitSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_563_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::HitSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_563_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::HitSet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::HitSet(*(TreeSearch::HitSet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::HitSet G__TTreeSearchcLcLHitSet;
static int G__BigBiteDict_563_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::HitSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::HitSet*) (soff+(sizeof(TreeSearch::HitSet)*i)))->~G__TTreeSearchcLcLHitSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::HitSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::HitSet*) (soff))->~G__TTreeSearchcLcLHitSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_563_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::HitSet* dest = (TreeSearch::HitSet*) G__getstructoffset();
   *dest = *(TreeSearch::HitSet*) libp->para[0].ref;
   const TreeSearch::HitSet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::NodeDescriptor */
static int G__BigBiteDict_569_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::NodeDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::NodeDescriptor(
(TreeSearch::Link*) G__int(libp->para[0]), (TreeSearch::Pattern*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (UChar_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) TreeSearch::NodeDescriptor(
(TreeSearch::Link*) G__int(libp->para[0]), (TreeSearch::Pattern*) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (UChar_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::NodeDescriptor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::NodeDescriptor[n];
     } else {
       p = new((void*) gvp) TreeSearch::NodeDescriptor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::NodeDescriptor;
     } else {
       p = new((void*) gvp) TreeSearch::NodeDescriptor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->Start());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->End());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator[]((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator<(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator<=(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator>(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator>=(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator==(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_569_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::NodeDescriptor*) G__getstructoffset())->operator!=(*(TreeSearch::NodeDescriptor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_569_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::NodeDescriptor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::NodeDescriptor(*(TreeSearch::NodeDescriptor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::NodeDescriptor G__TTreeSearchcLcLNodeDescriptor;
static int G__BigBiteDict_569_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::NodeDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::NodeDescriptor*) (soff+(sizeof(TreeSearch::NodeDescriptor)*i)))->~G__TTreeSearchcLcLNodeDescriptor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::NodeDescriptor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::NodeDescriptor*) (soff))->~G__TTreeSearchcLcLNodeDescriptor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_569_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::NodeDescriptor* dest = (TreeSearch::NodeDescriptor*) G__getstructoffset();
   *dest = *(TreeSearch::NodeDescriptor*) libp->para[0].ref;
   const TreeSearch::NodeDescriptor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> */
static int G__BigBiteDict_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>[n];
     } else {
       p = new((void*) gvp) pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>;
     } else {
       p = new((void*) gvp) pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_570_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>(*(TreeSearch::NodeDescriptor*) libp->para[0].ref, *(TreeSearch::HitSet*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>(*(TreeSearch::NodeDescriptor*) libp->para[0].ref, *(TreeSearch::HitSet*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_570_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>(*(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> G__TpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR;
static int G__BigBiteDict_570_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*) (soff+(sizeof(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>)*i)))->~G__TpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*) (soff))->~G__TpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::TreeWalk */
static int G__BigBiteDict_770_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::TreeWalk* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::TreeWalk((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TreeSearch::TreeWalk((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TreeSearch::TreeWalk[n];
       } else {
         p = new((void*) gvp) TreeSearch::TreeWalk[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TreeSearch::TreeWalk;
       } else {
         p = new((void*) gvp) TreeSearch::TreeWalk;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TreeWalk*) G__getstructoffset())->SetNlevels((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->operator()((TreeSearch::Link*) G__int(libp->para[0]), *(TreeSearch::NodeVisitor*) libp->para[1].ref
, (TreeSearch::Pattern*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->operator()((TreeSearch::Link*) G__int(libp->para[0]), *(TreeSearch::NodeVisitor*) libp->para[1].ref
, (TreeSearch::Pattern*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->operator()((TreeSearch::Link*) G__int(libp->para[0]), *(TreeSearch::NodeVisitor*) libp->para[1].ref
, (TreeSearch::Pattern*) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->operator()((TreeSearch::Link*) G__int(libp->para[0]), *(TreeSearch::NodeVisitor*) libp->para[1].ref
, (TreeSearch::Pattern*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->operator()((TreeSearch::Link*) G__int(libp->para[0]), *(TreeSearch::NodeVisitor*) libp->para[1].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::TreeWalk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TreeWalk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::TreeWalk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::TreeWalk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::TreeWalk*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TreeWalk*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TreeWalk*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::TreeWalk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TreeWalk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TreeWalk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::TreeWalk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_770_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::TreeWalk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_770_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::TreeWalk* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::TreeWalk(*(TreeSearch::TreeWalk*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::TreeWalk G__TTreeSearchcLcLTreeWalk;
static int G__BigBiteDict_770_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::TreeWalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::TreeWalk*) (soff+(sizeof(TreeSearch::TreeWalk)*i)))->~G__TTreeSearchcLcLTreeWalk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::TreeWalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::TreeWalk*) (soff))->~G__TTreeSearchcLcLTreeWalk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_770_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::TreeWalk* dest = (TreeSearch::TreeWalk*) G__getstructoffset();
   *dest = *(TreeSearch::TreeWalk*) libp->para[0].ref;
   const TreeSearch::TreeWalk& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Bits */
static int G__BigBiteDict_783_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Bits* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Bits((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TreeSearch::Bits((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TreeSearch::Bits[n];
       } else {
         p = new((void*) gvp) TreeSearch::Bits[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TreeSearch::Bits;
       } else {
         p = new((void*) gvp) TreeSearch::Bits;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Bits* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Bits(*(TBits*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TreeSearch::Bits(*(TBits*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::Bits& obj = ((TreeSearch::Bits*) G__getstructoffset())->operator=(*(TBits*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Bits*) G__getstructoffset())->ResetBitRange((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Bits*) G__getstructoffset())->SetBitRange((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Bits*) G__getstructoffset())->FastClear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Bits::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Bits::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Bits::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Bits::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Bits*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Bits::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Bits::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Bits::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_783_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Bits::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_783_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::Bits* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::Bits(*(TreeSearch::Bits*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Bits G__TTreeSearchcLcLBits;
static int G__BigBiteDict_783_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Bits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Bits*) (soff+(sizeof(TreeSearch::Bits)*i)))->~G__TTreeSearchcLcLBits();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Bits*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Bits*) (soff))->~G__TTreeSearchcLcLBits();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_783_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Bits* dest = (TreeSearch::Bits*) G__getstructoffset();
   *dest = *(TreeSearch::Bits*) libp->para[0].ref;
   const TreeSearch::Bits& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::PatternTree */
static int G__BigBiteDict_784_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::PatternTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternTree(
*(TreeSearch::TreeParam_t*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TreeSearch::PatternTree(
*(TreeSearch::TreeParam_t*) libp->para[0].ref, (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternTree(*(TreeSearch::TreeParam_t*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TreeSearch::PatternTree(*(TreeSearch::TreeParam_t*) libp->para[0].ref, (UInt_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternTree(*(TreeSearch::TreeParam_t*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) TreeSearch::PatternTree(*(TreeSearch::TreeParam_t*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::PatternTree::Read((const char*) G__int(libp->para[0]), *(TreeSearch::TreeParam_t*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TreeSearch::PatternTree*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((TreeSearch::PatternTree*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::PatternTree*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::PatternTree*) G__getstructoffset())->Write((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::PatternTree*) G__getstructoffset())->IsOK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::PatternTree*) G__getstructoffset())->GetNlevels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::PatternTree*) G__getstructoffset())->GetNplanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::TreeParam_t& obj = ((const TreeSearch::PatternTree*) G__getstructoffset())->GetParameters();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeSearch::PatternTree*) G__getstructoffset())->GetRoot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::PatternTree*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::PatternTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::PatternTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::PatternTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::PatternTree*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternTree*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternTree*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::PatternTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_784_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::PatternTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::PatternTree G__TTreeSearchcLcLPatternTree;
static int G__BigBiteDict_784_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::PatternTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::PatternTree*) (soff+(sizeof(TreeSearch::PatternTree)*i)))->~G__TTreeSearchcLcLPatternTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::PatternTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::PatternTree*) (soff))->~G__TTreeSearchcLcLPatternTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Hitpattern */
static int G__BigBiteDict_785_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hitpattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Hitpattern(*(TreeSearch::PatternTree*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TreeSearch::Hitpattern(*(TreeSearch::PatternTree*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hitpattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Hitpattern(
(UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) TreeSearch::Hitpattern(
(UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Hitpattern* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Hitpattern(*(TreeSearch::Hitpattern*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TreeSearch::Hitpattern(*(TreeSearch::Hitpattern*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::Hitpattern& obj = ((TreeSearch::Hitpattern*) G__getstructoffset())->operator=(*(TreeSearch::Hitpattern*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<UInt_t,UInt_t>* pobj;
         const pair<UInt_t,UInt_t> xobj = ((const TreeSearch::Hitpattern*) G__getstructoffset())->ContainsPattern(*(TreeSearch::NodeDescriptor*) libp->para[0].ref);
         pobj = new pair<UInt_t,UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TreeSearch::Hit*>& obj = ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetHits((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetNbins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetNlevels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetNplanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetBinWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetBinScale());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->IsError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->SetPositionRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (TreeSearch::Hit*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->SetPosition((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (TreeSearch::Hit*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::Hitpattern*) G__getstructoffset())->ScanHits((TreeSearch::WirePlane*) G__int(libp->para[0]), (TreeSearch::WirePlane*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TreeSearch::Hitpattern*) G__getstructoffset())->Clear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TreeSearch::Hitpattern*) G__getstructoffset())->Clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const TreeSearch::Hitpattern*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TreeSearch::Hitpattern*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->SetOffset((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetBinsSet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetNhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->GetMaxhitBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Hitpattern::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hitpattern::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Hitpattern::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Hitpattern::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Hitpattern*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Hitpattern*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hitpattern::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Hitpattern::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Hitpattern::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_785_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Hitpattern::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Hitpattern G__TTreeSearchcLcLHitpattern;
static int G__BigBiteDict_785_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Hitpattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Hitpattern*) (soff+(sizeof(TreeSearch::Hitpattern)*i)))->~G__TTreeSearchcLcLHitpattern();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Hitpattern*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Hitpattern*) (soff))->~G__TTreeSearchcLcLHitpattern();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::TreeParam_t */
static int G__BigBiteDict_800_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::TreeParam_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::TreeParam_t(
(UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(vector<Double_t>*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) TreeSearch::TreeParam_t(
(UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), *(vector<Double_t>*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_800_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TreeSearch::TreeParam_t*) G__getstructoffset())->Normalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_800_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TreeSearch::TreeParam_t*) G__getstructoffset())->maxdepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_800_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::TreeParam_t*) G__getstructoffset())->width());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_800_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::TreeParam_t*) G__getstructoffset())->maxslope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_800_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const TreeSearch::TreeParam_t*) G__getstructoffset())->zpos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_800_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::TreeParam_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::TreeParam_t(*(TreeSearch::TreeParam_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::TreeParam_t G__TTreeSearchcLcLTreeParam_t;
static int G__BigBiteDict_800_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::TreeParam_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::TreeParam_t*) (soff+(sizeof(TreeSearch::TreeParam_t)*i)))->~G__TTreeSearchcLcLTreeParam_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::TreeParam_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::TreeParam_t*) (soff))->~G__TTreeSearchcLcLTreeParam_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_800_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::TreeParam_t* dest = (TreeSearch::TreeParam_t*) G__getstructoffset();
   *dest = *(TreeSearch::TreeParam_t*) libp->para[0].ref;
   const TreeSearch::TreeParam_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::PatternGenerator */
static int G__BigBiteDict_810_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::PatternGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternGenerator[n];
     } else {
       p = new((void*) gvp) TreeSearch::PatternGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternGenerator;
     } else {
       p = new((void*) gvp) TreeSearch::PatternGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeSearch::PatternGenerator*) G__getstructoffset())->Generate(*((TreeSearch::TreeParam_t*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TreeSearch::PatternGenerator*) G__getstructoffset())->Generate((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (const char*) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::PatternGenerator*) G__getstructoffset())->GetRoot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TreeSearch::PatternGenerator::Statistics_t& obj = ((const TreeSearch::PatternGenerator*) G__getstructoffset())->GetStatistics();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((const TreeSearch::PatternGenerator*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]), *(ostream*) libp->para[1].ref);
      G__setnull(result7);
      break;
   case 1:
      ((const TreeSearch::PatternGenerator*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const TreeSearch::PatternGenerator*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::PatternGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::PatternGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::PatternGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::PatternGenerator*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternGenerator*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternGenerator*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::PatternGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::PatternGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::PatternGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_810_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::PatternGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_810_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::PatternGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::PatternGenerator(*(TreeSearch::PatternGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::PatternGenerator G__TTreeSearchcLcLPatternGenerator;
static int G__BigBiteDict_810_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::PatternGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::PatternGenerator*) (soff+(sizeof(TreeSearch::PatternGenerator)*i)))->~G__TTreeSearchcLcLPatternGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::PatternGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::PatternGenerator*) (soff))->~G__TTreeSearchcLcLPatternGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_810_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::PatternGenerator* dest = (TreeSearch::PatternGenerator*) G__getstructoffset();
   *dest = *(TreeSearch::PatternGenerator*) libp->para[0].ref;
   const TreeSearch::PatternGenerator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::PatternGenerator::Statistics_t */
// automatic default constructor
static int G__BigBiteDict_811_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::PatternGenerator::Statistics_t *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternGenerator::Statistics_t[n];
     } else {
       p = new((void*) gvp) TreeSearch::PatternGenerator::Statistics_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::PatternGenerator::Statistics_t;
     } else {
       p = new((void*) gvp) TreeSearch::PatternGenerator::Statistics_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_811_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::PatternGenerator::Statistics_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::PatternGenerator::Statistics_t(*(TreeSearch::PatternGenerator::Statistics_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::PatternGenerator::Statistics_t G__TTreeSearchcLcLPatternGeneratorcLcLStatistics_t;
static int G__BigBiteDict_811_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::PatternGenerator::Statistics_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::PatternGenerator::Statistics_t*) (soff+(sizeof(TreeSearch::PatternGenerator::Statistics_t)*i)))->~G__TTreeSearchcLcLPatternGeneratorcLcLStatistics_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::PatternGenerator::Statistics_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::PatternGenerator::Statistics_t*) (soff))->~G__TTreeSearchcLcLPatternGeneratorcLcLStatistics_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_811_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::PatternGenerator::Statistics_t* dest = (TreeSearch::PatternGenerator::Statistics_t*) G__getstructoffset();
   *dest = *(TreeSearch::PatternGenerator::Statistics_t*) libp->para[0].ref;
   const TreeSearch::PatternGenerator::Statistics_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Road::Point */
static int G__BigBiteDict_818_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Point* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road::Point[n];
     } else {
       p = new((void*) gvp) TreeSearch::Road::Point[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road::Point;
     } else {
       p = new((void*) gvp) TreeSearch::Road::Point;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Point* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Road::Point(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TreeSearch::Hit*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TreeSearch::Road::Point(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (TreeSearch::Hit*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TreeSearch::Road::Point*) G__getstructoffset())->res());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Road::Point::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Point::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Road::Point::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Road::Point::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TreeSearch::Road::Point*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road::Point*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road::Point*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road::Point*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Point::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::Point::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Point::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_818_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::Point::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_818_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::Road::Point* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::Road::Point(*(TreeSearch::Road::Point*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Road::Point G__TTreeSearchcLcLRoadcLcLPoint;
static int G__BigBiteDict_818_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Road::Point*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Road::Point*) (soff+(sizeof(TreeSearch::Road::Point)*i)))->~G__TTreeSearchcLcLRoadcLcLPoint();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Road::Point*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Road::Point*) (soff))->~G__TTreeSearchcLcLRoadcLcLPoint();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_818_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Point* dest = (TreeSearch::Road::Point*) G__getstructoffset();
   *dest = *(TreeSearch::Road::Point*) libp->para[0].ref;
   const TreeSearch::Road::Point& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::Road::Corners */
static int G__BigBiteDict_827_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Corners* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::Road::Corners((TreeSearch::Road*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TreeSearch::Road::Corners((TreeSearch::Road*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Corners* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road::Corners[n];
     } else {
       p = new((void*) gvp) TreeSearch::Road::Corners[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TreeSearch::Road::Corners;
     } else {
       p = new((void*) gvp) TreeSearch::Road::Corners;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::Road::Corners::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Corners::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::Road::Corners::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::Road::Corners::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::Road::Corners*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Corners::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::Corners::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::Road::Corners::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_827_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::Road::Corners::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_827_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TreeSearch::Road::Corners* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TreeSearch::Road::Corners(*(TreeSearch::Road::Corners*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::Road::Corners G__TTreeSearchcLcLRoadcLcLCorners;
static int G__BigBiteDict_827_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::Road::Corners*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::Road::Corners*) (soff+(sizeof(TreeSearch::Road::Corners)*i)))->~G__TTreeSearchcLcLRoadcLcLCorners();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::Road::Corners*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::Road::Corners*) (soff))->~G__TTreeSearchcLcLRoadcLcLCorners();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_827_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::Road::Corners* dest = (TreeSearch::Road::Corners*) G__getstructoffset();
   *dest = *(TreeSearch::Road::Corners*) libp->para[0].ref;
   const TreeSearch::Road::Corners& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TreeSearch::BigBite */
static int G__BigBiteDict_834_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TreeSearch::BigBite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TreeSearch::BigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TreeSearch::BigBite((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TreeSearch::BigBite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::BigBite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TreeSearch::BigBite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TreeSearch::BigBite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TreeSearch::BigBite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::BigBite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::BigBite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TreeSearch::BigBite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_834_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TreeSearch::BigBite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TreeSearch::BigBite G__TTreeSearchcLcLBigBite;
static int G__BigBiteDict_834_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TreeSearch::BigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TreeSearch::BigBite*) (soff+(sizeof(TreeSearch::BigBite)*i)))->~G__TTreeSearchcLcLBigBite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TreeSearch::BigBite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TreeSearch::BigBite*) (soff))->~G__TTreeSearchcLcLBigBite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaHe3SpinModule */
static int G__BigBiteDict_902_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaHe3SpinModule* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaHe3SpinModule[n];
     } else {
       p = new((void*) gvp) THaHe3SpinModule[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaHe3SpinModule;
     } else {
       p = new((void*) gvp) THaHe3SpinModule;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaHe3SpinModule::GetRVarDef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((THaHe3SpinModule*) G__getstructoffset())->ClearEvent((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((THaHe3SpinModule*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const THaHe3SpinModule*) G__getstructoffset())->GetSpinState());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaHe3SpinModule*) G__getstructoffset())->SetSpinState((THaHe3SpinModule::EHe3Spin) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const THaHe3SpinModule*) G__getstructoffset())->GetSpinStateValidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_902_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((THaHe3SpinModule*) G__getstructoffset())->SetSpinStateValidity((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_902_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaHe3SpinModule* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaHe3SpinModule(*(THaHe3SpinModule*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaHe3SpinModule G__TTHaHe3SpinModule;
static int G__BigBiteDict_902_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaHe3SpinModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaHe3SpinModule*) (soff+(sizeof(THaHe3SpinModule)*i)))->~G__TTHaHe3SpinModule();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaHe3SpinModule*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaHe3SpinModule*) (soff))->~G__TTHaHe3SpinModule();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_902_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaHe3SpinModule* dest = (THaHe3SpinModule*) G__getstructoffset();
   *dest = *(THaHe3SpinModule*) libp->para[0].ref;
   const THaHe3SpinModule& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaHe3Target */
static int G__BigBiteDict_904_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaHe3Target* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new THaHe3Target((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) THaHe3Target((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaHe3Target::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaHe3Target::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaHe3Target::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaHe3Target::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaHe3Target*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaHe3Target::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaHe3Target::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaHe3Target::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_904_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaHe3Target::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaHe3Target G__TTHaHe3Target;
static int G__BigBiteDict_904_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaHe3Target*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaHe3Target*) (soff+(sizeof(THaHe3Target)*i)))->~G__TTHaHe3Target();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaHe3Target*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaHe3Target*) (soff))->~G__TTHaHe3Target();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaADCHe3Spin */
static int G__BigBiteDict_909_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaADCHe3Spin(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaADCHe3Spin((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin[n];
     } else {
       p = new((void*) gvp) THaADCHe3Spin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin;
     } else {
       p = new((void*) gvp) THaADCHe3Spin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((THaADCHe3Spin*) G__getstructoffset())->ADC2Logic((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaADCHe3Spin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaADCHe3Spin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaADCHe3Spin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaADCHe3Spin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaADCHe3Spin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaADCHe3Spin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaADCHe3Spin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaADCHe3Spin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_909_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaADCHe3Spin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaADCHe3Spin G__TTHaADCHe3Spin;
static int G__BigBiteDict_909_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaADCHe3Spin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaADCHe3Spin*) (soff+(sizeof(THaADCHe3Spin)*i)))->~G__TTHaADCHe3Spin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaADCHe3Spin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaADCHe3Spin*) (soff))->~G__TTHaADCHe3Spin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaADCHe3Spin::ADCStateBound */
// automatic default constructor
static int G__BigBiteDict_910_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin::ADCStateBound *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin::ADCStateBound[n];
     } else {
       p = new((void*) gvp) THaADCHe3Spin::ADCStateBound[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin::ADCStateBound;
     } else {
       p = new((void*) gvp) THaADCHe3Spin::ADCStateBound;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_910_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaADCHe3Spin::ADCStateBound* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaADCHe3Spin::ADCStateBound(*(THaADCHe3Spin::ADCStateBound*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaADCHe3Spin::ADCStateBound G__TTHaADCHe3SpincLcLADCStateBound;
static int G__BigBiteDict_910_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaADCHe3Spin::ADCStateBound*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaADCHe3Spin::ADCStateBound*) (soff+(sizeof(THaADCHe3Spin::ADCStateBound)*i)))->~G__TTHaADCHe3SpincLcLADCStateBound();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaADCHe3Spin::ADCStateBound*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaADCHe3Spin::ADCStateBound*) (soff))->~G__TTHaADCHe3SpincLcLADCStateBound();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_910_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin::ADCStateBound* dest = (THaADCHe3Spin::ADCStateBound*) G__getstructoffset();
   *dest = *(THaADCHe3Spin::ADCStateBound*) libp->para[0].ref;
   const THaADCHe3Spin::ADCStateBound& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaADCHe3Spin::ChanDef_t */
// automatic default constructor
static int G__BigBiteDict_911_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin::ChanDef_t *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin::ChanDef_t[n];
     } else {
       p = new((void*) gvp) THaADCHe3Spin::ChanDef_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaADCHe3Spin::ChanDef_t;
     } else {
       p = new((void*) gvp) THaADCHe3Spin::ChanDef_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BigBiteDict_911_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THaADCHe3Spin::ChanDef_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THaADCHe3Spin::ChanDef_t(*(THaADCHe3Spin::ChanDef_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaADCHe3Spin::ChanDef_t G__TTHaADCHe3SpincLcLChanDef_t;
static int G__BigBiteDict_911_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaADCHe3Spin::ChanDef_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaADCHe3Spin::ChanDef_t*) (soff+(sizeof(THaADCHe3Spin::ChanDef_t)*i)))->~G__TTHaADCHe3SpincLcLChanDef_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaADCHe3Spin::ChanDef_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaADCHe3Spin::ChanDef_t*) (soff))->~G__TTHaADCHe3SpincLcLChanDef_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BigBiteDict_911_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaADCHe3Spin::ChanDef_t* dest = (THaADCHe3Spin::ChanDef_t*) G__getstructoffset();
   *dest = *(THaADCHe3Spin::ChanDef_t*) libp->para[0].ref;
   const THaADCHe3Spin::ChanDef_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* THaBitHe3Spin */
static int G__BigBiteDict_912_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBitHe3Spin* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBitHe3Spin(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) THaBitHe3Spin(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaApparatus*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBitHe3Spin((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) THaBitHe3Spin((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THaBitHe3Spin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBitHe3Spin[n];
     } else {
       p = new((void*) gvp) THaBitHe3Spin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THaBitHe3Spin;
     } else {
       p = new((void*) gvp) THaBitHe3Spin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THaBitHe3Spin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBitHe3Spin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THaBitHe3Spin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THaBitHe3Spin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THaBitHe3Spin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBitHe3Spin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBitHe3Spin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THaBitHe3Spin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BigBiteDict_912_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THaBitHe3Spin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THaBitHe3Spin G__TTHaBitHe3Spin;
static int G__BigBiteDict_912_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THaBitHe3Spin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THaBitHe3Spin*) (soff+(sizeof(THaBitHe3Spin)*i)))->~G__TTHaBitHe3Spin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THaBitHe3Spin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THaBitHe3Spin*) (soff))->~G__TTHaBitHe3Spin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* THaOptics */

/* THaBigBite */

/* TreeSearch */

/* TreeSearch::MWDC */

/* THaTriggerPlane */

/* THaBigBiteTpMwdc */

/* BBDecData */

/* THaOptics::TOpticsDir */

/* THaOptics::TOpticsPos */

/* THaOpticsAGen */

/* THaOpticsHRS */

/* THaOpticsAnalytical */

/* THaOpticsNoFeild */

/* THaScintPlane */

/* THaScintPMT */

/* THaScintHit */

/* THaScintBar */

/* THaTriggerPlaneHit */

/* THaAdcHit */

/* THaTdcHit */

/* THaPartialHit */

/* THaMWDCPlane */

/* THaMWDCGroup */

/* THaMWDCHit */

/* THaMWDC */

/* THaMWDCLine */

/* THaVDCTableTTDConv */

/* THaVDC2DTableTTDConv */

/* THaVDCFuncTTDConv */

/* THaVDCLinearTTDConv */

/* THaBBShower */

/* THaBBTotalShower */

/* THaTimingPlane */

/* THaScintPlaneDet */

/* THaBBShowerBlock */

/* THaBBShowerCluster */

/* TreeSearch::WirePlane */

/* TreeSearch::Projection */

/* TreeSearch::Road */

/* vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > */

/* vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > */

/* TreeSearch::TimeToDistConv */

/* TreeSearch::Hit */

/* TreeSearch::FitCoord */

/* TreeSearch::LinearTTD */

/* TreeSearch::TanhFitTTD */

/* TreeSearch::MCHit */

/* pair<TObject*,TObject*> */

/* TreeSearch::HitPairIter */

/* TreeSearch::HitSet */

/* TreeSearch::NodeDescriptor */

/* pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> */

/* TreeSearch::TreeWalk */

/* TreeSearch::Bits */

/* TreeSearch::PatternTree */

/* TreeSearch::Hitpattern */

/* TreeSearch::TreeParam_t */

/* TreeSearch::PatternGenerator */

/* TreeSearch::PatternGenerator::Statistics_t */

/* TreeSearch::Road::Point */

/* TreeSearch::Road::Corners */

/* TreeSearch::BigBite */

/* THaHe3SpinModule */

/* THaHe3Target */

/* THaADCHe3Spin */

/* THaADCHe3Spin::ADCStateBound */

/* THaADCHe3Spin::ChanDef_t */

/* THaBitHe3Spin */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBigBiteDict {
 public:
  G__Sizep2memfuncBigBiteDict(): p(&G__Sizep2memfuncBigBiteDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBigBiteDict::*p)();
};

size_t G__get_sizep2memfuncBigBiteDict()
{
  G__Sizep2memfuncBigBiteDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBigBiteDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics))) {
     THaOptics *G__Lderived;
     G__Lderived=(THaOptics*)0x1000;
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite))) {
     THaBigBite *G__Lderived;
     G__Lderived=(THaBigBite*)0x1000;
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC))) {
     TreeSearch::MWDC *G__Lderived;
     G__Lderived=(TreeSearch::MWDC*)0x1000;
     {
       THaTrackingDetector *G__Lpbase=(THaTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane))) {
     THaTriggerPlane *G__Lderived;
     G__Lderived=(THaTriggerPlane*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc))) {
     THaBigBiteTpMwdc *G__Lderived;
     G__Lderived=(THaBigBiteTpMwdc*)0x1000;
     {
       THaBigBite *G__Lpbase=(THaBigBite*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc),G__get_linked_tagnum(&G__BigBiteDictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData))) {
     BBDecData *G__Lderived;
     G__Lderived=(BBDecData*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData),G__get_linked_tagnum(&G__BigBiteDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir))) {
     THaOptics::TOpticsDir *G__Lderived;
     G__Lderived=(THaOptics::TOpticsDir*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir),G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos))) {
     THaOptics::TOpticsPos *G__Lderived;
     G__Lderived=(THaOptics::TOpticsPos*)0x1000;
     {
       THaOptics::TOpticsDir *G__Lpbase=(THaOptics::TOpticsDir*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos),G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos),G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen))) {
     THaOpticsAGen *G__Lderived;
     G__Lderived=(THaOpticsAGen*)0x1000;
     {
       THaOptics *G__Lpbase=(THaOptics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen),G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS))) {
     THaOpticsHRS *G__Lderived;
     G__Lderived=(THaOpticsHRS*)0x1000;
     {
       THaOptics *G__Lpbase=(THaOptics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS),G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical))) {
     THaOpticsAnalytical *G__Lderived;
     G__Lderived=(THaOpticsAnalytical*)0x1000;
     {
       THaOptics *G__Lpbase=(THaOptics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical),G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild))) {
     THaOpticsNoFeild *G__Lderived;
     G__Lderived=(THaOpticsNoFeild*)0x1000;
     {
       THaOptics *G__Lpbase=(THaOptics*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild),G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector))) {
     THaSpectrometerDetector *G__Lderived;
     G__Lderived=(THaSpectrometerDetector*)0x1000;
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector))) {
     THaNonTrackingDetector *G__Lderived;
     G__Lderived=(THaNonTrackingDetector*)0x1000;
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane))) {
     THaScintPlane *G__Lderived;
     G__Lderived=(THaScintPlane*)0x1000;
     {
       THaSubDetector *G__Lpbase=(THaSubDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT))) {
     THaScintPMT *G__Lderived;
     G__Lderived=(THaScintPMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit))) {
     THaScintHit *G__Lderived;
     G__Lderived=(THaScintHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar))) {
     THaScintBar *G__Lderived;
     G__Lderived=(THaScintBar*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit))) {
     THaTriggerPlaneHit *G__Lderived;
     G__Lderived=(THaTriggerPlaneHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector))) {
     THaSubDetector *G__Lderived;
     G__Lderived=(THaSubDetector*)0x1000;
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit))) {
     THaAdcHit *G__Lderived;
     G__Lderived=(THaAdcHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit))) {
     THaTdcHit *G__Lderived;
     G__Lderived=(THaTdcHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit))) {
     THaPartialHit *G__Lderived;
     G__Lderived=(THaPartialHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector))) {
     THaTrackingDetector *G__Lderived;
     G__Lderived=(THaTrackingDetector*)0x1000;
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane))) {
     THaMWDCPlane *G__Lderived;
     G__Lderived=(THaMWDCPlane*)0x1000;
     {
       THaSubDetector *G__Lpbase=(THaSubDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup))) {
     THaMWDCGroup *G__Lderived;
     G__Lderived=(THaMWDCGroup*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit))) {
     THaMWDCHit *G__Lderived;
     G__Lderived=(THaMWDCHit*)0x1000;
     {
       THaVDCHit *G__Lpbase=(THaVDCHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit),G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC))) {
     THaMWDC *G__Lderived;
     G__Lderived=(THaMWDC*)0x1000;
     {
       THaTrackingDetector *G__Lpbase=(THaTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCHit))) {
     THaVDCHit *G__Lderived;
     G__Lderived=(THaVDCHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine))) {
     THaMWDCLine *G__Lderived;
     G__Lderived=(THaMWDCLine*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv))) {
     THaVDCTableTTDConv *G__Lderived;
     G__Lderived=(THaVDCTableTTDConv*)0x1000;
     {
       THaVDCTimeToDistConv *G__Lpbase=(THaVDCTimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv))) {
     THaVDC2DTableTTDConv *G__Lderived;
     G__Lderived=(THaVDC2DTableTTDConv*)0x1000;
     {
       THaVDCTimeToDistConv *G__Lpbase=(THaVDCTimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv))) {
     THaVDCFuncTTDConv *G__Lderived;
     G__Lderived=(THaVDCFuncTTDConv*)0x1000;
     {
       THaVDCTimeToDistConv *G__Lpbase=(THaVDCTimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv))) {
     THaVDCLinearTTDConv *G__Lderived;
     G__Lderived=(THaVDCLinearTTDConv*)0x1000;
     {
       THaVDCTimeToDistConv *G__Lpbase=(THaVDCTimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower))) {
     THaBBShower *G__Lderived;
     G__Lderived=(THaBBShower*)0x1000;
     {
       THaPidDetector *G__Lpbase=(THaPidDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaPidDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower))) {
     THaBBTotalShower *G__Lderived;
     G__Lderived=(THaBBTotalShower*)0x1000;
     {
       THaPidDetector *G__Lpbase=(THaPidDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaPidDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane))) {
     THaTimingPlane *G__Lderived;
     G__Lderived=(THaTimingPlane*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet))) {
     THaScintPlaneDet *G__Lderived;
     G__Lderived=(THaScintPlaneDet*)0x1000;
     {
       THaNonTrackingDetector *G__Lpbase=(THaNonTrackingDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_THaNonTrackingDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaSpectrometerDetector *G__Lpbase=(THaSpectrometerDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometerDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock))) {
     THaBBShowerBlock *G__Lderived;
     G__Lderived=(THaBBShowerBlock*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster))) {
     THaBBShowerCluster *G__Lderived;
     G__Lderived=(THaBBShowerCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane))) {
     TreeSearch::WirePlane *G__Lderived;
     G__Lderived=(TreeSearch::WirePlane*)0x1000;
     {
       THaSubDetector *G__Lpbase=(THaSubDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaSubDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection))) {
     TreeSearch::Projection *G__Lderived;
     G__Lderived=(TreeSearch::Projection*)0x1000;
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad))) {
     TreeSearch::Road *G__Lderived;
     G__Lderived=(TreeSearch::Road*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit))) {
     TreeSearch::Hit *G__Lderived;
     G__Lderived=(TreeSearch::Hit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord))) {
     TreeSearch::FitCoord *G__Lderived;
     G__Lderived=(TreeSearch::FitCoord*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD))) {
     TreeSearch::LinearTTD *G__Lderived;
     G__Lderived=(TreeSearch::LinearTTD*)0x1000;
     {
       TreeSearch::TimeToDistConv *G__Lpbase=(TreeSearch::TimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD),G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD))) {
     TreeSearch::TanhFitTTD *G__Lderived;
     G__Lderived=(TreeSearch::TanhFitTTD*)0x1000;
     {
       TreeSearch::TimeToDistConv *G__Lpbase=(TreeSearch::TimeToDistConv*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD),G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit))) {
     TreeSearch::MCHit *G__Lderived;
     G__Lderived=(TreeSearch::MCHit*)0x1000;
     {
       TreeSearch::Hit *G__Lpbase=(TreeSearch::Hit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit),G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits))) {
     TreeSearch::Bits *G__Lderived;
     G__Lderived=(TreeSearch::Bits*)0x1000;
     {
       TBits *G__Lpbase=(TBits*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits),G__get_linked_tagnum(&G__BigBiteDictLN_TBits),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners))) {
     TreeSearch::Road::Corners *G__Lderived;
     G__Lderived=(TreeSearch::Road::Corners*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite))) {
     TreeSearch::BigBite *G__Lderived;
     G__Lderived=(TreeSearch::BigBite*)0x1000;
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite),G__get_linked_tagnum(&G__BigBiteDictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target))) {
     THaHe3Target *G__Lderived;
     G__Lderived=(THaHe3Target*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target),G__get_linked_tagnum(&G__BigBiteDictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaHe3SpinModule *G__Lpbase=(THaHe3SpinModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target),G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin))) {
     THaADCHe3Spin *G__Lderived;
     G__Lderived=(THaADCHe3Spin*)0x1000;
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaHe3SpinModule *G__Lpbase=(THaHe3SpinModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin))) {
     THaBitHe3Spin *G__Lderived;
     G__Lderived=(THaBitHe3Spin*)0x1000;
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaHe3SpinModule *G__Lpbase=(THaHe3SpinModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin),G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBigBiteDict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BBdataLoc*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1F*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THaMatrixElement>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THaOpticsHRS::THaMatrixElement>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THaMWDCGroup*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<THaMWDCHit*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pdbl_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlEdoublecOdoublegR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pdbl_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<double,double> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vec_pdbl_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Road*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Road*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Rvec_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Road*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TreeSearch::Road*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TreeSearch::Road*,less<TreeSearch::Road*> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Rset_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::WirePlane*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),256,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),1,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),257,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Projection*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),256,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),1,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",85,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),257,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WirePlane*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Wpvec_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Projection*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Prvec_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Rvec_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::pair<Double_t,Rvec_t> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<Double_t,Rvec_t> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > >",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Rvec_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("binary_function<WirePlane*,WirePlane*,bool>",117,G__get_linked_tagnum(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLWirePlanemUcOTreeSearchcLcLWirePlanemUcOboolgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("unary_function<WirePlane*,bool>",117,G__get_linked_tagnum(&G__BigBiteDictLN_unary_functionlETreeSearchcLcLWirePlanemUcOboolgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("binary_function<Hit*,Hit*,bool>",117,G__get_linked_tagnum(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLHitmUcOTreeSearchcLcLHitmUcOboolgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ObjPair_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Hit*,Hit::WireNumLess>",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TreeSearch::Hit*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess>",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Hset_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<NodeDescriptor,HitSet>",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Node_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Pattern*,Int_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TreeSearch::Pattern*,int>",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TreeSearch::Pattern*,int,less<TreeSearch::Pattern*> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Hit*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Hit*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Hit*> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Hit*> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> > >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Node_t*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("NodeVec_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WirePlane*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pattern>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Pattern>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vpsz_t",107,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Link>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Link>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vlsz_t",107,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vsiz_t",107,-1,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HashNode>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::PatternGenerator::HashNode>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Road::Point*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TreeSearch::Road::Point*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pvec_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<const Node_t*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("NodeList_t",117,G__get_linked_tagnum(&G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("binary_function<Road*,Road*,bool>",117,G__get_linked_tagnum(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLRoadmUcOTreeSearchcLcLRoadmUcOboolgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pvec_t>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> > >",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EHe3Spin",117,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),0,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule));
   G__setnewtype(-1,"-1 = Spin AntiParallel to Holding Field;",0);
   G__search_typename2("vector<THaHe3SpinModule*>",117,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* THaOptics */
static void G__setup_memvarTHaOptics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics));
   { THaOptics *p; p=(THaOptics*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fSpec=",0,"pointer to BigBite");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TString),-1,-1,2,"fDefBeamName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fBeam=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRotation),-1,-1,2,"fHCS2TCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRotation),-1,-1,2,"fTCS2TRCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRotation),-1,-1,2,"fTCS2HCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRotation),-1,-1,2,"fTRCS2TCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),-1,-1,2,"fTCSOffSetInHCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),-1,-1,2,"fTRCSOffSetInTCS=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCurrent=",0,"Central momentum (GeV)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPathLenShift=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBigBite */
static void G__setup_memvarTHaBigBite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite));
   { THaBigBite *p; p=(THaBigBite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fOptics=",0,"pointer to optics calculation class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch */
static void G__setup_memvarTreeSearch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kUndefinedType=%lldLL",(long long)TreeSearch::kUndefinedType).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kUPlane=%lldLL",(long long)TreeSearch::kUPlane).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kTypeBegin=%lldLL",(long long)TreeSearch::kTypeBegin).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kVPlane=%lldLL",(long long)TreeSearch::kVPlane).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kXPlane=%lldLL",(long long)TreeSearch::kXPlane).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-2,1,G__FastAllocString(2048).Format("kTypeEnd=%lldLL",(long long)TreeSearch::kTypeEnd).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&TreeSearch::kBig),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"kBig=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::MWDC */
static void G__setup_memvarTreeSearchcLcLMWDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   { TreeSearch::MWDC *p; p=(TreeSearch::MWDC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDoTimeCut=%lldLL",(long long)TreeSearch::MWDC::kDoTimeCut).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kPairsOnly=%lldLL",(long long)TreeSearch::MWDC::kPairsOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMCdata=%lldLL",(long long)TreeSearch::MWDC::kMCdata).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNoPartner=%lldLL",(long long)TreeSearch::MWDC::kNoPartner).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("k3dFastMatch=%lldLL",(long long)TreeSearch::MWDC::k3dFastMatch).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEventDisplay=%lldLL",(long long)TreeSearch::MWDC::kEventDisplay).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDoCoarse=%lldLL",(long long)TreeSearch::MWDC::kDoCoarse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDoFine=%lldLL",(long long)TreeSearch::MWDC::kDoFine).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),G__defined_typename("Wpvec_t"),-1,2,"fPlanes=",0,"Wire planes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR),G__defined_typename("Prvec_t"),-1,2,"fProj=",0,"Plane projections");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),G__defined_typename("Wpvec_t"),-1,2,"fCalibPlanes=",0,"Planes in calibration mode");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaDetMap),-1,-1,2,"fRefMap=",0,"Map of reference channels for VME readout");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fRefTime=",0,"[fRefMap->GetSize()] ref channel data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THashTable),-1,-1,2,"fCrateMap=",0,"Map of MWDC DAQ modules");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxThreads=",0,"Maximum simultaneously active threads");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLThreadCtrl),-1,-1,2,"fThreads=",0,"! Thread controller");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"f3dMatchvalScalefact=",0,"Correction for fast 3D matchval");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"f3dMatchCut=",0,"Maximum allowed 3D match error");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMinNdof=",0,"Minimum number of points in fit - 4");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vec_pdbl_t"),-1,2,"fChisqLimits=",0,"lo/hi onfidence interval limits on Chi2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFailNhits=",0,"Too many hits in wire plane(s)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFailNpat=",0,"Too many treesearch patterns found");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNcombos=",0,"Number of road combinations tried");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fN3dFits=",0,"Number of track fits done (=good road combos)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEvNum=",0,"Current event number");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_track=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_3dmatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_3dfit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_coarse=",0,"times in us");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaTriggerPlane */
static void G__setup_memvarTHaTriggerPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane));
   { THaTriggerPlane *p; p=(THaTriggerPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fHits=",0,"Hits matched from dE and E plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fPartialHits=",0,"Hits other than those matched");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fTrackProj=",0,"projection of track onto scintillator plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMatchRatioE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMatchRatiodE=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMatchRatioTrack=",0,"# of matched THaTriggerPlaneHit / # of total THaScintHit on THaScintPlane ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),-1,-1,2,"fEplane=",0,"E plane subdetector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),-1,-1,2,"fdEplane=",0,"dE plane subdetector");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHitAcceptanceDx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHitAcceptanceDy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHitAcceptanceDz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHitAcceptanceMinDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fHitAcceptanceMaxDt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackAcceptanceDx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackAcceptanceDy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBigBiteTpMwdc */
static void G__setup_memvarTHaBigBiteTpMwdc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc));
   { THaBigBiteTpMwdc *p; p=(THaBigBiteTpMwdc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),-1,-1,2,"fMWDC=",0,"Pointer to drift Chamber detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane),-1,-1,2,"fTriggerPlane=",0,"Pointer to trigger plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BBDecData */
static void G__setup_memvarBBDecData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData));
   { BBDecData *p; p=(BBDecData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TBits),-1,-1,4,"bits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"evtypebits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"evtype=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ctimel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ctimer=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pulser1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"synchadc1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"synchadc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"synchadc3=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"synchadc4=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"synchadc14=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timeroc1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timeroc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timeroc3=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timeroc4=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"timeroc14=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rftime1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rftime2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"edtpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"edtpr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"lenroc12=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"lenroc16=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"cnt1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR),G__defined_typename("vector<BBdataLoc*>"),-1,4,"fCrateLoc=",0,"Raw Data locations by crate, slot, channel");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR),G__defined_typename("vector<BBdataLoc*>"),-1,4,"fWordLoc=",0,"Raw Data locations relative to header word");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR),G__defined_typename("vector<TH1F*>"),-1,4,"hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData),-1,-2,4,"fgThis=",0,"Pointer to instance of this class");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fgVdcEffFirst=",0,"If >0, initialize VdcEff() on next call");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOptics::TOpticsDir */
static void G__setup_memvarTHaOpticscLcLTOpticsDir(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   { THaOptics::TOpticsDir *p; p=(THaOptics::TOpticsDir*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-2,1,G__FastAllocString(2048).Format("kNA=%lldLL",(long long)THaOptics::TOpticsDir::kNA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-2,1,G__FastAllocString(2048).Format("kHCS=%lldLL",(long long)THaOptics::TOpticsDir::kHCS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-2,1,G__FastAllocString(2048).Format("kTCS=%lldLL",(long long)THaOptics::TOpticsDir::kTCS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-2,1,G__FastAllocString(2048).Format("kTRCS=%lldLL",(long long)THaOptics::TOpticsDir::kTRCS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-2,1,G__FastAllocString(2048).Format("kFCS=%lldLL",(long long)THaOptics::TOpticsDir::kFCS).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys),-1,-1,2,"fCoordSys=",0,"specify which Coordinate System this vector is using");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fOptics=",0,"the optics class using this vector ,THaOptics");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOptics::TOpticsPos */
static void G__setup_memvarTHaOpticscLcLTOpticsPos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   { THaOptics::TOpticsPos *p; p=(THaOptics::TOpticsPos*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOpticsAGen */
static void G__setup_memvarTHaOpticsAGen(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen));
   { THaOpticsAGen *p; p=(THaOpticsAGen*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC[10]=",0,"Simple dipole coefficients");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCv[10]=",0,"Vertex Coefficients");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),-1,-1,2,"fBendPlaneCenter=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBendTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOpticsHRS */
static void G__setup_memvarTHaOpticsHRS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS));
   { THaOpticsHRS *p; p=(THaOpticsHRS*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags),-1,-2,2,"T000=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags),-1,-2,2,"Y000=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags),-1,-2,2,"P000=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRScLcLdA),-1,-2,2,"kPORDER=7LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fTMatrixElems=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fDMatrixElems=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fPMatrixElems=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fPTAMatrixElems=",0,"involves abs(theta_fp)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fYMatrixElems=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fYTAMatrixElems=",0,"involves abs(theta_fp)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fFPMatrixElems=",0,"matrix elements used in");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR),G__defined_typename("vector<THaMatrixElement>"),-1,2,"fLMatrixElems=",0,"Path-length corrections (meters)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOpticsAnalytical */
static void G__setup_memvarTHaOpticsAnalytical(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical));
   { THaOpticsAnalytical *p; p=(THaOpticsAnalytical*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMagDL=",0,"shift of front surface of magnetic field from sieve");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMagTheta=",0,"in rad, the angle between two surfaces of magnetic field");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMagS=",0,"the distance between crossing line of two surfaces of magnetic field and central point of front surface");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRCentral=",0,"the  curve radius in magnetic field for a particle with central momentum");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRadius2Momentum=",0,"conversion constant of bending radius to momentum, units: GeV/m/c");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaOpticsNoFeild */
static void G__setup_memvarTHaOpticsNoFeild(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild));
   { THaOpticsNoFeild *p; p=(THaOpticsNoFeild*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaScintPlane */
static void G__setup_memvarTHaScintPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane));
   { THaScintPlane *p; p=(THaScintPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fBars=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBars=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fHits=",0,"Hits in paddles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fLaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fLtHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRtHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fPartHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefCh=",0,"reference channels for pipeline tdc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRefHits=",0,"Number of refch that were hit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRefOkay=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLTNhit=",0,"Number of Left paddles TDC times */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRTNhit=",0,"Number of Right paddles TDC times  */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLANhit=",0,"Number of Left paddles ADC amplitudes */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRANhit=",0,"Number of Right paddles ADC amplitudes */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPaddlesHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLtIndex=",0,"![fNBars]   //   for left-tdc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRtIndex=",0,"![fNBars]   //       right-tdc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLaIndex=",0,"![fNBars]   //       left-adc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRaIndex=",0,"![fNBars]   //       right-adc");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLE=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRE=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLrawA=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRrawA=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLpedcA=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRpedcA=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLT=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRT=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLTcounter=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRTcounter=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"hitcounter=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Energy=",0,"[fNBars] 		");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"TDIFF=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"TOF=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"T_tot=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Yt_pos=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Ya_pos=",0,"[fNBars] 	");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Y_pred=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Y_dev=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle=",0,"[fNBars]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),-1,-1,2,"fXax=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventCount=",0,"how many event processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fErrorReferenceChCount=",0,"how many event got no reference channel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fErrorReferenceChRateWarningThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTooManyErrRefCh=",0,"flag whether there are too much error reference");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlanecLcLESide),-1,-2,2,"kLeft=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlanecLcLESide),-1,-2,2,"kRight=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaScintPMT */
static void G__setup_memvarTHaScintPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT));
   { THaScintPMT *p; p=(THaScintPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGain=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPed=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTDCRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeWalkPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeWalkExp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fScBar=",0,"to the original bar");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawLowLim=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawUpLim=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRawWrapAround=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaScintHit */
static void G__setup_memvarTHaScintHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   { THaScintHit *p; p=(THaScintHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,4,"fScBar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPlaneNum=",0,"this or first plane number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fBarNum_nd=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHitXPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHitYPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHitZPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHitTOF=",0,"time of hit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTdiff=",0,"left-to-right PMT time difference");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fHitEdep=",0,"total energy deposited");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOrder=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fClusterNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaScintBar */
static void G__setup_memvarTHaScintBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar));
   { THaScintBar *p; p=(THaScintBar*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBarcLcLEBarType),-1,-2,1,G__FastAllocString(2048).Format("kSpecial=%lldLL",(long long)THaScintBar::kSpecial).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBarcLcLEBarType),-1,-2,1,G__FastAllocString(2048).Format("kUVA=%lldLL",(long long)THaScintBar::kUVA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBarcLcLEBarType),-1,-2,1,G__FastAllocString(2048).Format("kGlasgow=%lldLL",(long long)THaScintBar::kGlasgow).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBarcLcLEBarType),-1,-2,1,G__FastAllocString(2048).Format("kCMU=%lldLL",(long long)THaScintBar::kCMU).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT),-1,-1,2,"fLPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT),-1,-1,2,"fRPMT=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXPosPlane=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYPosPlane=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZPosPlane=",0,"middle of the bar, relative to the center of the plane it belongs too");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZWidth=",0,"full width (from end to end)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fc=",0,"effective speed of light  ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fatt=",0,"attenuation");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBarcLcLEBarType),-1,-1,2,"fBarType=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum_nd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaTriggerPlaneHit */
static void G__setup_memvarTHaTriggerPlaneHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit));
   { THaTriggerPlaneHit *p; p=(THaTriggerPlaneHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fEHit=",0,"ref to hit on E plane");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fdEHit=",0,"ref to hit on dE plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaAdcHit */
static void G__setup_memvarTHaAdcHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit));
   { THaAdcHit *p; p=(THaAdcHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fPMT=",0,"reference to \"real\" PMT, kept in detector arrays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawAmpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fAmplPedCor=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAmpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaTdcHit */
static void G__setup_memvarTHaTdcHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit));
   { THaTdcHit *p; p=(THaTdcHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fPMT=",0,"reference to \"real\" PMT, kept in detector arrays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSide=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaPartialHit */
static void G__setup_memvarTHaPartialHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit));
   { THaPartialHit *p; p=(THaPartialHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TRef),-1,-1,2,"fScBar=",0,"reference to the bar");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fBarNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCaseNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLt_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRt_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLa=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLa_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRa=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRa_raw=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaMWDCPlane */
static void G__setup_memvarTHaMWDCPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane));
   { THaMWDCPlane *p; p=(THaMWDCPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-2,1,G__FastAllocString(2048).Format("kXchamber=%lldLL",(long long)THaMWDCPlane::kXchamber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-2,1,G__FastAllocString(2048).Format("kVchamber=%lldLL",(long long)THaMWDCPlane::kVchamber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-2,1,G__FastAllocString(2048).Format("kUchamber=%lldLL",(long long)THaMWDCPlane::kUchamber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-2,1,G__FastAllocString(2048).Format("kYchamber=%lldLL",(long long)THaMWDCPlane::kYchamber).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-2,1,G__FastAllocString(2048).Format("kOchamber=%lldLL",(long long)THaMWDCPlane::kOchamber).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fWires=",0,"Wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fHits=",0,"Fired wires ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNWiresHit=",0,"Number of wires that were hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNWires=",0,"Number of wires in that plane");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaVar),-1,-1,2,"fEventType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaVar),-1,-1,2,"fBit3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefCh=",0,"reference channels for pipeline tdc");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefHits=",0,"hits on reference channels (should be one for each trigger on each line)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRefHits=",0,"Number of refch that were hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRefCh=",0,"number of reference channels ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRefOkay=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxTime=",0,"Min and Max limits of TDC times for clusters");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fFlags=",0,"Analysis control flags");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ=",0,"Z coordinate of planes ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXWidth=",0,"Width of active area in dispersive direction(m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYWidth=",0,"Width of active area in out-of-plane directoin(m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosRes=",0,"Estimate for the position resolution along xp (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYMin=",0,"active area of the plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTHMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTHMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPHMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPHMin=",0,"reasonable range of intersection");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWBeg=",0,"Position of 1-st wire (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWSpac=",0,"Wires spacing and direction (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCellHeight=",0,"Height of a cell in a plane (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWAngle=",0,"Angle between dispersive direction and direction of ");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType),-1,-1,2,"fPlaneType=",0,"x,u,v,y or other type of plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTDCRes=",0,"TDC Resolution ( s / channel)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVel=",0,"Drift velocity in the wire plane (m/s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftC1=",0,"Parameter to use for TanH TTD conversion");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftC2=",0,"Parameter to use for TanH TTD conversion");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftC3=",0,"Parameter to use for TanH TTD conversion");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fXCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fYCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiCorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fUseInReconstruct=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv),-1,-1,2,"fTTDConv=",0,"Time-to-distance converter for this plane's wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),-1,-1,2,"fMWDC=",0,"MWDC detector to which this plane belongs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRejectedHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRawT=",0,"[fNWires]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCorT=",0,"[fNWires]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTcounter=",0,"[fNWires]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRefT=",0,"[fNRefCh]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaMWDCGroup */
static void G__setup_memvarTHaMWDCGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup));
   { THaMWDCGroup *p; p=(THaMWDCGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kFresh=%lldLL",(long long)THaMWDCGroup::kFresh).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kCoarse=%lldLL",(long long)THaMWDCGroup::kCoarse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kFine=%lldLL",(long long)THaMWDCGroup::kFine).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kValidTrack=%lldLL",(long long)THaMWDCGroup::kValidTrack).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kOK=%lldLL",(long long)THaMWDCGroup::kOK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kL1=%lldLL",(long long)THaMWDCGroup::kL1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus),-1,-2,1,G__FastAllocString(2048).Format("kL2=%lldLL",(long long)THaMWDCGroup::kL2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode),-1,-2,1,G__FastAllocString(2048).Format("kCoarseTracking=%lldLL",(long long)THaMWDCGroup::kCoarseTracking).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode),-1,-2,1,G__FastAllocString(2048).Format("kFineTracking=%lldLL",(long long)THaMWDCGroup::kFineTracking).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode),-1,-2,1,G__FastAllocString(2048).Format("kTrialFineTracking=%lldLL",(long long)THaMWDCGroup::kTrialFineTracking).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR),G__defined_typename("vector<THaMWDCHit*>"),-1,2,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fLRbits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fPlaneBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fGroupStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fConstructMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack),-1,-1,2,"fTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChi2Cont[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoarseChi2Cont[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChi2NDoF=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPlaneIndex[20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaMWDCHit */
static void G__setup_memvarTHaMWDCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit));
   { THaMWDCHit *p; p=(THaMWDCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR),-1,-2,1,G__FastAllocString(2048).Format("kL=%lldLL",(long long)THaMWDCHit::kL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR),-1,-2,1,G__FastAllocString(2048).Format("kR=%lldLL",(long long)THaMWDCHit::kR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR),-1,-2,1,G__FastAllocString(2048).Format("kUnDef=%lldLL",(long long)THaMWDCHit::kUnDef).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR),-1,-2,1,G__FastAllocString(2048).Format("kNULL=%lldLL",(long long)THaMWDCHit::kNULL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kOwned=%lldLL",(long long)THaMWDCHit::kOwned).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kLRFixed=%lldLL",(long long)THaMWDCHit::kLRFixed).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kVerShower=%lldLL",(long long)THaMWDCHit::kVerShower).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kValShower=%lldLL",(long long)THaMWDCHit::kValShower).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kDataValid=%lldLL",(long long)THaMWDCHit::kDataValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus),-1,-2,1,G__FastAllocString(2048).Format("kCoordValid=%lldLL",(long long)THaMWDCHit::kCoordValid).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup),-1,-1,2,"fGroup=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane),-1,-1,2,"fPlane=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRefTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoord=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScintOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTrackNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR),-1,-1,2,"fLR=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fHitStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChi2Cont=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoarseChi2Cont=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaMWDC */
static void G__setup_memvarTHaMWDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC));
   { THaMWDC *p; p=(THaMWDC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kStageMask=%lldLL",(long long)THaMWDC::kStageMask).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kInvalid=%lldLL",(long long)THaMWDC::kInvalid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCoarse=%lldLL",(long long)THaMWDC::kCoarse).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFine=%lldLL",(long long)THaMWDC::kFine).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kReassigned=%lldLL",(long long)THaMWDC::kReassigned).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMultiTrack=%lldLL",(long long)THaMWDC::kMultiTrack).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kBadTrack=%lldLL",(long long)THaMWDC::kBadTrack).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kOnlyFastest=%lldLL",(long long)THaMWDC::kOnlyFastest).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kTDCbits=%lldLL",(long long)THaMWDC::kTDCbits).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kHardTDCcut=%lldLL",(long long)THaMWDC::kHardTDCcut).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSoftTDCcut=%lldLL",(long long)THaMWDC::kSoftTDCcut).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kIgnoreNegDrift=%lldLL",(long long)THaMWDC::kIgnoreNegDrift).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCoarseOnly=%lldLL",(long long)THaMWDC::kCoarseOnly).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kUseShowerCuts=%lldLL",(long long)THaMWDC::kUseShowerCuts).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kValidShowerData=%lldLL",(long long)THaMWDC::kValidShowerData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kValidClusterData=%lldLL",(long long)THaMWDC::kValidClusterData).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kRejected=%lldLL",(long long)THaMWDC::kRejected).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSoftMax=%lldLL",(long long)THaMWDC::kSoftMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kHardMax=%lldLL",(long long)THaMWDC::kHardMax).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLETrackingMode),-1,-2,1,G__FastAllocString(2048).Format("kCoarseTracking=%lldLL",(long long)THaMWDC::kCoarseTracking).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCcLcLETrackingMode),-1,-2,1,G__FastAllocString(2048).Format("kFineTracking=%lldLL",(long long)THaMWDC::kFineTracking).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fPlanes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR),G__defined_typename("vector<THaMWDCGroup*>"),-1,2,"fGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,2,"fConstructMatrix[500000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fValidBits[500000]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPlaneNumbersForBits[500000][21]=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fReconstructBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNtracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNmatrices=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNPlanes=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fShowerStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector3),-1,-1,2,"fShowerOrigin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalConsideredEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTotalTrackingEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRejectedTrackingEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fHardMaxTrackingEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSoftMaxTrackingEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetXhigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetXlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetYhigh=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetYlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetXExt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetYExt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fShowerXExt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fShowerYExt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetWindowXOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBenchmark),-1,-1,2,"fBench=",0,"Performance statistics timers");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fDoBench=",0,"if true, collect timing statistics");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fTooBusy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoarseProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFineProcTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEstNGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEstNCalls=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNGroups=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNCalls=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaMWDCLine */
static void G__setup_memvarTHaMWDCLine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine));
   { THaMWDCLine *p; p=(THaMWDCLine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSlope=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fIntercept=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChiSquared=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTimeOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaVDCTableTTDConv */
static void G__setup_memvarTHaVDCTableTTDConv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv));
   { THaVDCTableTTDConv *p; p=(THaVDCTableTTDConv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fTimes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fDistances=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVelocity=",0,"Average Drift Velocity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableX[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableY[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableT[500][500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaVDC2DTableTTDConv */
static void G__setup_memvarTHaVDC2DTableTTDConv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv));
   { THaVDC2DTableTTDConv *p; p=(THaVDC2DTableTTDConv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"x0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"y0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"Nx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"Ny=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVelocity=",0,"Average Drift Velocity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableX[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableY[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"TableT[500][500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaVDCFuncTTDConv */
static void G__setup_memvarTHaVDCFuncTTDConv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv));
   { THaVDCFuncTTDConv *p; p=(THaVDCFuncTTDConv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVelocity=",0,"Average Drift Velocity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaVDCLinearTTDConv */
static void G__setup_memvarTHaVDCLinearTTDConv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv));
   { THaVDCLinearTTDConv *p; p=(THaVDCLinearTTDConv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVelocity=",0,"Average Drift Velocity");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBBShower */
static void G__setup_memvarTHaBBShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower));
   { THaBBShower *p; p=(THaBBShower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fCoarseProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFineProcessed=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMaxNClust=",0,(char*)NULL);
   G__memvar_setup((void*)0,82,0,0,-1,G__defined_typename("UShort_t"),-1,2,"fNChan=",0,"Number of channels for each module");
   G__memvar_setup((void*)0,82,2,0,-1,G__defined_typename("UShort_t"),-1,2,"fChanMap=",0,"Logical channel numbers ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclublk=",0,"Max. number of blocks composing a cluster");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrows=",0,"Number of rows");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcols=",0,"Number of columns");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBlockX=",0,"[fNelem] x positions (cm) of block centers");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fBlockY=",0,"[fNelem] y positions (cm) of block centers");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fPed=",0,"[fNelem] Pedestals for each block");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fGain=",0,"[fNelem] Gains for each block");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fEmin=",0,"Minimum energy for a cluster center");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNhits=",0,"Number of hits");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fA=",0,"[fNelem] Array of ADC amplitudes of blocks");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fA_p=",0,"[fNelem] Array of ADC minus pedestal values of blocks");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fA_c=",0,"[fNelem] Array of corrected ADC amplitudes of blocks");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAsum_p=",0,"Sum of blocks ADC minus pedestal values");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAsum_c=",0,"Sum of blocks corrected ADC amplitudes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclust=",0,"Number of clusters");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fE=",0,"[fNClust] Energy (MeV) of clusters");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX=",0,"[fNClust] x position (m) of clusters");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY=",0,"[fNClust] y position (m) of clusters ");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMult=",0,"[fNClust]  Number of blocks in main cluster");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNblk=",0,"[fNclublk] Numbers of blocks composing main cluster");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fEblk=",0,"[fNclublk] Energies of blocks composing main cluster");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTRX=",0,"x position of track cross point");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTRY=",0,"y position of track cross point");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fdZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock),-1,-1,2,"fBlocks=",0,"[fNelem] Array of blocks");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster),-1,-1,2,"fClusters=",0,"[fMaxNClust] ");
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock),-1,-1,2,"fBlkGrid=",0,"[fNrows]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tan_angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"sin_angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"cos_angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBBTotalShower */
static void G__setup_memvarTHaBBTotalShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower));
   { THaBBTotalShower *p; p=(THaBBTotalShower*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"kMaxNClust=16LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),-1,-1,2,"fShower=",0,"Shower subdetector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower),-1,-1,2,"fPreShower=",0,"Preshower subdetector");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMaxDx=",0,"Maximum dx between shower and preshower centers");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMaxDy=",0,"Maximum dx between shower and preshower centers");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNclust=",0,"Number of clusters");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fE=",0,"[fNClust] Total shower energy");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fX=",0,"[fNClust] Total shower X");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"fY=",0,"[fNClust] Total shower Y");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fID=",0,"[fNClust] ID of Presh and Shower coincidence");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaTimingPlane */
static void G__setup_memvarTHaTimingPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane));
   { THaTimingPlane *p; p=(THaTimingPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),-1,-1,2,"fEplane=",0,"E plane subdetector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane),-1,-1,2,"fdEplane=",0,"dE plane subdetector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaScintPlaneDet */
static void G__setup_memvarTHaScintPlaneDet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet));
   { THaScintPlaneDet *p; p=(THaScintPlaneDet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fBars=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNBars=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fHits=",0,"Hits in paddles");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fLaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRaHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fLtHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRtHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fPartHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRefCh=",0,"reference channels for pipeline tdc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRefHits=",0,"Number of refch that were hit");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRefOkay=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLTNhit=",0,"Number of Left paddles TDC times */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRTNhit=",0,"Number of Right paddles TDC times  */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLANhit=",0,"Number of Left paddles ADC amplitudes */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRANhit=",0,"Number of Right paddles ADC amplitudes */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPaddlesHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLtIndex=",0,"![fNBars]   //   for left-tdc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRtIndex=",0,"![fNBars]   //       right-tdc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLaIndex=",0,"![fNBars]   //       left-adc");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRaIndex=",0,"![fNBars]   //       right-adc");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLE=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRE=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLrawA=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRrawA=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLpedcA=",0,"[fNBars]    ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRpedcA=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLT=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRT=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fLTcounter=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRTcounter=",0,"[fNBars]");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"hitcounter=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Energy=",0,"[fNBars] 		");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"TDIFF=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"TOF=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"T_tot=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Yt_pos=",0,"[fNBars] ");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Ya_pos=",0,"[fNBars] 	");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Y_pred=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"Y_dev=",0,"[fNBars]");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fAngle=",0,"[fNBars]");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackAcceptanceDx=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTrackAcceptanceDy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMatchRatioTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fTrackProj=",0,"projection of track onto scintillator plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fEventCount=",0,"how many event processed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fErrorReferenceChCount=",0,"how many event got no reference channel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fErrorReferenceChRateWarningThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fTooManyErrRefCh=",0,"flag whether there are too much error reference");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDetcLcLESide),-1,-2,2,"kLeft=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDetcLcLESide),-1,-2,2,"kRight=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBBShowerBlock */
static void G__setup_memvarTHaBBShowerBlock(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock));
   { THaBBShowerBlock *p; p=(THaBBShowerBlock*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"kBig=",0,"= 1e15;");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fX=",0,"x position of the center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fY=",0,"y position of the center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPed=",0,"Pedestal");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fGain=",0,"Gain");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fE=",0,"Energy deposit in block");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRow=",0,"Row of the block");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCol=",0,"Column of the block");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStat=",0,"Status: 0: not seen, 1: seen, 2: local max");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaBBShowerCluster */
static void G__setup_memvarTHaBBShowerCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   { THaBBShowerCluster *p; p=(THaBBShowerCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,1,-1,G__defined_typename("Float_t"),-2,4,"kBig=",0,"= 1e15;");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fX=",0,"x position of the center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fY=",0,"y position of the center");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fE=",0,"Energy deposit in block");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMult=",0,"Number of blocks in the cluster");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNMaxBlocks=",0,"Max number of blocks");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock),-1,-1,4,"fBlocks=",0,"[fNMaxBlocks] List of blocks in cluster");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::WirePlane */
static void G__setup_memvarTreeSearchcLcLWirePlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   { TreeSearch::WirePlane *p; p=(TreeSearch::WirePlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fPlaneNum=",0,"Ordinal of this plane within its projection");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-1,2,"fType=",0,"Plane type (x,y,u,v)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWireStart=",0,"Position of 1st wire (along wire coord) (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWireSpacing=",0,"Wire spacing (assumed constant) (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCoordOffset=",0,"Wire coord offset wrt MWDC due to fOrigin");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),-1,-1,2,"fPartner=",0,"! Partner plane (usually with staggered wires)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),-1,-1,2,"fProjection=",0,"! The projection that we belong to");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC),-1,-1,2,"fMWDC=",0,"! Our parent detector");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fResolution=",0,"Drift distance resolution (sigma) (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinTime=",0,"Minimum drift time for a hit (s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxTime=",0,"Maximum drift time for a hit (s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftimeoffset=",0,"time offset (ns)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxHits=",0,"Maximum # hits before flagging decode error");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv),-1,-1,2,"fTTDConv=",0,"Drift time->distance converter");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fTDCOffset=",0,"[fNelem] TDC offsets for each wire");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fHits=",0,"Hit data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fFitCoords=",0,"Hit coordinates used by good fits in roads");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNmiss=",0,"Statistics: Decoder channel misses");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNrej=",0,"Statistics: Rejected hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWasSorted=",0,"Statistics: hits were sorted (0/1)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNhitwires=",0,"Statistics: wires with one or more hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNmultihit=",0,"Statistics: wires with multiple hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNmaxmul=",0,"Statistics: largest num hits on any wire");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNcl=",0,"Statistics: number of hit \"clusters\"");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNdbl=",0,"Statistics: num wires with neighboring hits");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fClsiz=",0,"Statistics: max cluster size");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlanecLcLdA),-1,-2,2,"kIsRequired=16384LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlanecLcLdA),-1,-2,2,"kCalibrating=32768LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Projection */
static void G__setup_memvarTreeSearchcLcLProjection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   { TreeSearch::Projection *p; p=(TreeSearch::Projection*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjectioncLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kEventDisplay=%lldLL",(long long)TreeSearch::Projection::kEventDisplay).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType),-1,-1,2,"fType=",0,"Type of plane (u,v,x,y...)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),-1,-1,2,"fPlanes=",0,"Wire planes in this projection");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNlevels=",0,"Number of levels of search tree");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxSlope=",0,"Maximum physical track slope (0=perp)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWidth=",0,"Width of tracking region (m)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TVector2),-1,-1,2,"fAxis=",0,"Nominal projection axis normal to wires");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaDetectorBase),-1,-1,2,"fDetector=",0,"! Parent detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree),-1,-1,2,"fPatternTree=",0,"Precomputed template database");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMinFitPlanes=",0,"Min num of planes required for fitting");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxMiss=",0,"Allowed number of missing planes");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fRequire1of2=",0,"Require one plane of a plane pair");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TBits),-1,-1,2,"fPlaneCombos=",0,"Allowed plane occupancy patterns");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxPat=",0,"Sanity cut on number of patterns");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fFrontMaxBinDist=",0,"Max pattern dist in front plane");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fBackMaxBinDist=",0,"Max pattern dist in back plane");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fHitMaxDist=",0,"Max allowed distance between hits for");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fConfLevel=",0,"Requested confidence level for chi2 cut");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR),G__defined_typename("vec_pdbl_t"),-1,2,"fChisqLimits=",0,"lo/hi onfidence interval limits on Chi2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern),-1,-1,2,"fHitpattern=",0,"Hitpattern of current event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),G__defined_typename("NodeVec_t"),-1,2,"fPatternsFound=",0,"Patterns found by TreeSearch");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRoads=",0,"Roads found by MakeRoads");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNgoodRoads=",0,"Good roads in fRoads");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray),-1,-1,2,"fRoadCorners=",0,"Road corners, for event display");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_bins=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_binhits=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"maxhits_bin=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_test=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_pat=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_roads=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_dupl=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"n_badfits=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_treesearch=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_roads=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_fit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"t_track=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Road */
static void G__setup_memvarTreeSearchcLcLRoad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   { TreeSearch::Road *p; p=(TreeSearch::Road*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR),G__defined_typename("NodeList_t"),-1,2,"fPatterns=",0,"Patterns in this road");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),G__defined_typename("Hset_t"),-1,2,"fHits=",0,"All hits linked to the patterns");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR),G__defined_typename("vector<Pvec_t>"),-1,2,"fPoints=",0,"All hit coordinates within road [nplanes][]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR),G__defined_typename("Pvec_t"),-1,2,"fFitCoord=",0,"fPoints used in best fit [nplanes]");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection),-1,-1,2,"fProjection=",0,"! Projection that this Road belongs to");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCornerX[5]=",0,"x positions of corners");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZL=",0,"z-eps of first plane");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZU=",0,"z+eps of last plane ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPos=",0,"Track origin");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSlope=",0,"Track slope");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fChi2=",0,"Chi2 of fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fV[3]=",0,"Covar matrix of param (V11, V12=V21, V22)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fDof=",0,"Degrees of freedom of fit (nhits-2)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGood=",0,"Road successfully built and fit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack),-1,-1,2,"fTrack=",0,"The lowest-chi2 3D track using this road");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBuildInfo_t),-1,-1,2,"fBuild=",0,"! Working data for building");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fGrown=",0,"! Add() added hits in front or back plane");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNfits=",0,"Statistics: num fits with acceptable chi2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > */
static void G__setup_memvarvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   { vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > *p; p=(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > */
static void G__setup_memvarvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   { vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > *p; p=(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::TimeToDistConv */
static void G__setup_memvarTreeSearchcLcLTimeToDistConv(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv));
   { TreeSearch::TimeToDistConv *p; p=(TreeSearch::TimeToDistConv*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNparam=",0,"Number of parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Hit */
static void G__setup_memvarTreeSearchcLcLHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   { TreeSearch::Hit *p; p=(TreeSearch::Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fWireNum=",0,"Wire number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRawTDC=",0,"Raw TDC value (channels)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTime=",0,"Hit time corrected for TDC offset (s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPos=",0,"Wire position along plane axis (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosL=",0,"fPos - raw drift distance (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPosR=",0,"fPos + raw drift distance (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fResolution=",0,"Resolution of fPosR/fPosL (m)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),-1,-1,2,"fWirePlane=",0,"! Pointer to parent wire plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCl=",0,"Neighboring wire also fired");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMulti=",0,"Additional hits present on same wire");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTdiff=",0,"Time difference to previous multihit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::FitCoord */
static void G__setup_memvarTreeSearchcLcLFitCoord(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord));
   { TreeSearch::FitCoord *p; p=(TreeSearch::FitCoord*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit),-1,-1,4,"fHit=",0,"Decoded raw hit data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad),-1,-1,4,"fRoad=",0,"Road that created this fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos=",0,"Uncorrected hit position (posL/R) used in fit (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrackPos=",0,"Track crossing position from projection fit (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTrackSlope=",0,"Track slope from projection fit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f3DTrkPos=",0,"Crossing position of fitted 3D track (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"f3DTrkSlope=",0,"Slope of fitted 3D track");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fFitRank=",0,"Fit rank by chi2 within the road (0 = best)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::LinearTTD */
static void G__setup_memvarTreeSearchcLcLLinearTTD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD));
   { TreeSearch::LinearTTD *p; p=(TreeSearch::LinearTTD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVel=",0,"Drift velocity (m/s)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::TanhFitTTD */
static void G__setup_memvarTreeSearchcLcLTanhFitTTD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD));
   { TreeSearch::TanhFitTTD *p; p=(TreeSearch::TanhFitTTD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDriftVel=",0,"Drift velocity (m/s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC0=",0,"c0 (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fC2=",0,"c2 (m/s^2)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"t0 (s)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fInvC0=",0,"1/c0 (1/m) for efficiency");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::MCHit */
static void G__setup_memvarTreeSearchcLcLMCHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit));
   { TreeSearch::MCHit *p; p=(TreeSearch::MCHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCTrack),-1,-1,2,"fMCTrack=",0,"MC track generating this hit (0=noise hit)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMCPos=",0,"Exact MC track crossing position (m)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pair<TObject*,TObject*> */
static void G__setup_memvarpairlETObjectmUcOTObjectmUgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR));
   { pair<TObject*,TObject*> *p; p=(pair<TObject*,TObject*>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TObject),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TObject),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::HitPairIter */
static void G__setup_memvarTreeSearchcLcLHitPairIter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter));
   { TreeSearch::HitPairIter *p; p=(TreeSearch::HitPairIter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TSeqCollection),-1,-1,4,"fCollA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_TSeqCollection),-1,-1,4,"fCollB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TIterator),-1,-1,4,"fIterA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TIterator),-1,-1,4,"fIterB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TIterator),-1,-1,4,"fSaveIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit),-1,-1,4,"fSaveHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxDist=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStarted=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fScanning=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR),G__defined_typename("ObjPair_t"),-1,4,"fCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR),G__defined_typename("ObjPair_t"),-1,4,"fNext=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::HitSet */
static void G__setup_memvarTreeSearchcLcLHitSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet));
   { TreeSearch::HitSet *p; p=(TreeSearch::HitSet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hits)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR),G__defined_typename("Hset_t"),-1,1,"hits=",0,"Hits associated with a pattern");
   G__memvar_setup((void*)((long)(&p->plane_pattern)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"plane_pattern=",0,"Bit pattern of plane numbers occupied by hits");
   G__memvar_setup((void*)((long)(&p->nplanes)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nplanes=",0,"number of active planes");
   G__memvar_setup((void*)((long)(&p->used)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"used=",0,"Pattern has been assigned to a road");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::NodeDescriptor */
static void G__setup_memvarTreeSearchcLcLNodeDescriptor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor));
   { TreeSearch::NodeDescriptor *p; p=(TreeSearch::NodeDescriptor*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->link)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLink),-1,-1,1,"link=",0,"Linked-list node pointing to a base pattern");
   G__memvar_setup((void*)((long)(&p->parent)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPattern),-1,-1,1,"parent=",0,"Parent node");
   G__memvar_setup((void*)((long)(&p->shift)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"shift=",0,"Shift of the base pattern to its actual position");
   G__memvar_setup((void*)((long)(&p->mirrored)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"mirrored=",0,"Pattern is mirrored");
   G__memvar_setup((void*)((long)(&p->depth)-(long)(p)),98,0,0,-1,G__defined_typename("UChar_t"),-1,1,"depth=",0,"Current recursion depth");
   }
   G__tag_memvar_reset();
}


   /* pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> */
static void G__setup_memvarpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR));
   { pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> *p; p=(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet),-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::TreeWalk */
static void G__setup_memvarTreeSearchcLcLTreeWalk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk));
   { TreeSearch::TreeWalk *p; p=(TreeSearch::TreeWalk*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNlevels=",0,"Number of levels in tree");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Bits */
static void G__setup_memvarTreeSearchcLcLBits(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits));
   { TreeSearch::Bits *p; p=(TreeSearch::Bits*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::PatternTree */
static void G__setup_memvarTreeSearchcLcLPatternTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   { TreeSearch::PatternTree *p; p=(TreeSearch::PatternTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t),-1,-1,4,"fParameters=",0,"Tree parameters (levels, width, depth)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fParamOK=",0,"Flag: Parameters are tested valid");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR),G__defined_typename("vector<Pattern>"),-1,4,"fPatterns=",0,"Array of all patterns");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR),G__defined_typename("vector<Link>"),-1,4,"fLinks=",0,"Array of all links");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fBits=",0,"Array of all pattern bits");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("vpsz_t"),-1,4,"fNpat=",0,"Current pattern count ");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("vlsz_t"),-1,4,"fNlnk=",0,"Current link count");
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("vsiz_t"),-1,4,"fNbit=",0,"Current bit count");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Hitpattern */
static void G__setup_memvarTreeSearchcLcLHitpattern(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   { TreeSearch::Hitpattern *p; p=(TreeSearch::Hitpattern*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNlevels=",0,"Number of levels in the pattern tree ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fNplanes=",0,"Number of wire planes contained in the pattern");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fScale=",0,"1/(bin resolution) = 2^(fNlevels-1)/width (1/m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBinWidth=",0,"1/fScale (meters per bin)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fOffset=",0,"Offset of zero hit position wrt zero det coord (m)");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits),-1,-1,2,"fPattern=",0,"[fNplanes] pattern at all fNlevels resolutions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Hit*> >"),-1,2,"fHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<UInt_t>"),-1,2,"fHitList=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fMaxhitBin=",0,"Maximum depth of hit array per bin");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::TreeParam_t */
static void G__setup_memvarTreeSearchcLcLTreeParam_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t));
   { TreeSearch::TreeParam_t *p; p=(TreeSearch::TreeParam_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fMaxdepth=",0,"Depth of tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fNormalized=",0,"maxslope and zpos are normalized");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fWidth=",0,"Physical detector width (needed in Hitpattern)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxslope=",0,"Max slope (dx/dz) of tracks");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fZpos=",0,"z-positions of pattern planes");
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::PatternGenerator */
static void G__setup_memvarTreeSearchcLcLPatternGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator));
   { TreeSearch::PatternGenerator *p; p=(TreeSearch::PatternGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNlevels=",0,"Number of levels of the tree (0-nlevels-1)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNplanes=",0,"Number of hitpattern planes");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMaxSlope=",0,"Max allowed slope, normalized units (0-1)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fZ=",0,"z positions of planes, normalized (0-1)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR),G__defined_typename("vector<HashNode>"),-1,4,"fHashTable=",0,"Hashtab for indexing patterns during build");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t),-1,-1,4,"fStats=",0,"Tree statistics");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::PatternGenerator::Statistics_t */
static void G__setup_memvarTreeSearchcLcLPatternGeneratorcLcLStatistics_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t));
   { TreeSearch::PatternGenerator::Statistics_t *p; p=(TreeSearch::PatternGenerator::Statistics_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nPatterns)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nPatterns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nLinks)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nLinks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nBytes)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nBytes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxChildListLength)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"MaxChildListLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nHashBytes)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"nHashBytes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nAllPatterns)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"nAllPatterns=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->BuildTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"BuildTime=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Road::Point */
static void G__setup_memvarTreeSearchcLcLRoadcLcLPoint(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint));
   { TreeSearch::Road::Point *p; p=(TreeSearch::Road::Point*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"x=",0,"Selected x coordinates");
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"z=",0,"z coordinate");
   G__memvar_setup((void*)((long)(&p->hit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit),-1,-1,1,"hit=",0,"Associated hit (stored in WirePlane)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::Road::Corners */
static void G__setup_memvarTreeSearchcLcLRoadcLcLCorners(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners));
   { TreeSearch::Road::Corners *p; p=(TreeSearch::Road::Corners*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXLL=",0,"Lower left corner x coord");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXLR=",0,"Lower right corner x coord");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZL=",0,"Lower edge z coord");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXUL=",0,"Upper left corner x coord");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fXUR=",0,"Upper right corner x coord");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZU=",0,"Upper edge z coord");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TreeSearch::BigBite */
static void G__setup_memvarTreeSearchcLcLBigBite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite));
   { TreeSearch::BigBite *p; p=(TreeSearch::BigBite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaHe3SpinModule */
static void G__setup_memvarTHaHe3SpinModule(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule));
   { THaHe3SpinModule *p; p=(THaHe3SpinModule*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),-1,-2,1,G__FastAllocString(2048).Format("kAntiPara=%lldLL",(long long)THaHe3SpinModule::kAntiPara).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),-1,-2,1,G__FastAllocString(2048).Format("kUnknown=%lldLL",(long long)THaHe3SpinModule::kUnknown).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),-1,-2,1,G__FastAllocString(2048).Format("kPara=%lldLL",(long long)THaHe3SpinModule::kPara).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),-1,-2,1,G__FastAllocString(2048).Format("kSpinError=%lldLL",(long long)THaHe3SpinModule::kSpinError).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin),G__defined_typename("EHe3Spin"),-1,2,"fSpinState=",0,"-1 = Spin AntiParallel to Holding Field; 0 = Undetermined ; 1 = Spin Parallel to Field.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fSpinStateValid=",0,"Whether the spin state specified is valid");
   }
   G__tag_memvar_reset();
}


   /* THaHe3Target */
static void G__setup_memvarTHaHe3Target(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target));
   { THaHe3Target *p; p=(THaHe3Target*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR),G__defined_typename("vector<THaHe3SpinModule*>"),-1,2,"fSpinModule=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaADCHe3Spin */
static void G__setup_memvarTHaADCHe3Spin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin));
   { THaADCHe3Spin *p; p=(THaADCHe3Spin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fADCRawUp=",0,"ADC raw data for spin up channel");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fADCRawDown=",0,"ADC raw data for spin down channel");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound),-1,-1,2,"fLogic1Window=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound),-1,-1,2,"fLogic0Window=",0,"cut windows");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t),-1,-1,2,"fSpinUpChan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t),-1,-1,2,"fSpinDownChan=",0,"ADC Channels");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPermInvalidADC=",0,"Max permissible count of continuous events, which do not contain target signal ADC reading.");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"DEFAULT_PERM_INVALID_ADC=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMissingADCCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaADCHe3Spin::ADCStateBound */
static void G__setup_memvarTHaADCHe3SpincLcLADCStateBound(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound));
   { THaADCHe3Spin::ADCStateBound *p; p=(THaADCHe3Spin::ADCStateBound*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->UpBound)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"UpBound=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LowBound)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"LowBound=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* THaADCHe3Spin::ChanDef_t */
static void G__setup_memvarTHaADCHe3SpincLcLChanDef_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t));
   { THaADCHe3Spin::ChanDef_t *p; p=(THaADCHe3Spin::ChanDef_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->roc)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"roc=",0,"ROC to read out");
   G__memvar_setup((void*)((long)(&p->slot)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"slot=",0,"Slot of module");
   G__memvar_setup((void*)((long)(&p->chan)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"chan=",0,"Channel within module");
   }
   G__tag_memvar_reset();
}


   /* THaBitHe3Spin */
static void G__setup_memvarTHaBitHe3Spin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin));
   { THaBitHe3Spin *p; p=(THaBitHe3Spin*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRawWord=",0,"raw data word");
   G__memvar_setup((void*)G__PVOID,104,0,1,-1,G__defined_typename("UInt_t"),-2,2,"NULL_RAW_WORD=4294967295ULL",0,"raw data word");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fROC=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSpinWordHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSpinWordOffSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fRawWordConverter=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSpinUpMask=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fSpinDownMask=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPermInvalidEvt=",0,"Max permissible count of continuous events, which do not contain target signal ADC reading.");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"DEFAULT_PERM_INVALID_EVT=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fMissingEvtCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BigBiteDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBigBiteDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTHaOptics(void) {
   /* THaOptics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics));
   G__memfunc_setup("THaOptics",879,G__BigBiteDict_306_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaSpectrometer' - 0 - pspec u 'TString' - 0 '\"\"' strBeamDetectorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,G__BigBiteDict_306_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,G__BigBiteDict_306_0_3, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"U 'THaTrack' - 0 - track u 'TVector3' - 0 - beampos "
"u 'TVector3' - 0 - beamdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,G__BigBiteDict_306_0_4, 105, -1, G__defined_typename("Int_t"), 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - trackX d - 'Double_t' 0 - trackY "
"d - 'Double_t' 0 - trackTheta d - 'Double_t' 0 - trackPhi "
"u 'TVector3' - 0 - beamPos u 'TVector3' - 0 - beamDir "
"u 'TVector3' - 1 - P u 'TVector3' - 1 - Vertex "
"d - 'Double_t' 1 - TargetX d - 'Double_t' 1 - TargetY "
"d - 'Double_t' 1 - TargetTheta d - 'Double_t' 1 - TargetPhi "
"d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CrossingLineLine2D",1742,G__BigBiteDict_306_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector2), -1, 0, 4, 1, 1, 0, 
"u 'TVector2' - 0 - o1 u 'TVector2' - 0 - d1 "
"u 'TVector2' - 0 - o2 u 'TVector2' - 0 - d2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CrossingSurfLine3D",1767,G__BigBiteDict_306_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector3), -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 0 - OSurf u 'TVector3' - 0 - NSurf "
"u 'TVector3' - 0 - OLine u 'TVector3' - 0 - DLine", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPcentral",1113,G__BigBiteDict_306_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollDist",1086,G__BigBiteDict_306_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrent",1027,G__BigBiteDict_306_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamName",1058,G__BigBiteDict_306_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakePrefix",1004,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindModuleNoCheck",1666,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObject), -1, 0, 2, 1, 2, 0, 
"C - - 10 - name C - - 10 - classname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadRunDatabase",1478,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ZeroOrderCorrection",1972,G__BigBiteDict_306_0_15, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - Th d - 'Double_t' 1 - Ph "
"d - 'Double_t' 1 - P d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ApplyCorrection",1566,G__BigBiteDict_306_0_16, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 1 - Th d - 'Double_t' 1 - Ph "
"d - 'Double_t' 1 - P d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_306_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOptics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_306_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_306_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOptics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_306_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOptics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_306_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_306_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_306_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_306_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_306_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaOptics", 1005, G__BigBiteDict_306_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBigBite(void) {
   /* THaBigBite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite));
   G__memfunc_setup("THaBigBite",915,G__BigBiteDict_307_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBite), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackCalc",872,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MountOptics",1157,G__BigBiteDict_307_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'THaOptics' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetOptics",914,G__BigBiteDict_307_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DebugPort",908,G__BigBiteDict_307_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_307_0_9, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBigBite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_307_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_307_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBigBite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_307_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBigBite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_307_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_307_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_307_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBigBite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_307_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_307_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBigBite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaBigBite", 1041, G__BigBiteDict_307_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearch(void) {
   /* TreeSearch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearch));
   G__memfunc_setup("operator++",962,G__BigBiteDict_308_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType), -1, 1, 1, 1, 1, 0, "i 'TreeSearch::EProjType' - 1 - e", (char*)NULL, (void*) G__func2void( (TreeSearch::EProjType& (*)(TreeSearch::EProjType&))(&TreeSearch::operator++) ), 0);
   G__memfunc_setup("operator++",962,G__BigBiteDict_308_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType), -1, 0, 2, 1, 1, 1, 
"i 'TreeSearch::EProjType' - 1 - e i - - 0 - -", (char*)NULL, (void*) G__func2void( (const TreeSearch::EProjType (*)(TreeSearch::EProjType&, int))(&TreeSearch::operator++) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLMWDC(void) {
   /* TreeSearch::MWDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC));
   G__memfunc_setup("MWDC",299,G__BigBiteDict_309_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 '0' app", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__BigBiteDict_309_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseTrack",1106,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineTrack",887,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDebug",787,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableEventDisplay",1823,G__BigBiteDict_309_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChisqLimits",1418,G__BigBiteDict_309_0_11, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlEdoublecOdoublegR), G__defined_typename("TreeSearch::pdbl_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefTime",972,G__BigBiteDict_309_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NameToType",998,G__BigBiteDict_309_0_13, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvNum",779,G__BigBiteDict_309_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfPlanes",1492,G__BigBiteDict_309_0_15, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), G__defined_typename("vector<TreeSearch::WirePlane*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfProjections",2049,G__BigBiteDict_309_0_16, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), G__defined_typename("vector<TreeSearch::Projection*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add3dMatch",909,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 8, 
"u 'vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >' 'TreeSearch::Rvec_t' 11 - selected d - 'Double_t' 0 - matchval "
"u 'list<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > >,allocator<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > > >' 'list<std::pair<Double_t,Rvec_t> >' 1 - combos_found u 'set<TreeSearch::Road*,less<TreeSearch::Road*>,allocator<TreeSearch::Road*> >' 'TreeSearch::Rset_t' 1 - unique_found", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNearestHits",1515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 8, 
"U 'TreeSearch::WirePlane' - 0 - wp U 'THaTrack' - 10 - track "
"u 'vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >' 'TreeSearch::Rvec_t' 11 - roads", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitErrPrint",1113,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "i - 'Int_t' 0 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitTrack",792,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 2, 8, 
"u 'vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >' 'TreeSearch::Rvec_t' 11 - roads u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - coef "
"d - 'Double_t' 1 - chi2 U 'TMatrixTSym<double>' 'TMatrixDSym' 0 '0' coef_covar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchRoads",998,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 3, 1, 2, 0, 
"u 'vector<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >,allocator<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > >' 'vector<Rvec_t>' 1 - roads u 'list<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > >,allocator<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > > >' 'list<std::pair<Double_t,Rvec_t> >' 1 - combos_found "
"u 'set<TreeSearch::Road*,less<TreeSearch::Road*>,allocator<TreeSearch::Road*> >' 'TreeSearch::Rset_t' 1 - unique_found", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewTrack",799,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack), -1, 0, 2, 1, 2, 0, 
"u 'TClonesArray' - 1 - tracks u 'TreeSearch::MWDC::FitRes_t' - 11 - fit_par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PassTrackCuts",1323,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TreeSearch::MWDC::FitRes_t' - 11 - fit_par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDAQmodel",1127,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 8, "U 'THaDetMap::Module' - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadDAQresolution",1706,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 2, 8, "U 'THaDetMap::Module' - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDAQnchan",1022,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 8, "U 'THaDetMap::Module' - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_309_0_28, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::MWDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_309_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MWDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_309_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::MWDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_309_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::MWDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_309_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_309_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MWDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_309_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::MWDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_309_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MWDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_309_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::MWDC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~MWDC", 425, G__BigBiteDict_309_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaTriggerPlane(void) {
   /* THaTriggerPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane));
   G__memfunc_setup("THaTriggerPlane",1473,G__BigBiteDict_310_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEPlane",853,G__BigBiteDict_310_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEPlane",953,G__BigBiteDict_310_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitAcceptanceDx",1768,G__BigBiteDict_310_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitAcceptanceDy",1769,G__BigBiteDict_310_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitAcceptanceDz",1770,G__BigBiteDict_310_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitAcceptanceMinDt",2056,G__BigBiteDict_310_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitAcceptanceMaxDt",2058,G__BigBiteDict_310_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__BigBiteDict_310_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_310_0_12, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_310_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPartialHits",1491,G__BigBiteDict_310_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartialHits",1413,G__BigBiteDict_310_0_15, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartialHit",1298,G__BigBiteDict_310_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackHits",1197,G__BigBiteDict_310_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTracks",982,G__BigBiteDict_310_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchRatioE",1361,G__BigBiteDict_310_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchRatiodE",1461,G__BigBiteDict_310_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchRatioTrack",1793,G__BigBiteDict_310_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetApparatus",1245,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'THaApparatus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseMatchingHits",1824,G__BigBiteDict_310_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "match hits of de and E plane and save them to fHits", (void*) NULL, 1);
   G__memfunc_setup("FineMatchingHits",1605,G__BigBiteDict_310_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlane), -1, 1, 1, 1, 2, 0, "u 'THaTriggerPlane' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNumberSignStartComment",2647,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 3, 1, 2, 0, 
"E - - 0 - fp C - - 0 - buf "
"i - - 10 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"C - - 10 - name C - - 10 - desc "
"C - - 10 - enam C - - 10 - denam "
"g - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_310_0_32, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaTriggerPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_310_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_310_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaTriggerPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_310_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaTriggerPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_310_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_310_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_310_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTriggerPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_310_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_310_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTriggerPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaTriggerPlane", 1599, G__BigBiteDict_310_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBigBiteTpMwdc(void) {
   /* THaBigBiteTpMwdc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc));
   G__memfunc_setup("THaBigBiteTpMwdc",1506,G__BigBiteDict_311_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBigBiteTpMwdc), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DebugPort",908,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "Y - - 0 - p", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_311_0_3, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBigBiteTpMwdc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_311_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBiteTpMwdc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_311_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBigBiteTpMwdc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_311_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBigBiteTpMwdc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_311_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_311_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBiteTpMwdc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_311_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBigBiteTpMwdc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_311_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBigBiteTpMwdc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_311_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBigBiteTpMwdc::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaBigBiteTpMwdc", 1632, G__BigBiteDict_311_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBBDecData(void) {
   /* BBDecData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData));
   G__memfunc_setup("BBDecData",778,G__BigBiteDict_317_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_BBDecData), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"D\"' name C - - 10 '\"\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteHist",931,G__BigBiteDict_317_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__BigBiteDict_317_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineChannel",1284,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BigBiteDictLN_BBdataLoc), -1, 0, 3, 1, 2, 0, 
"U 'BBdataLoc' - 0 - - i 'THaAnalysisObject::EMode' - 0 - - "
"C - - 10 '\"automatic\"' desc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefaultMap",995,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrigBits",808,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"h - 'UInt_t' 0 - ibit U 'BBdataLoc' - 0 - dataloc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupDecData",1175,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TDatime' - 10 'NULL' runTime i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BookHist",803,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("VdcEff",558,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_317_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BBDecData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_317_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BBDecData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_317_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BBDecData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_317_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BBDecData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_317_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_317_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BBDecData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_317_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BBDecData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_317_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BBDecData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_317_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BBDecData::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BBDecData", 904, G__BigBiteDict_317_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticscLcLTOpticsDir(void) {
   /* THaOptics::TOpticsDir */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir));
   G__memfunc_setup("TOpticsDir",997,G__BigBiteDict_327_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 0, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsDir",997,G__BigBiteDict_327_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 0, 3, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys U 'THaOptics' - 0 - optics "
"u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsDir",997,G__BigBiteDict_327_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 0, 5, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys U 'THaOptics' - 0 - optics "
"d - 'Double_t' 0 '0.0' x d - 'Double_t' 0 '0.0' y "
"d - 'Double_t' 0 '0.0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsDir",997,G__BigBiteDict_327_0_4, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 0, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVector",915,G__BigBiteDict_327_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoordSys",1110,G__BigBiteDict_327_0_6, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptics",914,G__BigBiteDict_327_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaOptics), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAll",581,G__BigBiteDict_327_0_8, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 5, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys U 'THaOptics' - 0 - optics "
"d - 'Double_t' 0 '0.0' x d - 'Double_t' 0 '0.0' y "
"d - 'Double_t' 0 '0.0' z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TransCoordSys",1342,G__BigBiteDict_327_0_9, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 2, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys g - - 0 'true' dorecurent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TRCS2FCS",586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "reload this function to perform TRCS2FCS trans", (void*) NULL, 1);
   G__memfunc_setup("FCS2TRCS",586,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", "reload this function to perform FCS2TRCS trans", (void*) NULL, 1);
   G__memfunc_setup("operator+=",980,G__BigBiteDict_327_0_12, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__BigBiteDict_327_0_13, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_327_0_14, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_327_0_15, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__BigBiteDict_327_0_16, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__BigBiteDict_327_0_17, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_327_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOptics::TOpticsDir::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_327_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsDir::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_327_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOptics::TOpticsDir::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_327_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOptics::TOpticsDir::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_327_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_327_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsDir::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_327_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::TOpticsDir::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_327_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsDir::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_327_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::TOpticsDir::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOpticsDir", 1123, G__BigBiteDict_327_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticscLcLTOpticsPos(void) {
   /* THaOptics::TOpticsPos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos));
   G__memfunc_setup("TOpticsPos",1016,G__BigBiteDict_328_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 0, 3, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys U 'THaOptics' - 0 - optics "
"u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsPos",1016,G__BigBiteDict_328_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 0, 5, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys U 'THaOptics' - 0 - optics "
"d - 'Double_t' 0 '0.0' x d - 'Double_t' 0 '0.0' y "
"d - 'Double_t' 0 '0.0' z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsPos",1016,G__BigBiteDict_328_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 0, 1, 1, 1, 0, "u 'THaOptics::TOpticsPos' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TOpticsPos",1016,G__BigBiteDict_328_0_4, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 0, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransCoordSys",1342,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 1, 2, 1, 1, 0, 
"i 'THaOptics::TOpticsDir::ECoordSys' - 0 - coordsys g - - 0 'true' dorecurent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__BigBiteDict_328_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 1, 1, 1, 1, 0, "u 'THaOptics::TOpticsPos' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_328_0_7, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 1, 1, 1, 1, 0, "u 'THaOptics::TOpticsDir' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__BigBiteDict_328_0_8, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator-=",982,G__BigBiteDict_328_0_9, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos), -1, 1, 1, 1, 1, 0, "u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_328_0_10, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOptics::TOpticsPos::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_328_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsPos::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_328_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOptics::TOpticsPos::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_328_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOptics::TOpticsPos::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_328_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_328_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsPos::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_328_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::TOpticsPos::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_328_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOptics::TOpticsPos::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_328_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOptics::TOpticsPos::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TOpticsPos", 1142, G__BigBiteDict_328_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticsAGen(void) {
   /* THaOpticsAGen */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen));
   G__memfunc_setup("THaOpticsAGen",1226,G__BigBiteDict_330_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAGen), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaSpectrometer' - 0 - pspec u 'TString' - 0 '\"\"' strBeamDetectorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - trackX d - 'Double_t' 0 - trackY "
"d - 'Double_t' 0 - trackTheta d - 'Double_t' 0 - trackPhi "
"u 'TVector3' - 0 - beamPos u 'TVector3' - 0 - beamDir "
"u 'TVector3' - 1 - P u 'TVector3' - 1 - Vertex "
"d - 'Double_t' 1 - TargetX d - 'Double_t' 1 - TargetY "
"d - 'Double_t' 1 - TargetTheta d - 'Double_t' 1 - TargetPhi "
"d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_330_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOpticsAGen::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_330_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAGen::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_330_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOpticsAGen::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_330_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOpticsAGen::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_330_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_330_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAGen::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_330_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsAGen::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_330_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAGen::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_330_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsAGen::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaOpticsAGen", 1352, G__BigBiteDict_330_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticsHRS(void) {
   /* THaOpticsHRS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS));
   G__memfunc_setup("THaOpticsHRS",1116,G__BigBiteDict_331_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsHRS), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaSpectrometer' - 0 - pspec u 'TString' - 0 '\"\"' strBeamDetectorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - trackX d - 'Double_t' 0 - trackY "
"d - 'Double_t' 0 - trackTheta d - 'Double_t' 0 - trackPhi "
"u 'TVector3' - 0 - beamPos u 'TVector3' - 0 - beamDir "
"u 'TVector3' - 1 - P u 'TVector3' - 1 - Vertex "
"d - 'Double_t' 1 - TargetX d - 'Double_t' 1 - TargetY "
"d - 'Double_t' 1 - TargetTheta d - 'Double_t' 1 - TargetPhi "
"d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMatrix",1000,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"d - - 10 - x u 'vector<THaOpticsHRS::THaMatrixElement,allocator<THaOpticsHRS::THaMatrixElement> >' 'vector<THaMatrixElement>' 1 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoPoly",599,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"i - - 10 - n u 'vector<double,allocator<double> >' 'vector<double>' 11 - a "
"d - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PolyInv",721,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 2, 0, 
"d - - 10 - x1 d - - 10 - x2 "
"d - - 10 - xacc d - - 10 - y "
"i - - 10 - norder u 'vector<double,allocator<double> >' 'vector<double>' 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTargetVar",1283,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"u 'vector<THaOpticsHRS::THaMatrixElement,allocator<THaOpticsHRS::THaMatrixElement> >' 'vector<THaMatrixElement>' 11 - matrix d - - 10 - powers[][5]", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcTarget2FPLen",1473,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"u 'vector<THaOpticsHRS::THaMatrixElement,allocator<THaOpticsHRS::THaMatrixElement> >' 'vector<THaMatrixElement>' 11 - matrix d - 'Double_t' 10 - powers[][5]", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_331_0_9, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOpticsHRS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_331_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsHRS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_331_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOpticsHRS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_331_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOpticsHRS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_331_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_331_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsHRS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_331_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsHRS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_331_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsHRS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_331_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsHRS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaOpticsHRS", 1242, G__BigBiteDict_331_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticsAnalytical(void) {
   /* THaOpticsAnalytical */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical));
   G__memfunc_setup("THaOpticsAnalytical",1905,G__BigBiteDict_340_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsAnalytical), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaSpectrometer' - 0 - pspec u 'TString' - 0 '\"\"' strBeamDetectorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - trackX d - 'Double_t' 0 - trackY "
"d - 'Double_t' 0 - trackTheta d - 'Double_t' 0 - trackPhi "
"u 'TVector3' - 0 - beamPos u 'TVector3' - 0 - beamDir "
"u 'TVector3' - 1 - P u 'TVector3' - 1 - Vertex "
"d - 'Double_t' 1 - TargetX d - 'Double_t' 1 - TargetY "
"d - 'Double_t' 1 - TargetTheta d - 'Double_t' 1 - TargetPhi "
"d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalxA",457,G__BigBiteDict_340_0_3, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 - xB d - 'Double_t' 0 - zB "
"d - 'Double_t' 0 - TanF d - 'Double_t' 0 - xx "
"d - 'Double_t' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalR",354,G__BigBiteDict_340_0_4, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - xA d - 'Double_t' 0 - xB "
"d - 'Double_t' 0 - zB d - 'Double_t' 0 - TanF "
"d - 'Double_t' 0 - xx d - 'Double_t' 0 - zz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRCentral",1095,G__BigBiteDict_340_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CSqrt",493,G__BigBiteDict_340_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TComplex), -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) G__func2void( (TComplex (*)(Double_t))(&THaOpticsAnalytical::CSqrt) ), 0);
   G__memfunc_setup("CSqrt",493,G__BigBiteDict_340_0_7, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TComplex), -1, 0, 1, 3, 1, 0, "u 'TComplex' - 0 - x", (char*)NULL, (void*) G__func2void( (TComplex (*)(TComplex))(&THaOpticsAnalytical::CSqrt) ), 0);
   G__memfunc_setup("Power",525,G__BigBiteDict_340_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t))(&THaOpticsAnalytical::Power) ), 0);
   G__memfunc_setup("Power",525,G__BigBiteDict_340_0_9, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TComplex), -1, 0, 2, 3, 1, 0, 
"u 'TComplex' - 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) G__func2void( (TComplex (*)(TComplex, Double_t))(&THaOpticsAnalytical::Power) ), 0);
   G__memfunc_setup("Complex",728,G__BigBiteDict_340_0_10, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TComplex), -1, 0, 2, 3, 1, 0, 
"d - 'Double_t' 0 - re d - 'Double_t' 0 - im", (char*)NULL, (void*) G__func2void( (TComplex (*)(Double_t, Double_t))(&THaOpticsAnalytical::Complex) ), 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMagneticFieldFrontShift",2611,G__BigBiteDict_340_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMagneticFieldRearSlopeAngle",2976,G__BigBiteDict_340_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMagneticFieldTopCrossing",2727,G__BigBiteDict_340_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurveRadiusOfCentralMomentum",3165,G__BigBiteDict_340_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagneticFieldFrontShift",2623,G__BigBiteDict_340_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagneticFieldRearSlopeAngle",2988,G__BigBiteDict_340_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMagneticFieldTopCrossing",2739,G__BigBiteDict_340_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCurveRadiusOfCentralMomentum",3177,G__BigBiteDict_340_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fitter",622,G__BigBiteDict_340_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - sInputFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_340_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOpticsAnalytical::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_340_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAnalytical::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_340_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOpticsAnalytical::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_340_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOpticsAnalytical::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_340_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_340_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAnalytical::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_340_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsAnalytical::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_340_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsAnalytical::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_340_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsAnalytical::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaOpticsAnalytical", 2031, G__BigBiteDict_340_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaOpticsNoFeild(void) {
   /* THaOpticsNoFeild */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild));
   G__memfunc_setup("THaOpticsNoFeild",1552,G__BigBiteDict_341_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaOpticsNoFeild), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaSpectrometer' - 0 - pspec u 'TString' - 0 '\"\"' strBeamDetectorName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ApplyOptics",1144,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 13, 1, 1, 0, 
"d - 'Double_t' 0 - trackX d - 'Double_t' 0 - trackY "
"d - 'Double_t' 0 - trackTheta d - 'Double_t' 0 - trackPhi "
"u 'TVector3' - 0 - beamPos u 'TVector3' - 0 - beamDir "
"u 'TVector3' - 1 - P u 'TVector3' - 1 - Vertex "
"d - 'Double_t' 1 - TargetX d - 'Double_t' 1 - TargetY "
"d - 'Double_t' 1 - TargetTheta d - 'Double_t' 1 - TargetPhi "
"d - 'Double_t' 1 - PathLen", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_341_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaOpticsNoFeild::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_341_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsNoFeild::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_341_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaOpticsNoFeild::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_341_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaOpticsNoFeild::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_341_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_341_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsNoFeild::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_341_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsNoFeild::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_341_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaOpticsNoFeild::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_341_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaOpticsNoFeild::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaOpticsNoFeild", 1678, G__BigBiteDict_341_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaScintPlane(void) {
   /* THaScintPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane));
   G__memfunc_setup("THaScintPlane",1262,G__BigBiteDict_344_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaDetectorBase' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaScintPlane",1262,G__BigBiteDict_344_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitOutput",1061,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaOutput' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,G__BigBiteDict_344_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,G__BigBiteDict_344_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTracking",1007,G__BigBiteDict_344_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPid",473,G__BigBiteDict_344_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNumberSignStartComment",2647,G__BigBiteDict_344_0_10, 67, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - fp C - - 0 - buf "
"i - - 10 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildAllBars",1169,G__BigBiteDict_344_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - trks", "original, partial hits etc.", (void*) NULL, 0);
   G__memfunc_setup("BuildCompleteBars",1713,G__BigBiteDict_344_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - trks", "only complete hits", (void*) NULL, 0);
   G__memfunc_setup("GetNBars",758,G__BigBiteDict_344_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__BigBiteDict_344_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefHits",1059,G__BigBiteDict_344_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNLtHits",966,G__BigBiteDict_344_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRtHits",972,G__BigBiteDict_344_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNLaHits",947,G__BigBiteDict_344_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRaHits",953,G__BigBiteDict_344_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPartHits",1181,G__BigBiteDict_344_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBars",680,G__BigBiteDict_344_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBar",565,G__BigBiteDict_344_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_344_0_23, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_344_0_24, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHits",981,G__BigBiteDict_344_0_25, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHit",866,G__BigBiteDict_344_0_26, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLtHits",888,G__BigBiteDict_344_0_27, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLtHit",773,G__BigBiteDict_344_0_28, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRtHits",894,G__BigBiteDict_344_0_29, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRtHit",779,G__BigBiteDict_344_0_30, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLaHits",869,G__BigBiteDict_344_0_31, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLaHit",754,G__BigBiteDict_344_0_32, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRaHits",875,G__BigBiteDict_344_0_33, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRaHit",760,G__BigBiteDict_344_0_34, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarHitT",942,G__BigBiteDict_344_0_35, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 3, 1, 1, 9, 
"c - - 10 - side U 'THaScintBar' - 50 - ptr "
"i - - 10 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarHitA",923,G__BigBiteDict_344_0_36, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 3, 1, 1, 9, 
"c - - 10 - side U 'THaScintBar' - 50 - ptr "
"i - - 10 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefCh",822,G__BigBiteDict_344_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_344_0_38, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_344_0_39, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreRefChOkay",1140,G__BigBiteDict_344_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartHits",1103,G__BigBiteDict_344_0_41, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartHit",988,G__BigBiteDict_344_0_42, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value i - 'Int_t' 10 - maxval "
"I - - 0 - first I - - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TimeWalkCorrection",1846,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"U 'THaScintPMT' - 0 - pmt d - 'Double_t' 0 - ADC "
"d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 1, 1, 1, 2, 0, "u 'THaScintPlane' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_344_0_51, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaScintPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_344_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_344_0_53, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaScintPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_344_0_54, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaScintPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_344_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_344_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_344_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_344_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_344_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaScintPlane", 1388, G__BigBiteDict_344_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaScintPMT(void) {
   /* THaScintPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT));
   G__memfunc_setup("THaScintPMT",1007,G__BigBiteDict_345_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 12, 1, 1, 0, 
"d - 'Double_t' 0 '1.0' gain i - 'Int_t' 0 '0' ped "
"d - 'Double_t' 0 '1.0' res d - 'Double_t' 0 '0.0' off "
"d - 'Double_t' 0 '0.0' walk U 'THaScintBar' - 0 '0' bar "
"i - 'Int_t' 0 '0' barnum i - 'Int_t' 0 '0' side "
"i - 'Int_t' 0 '0' lowlim i - 'Int_t' 0 '65536' uplim "
"d - 'Double_t' 0 '0' wraparound d - 'Double_t' 0 '-0.5' wexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScintBar",1078,G__BigBiteDict_345_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGain",683,G__BigBiteDict_345_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - gain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPed",581,G__BigBiteDict_345_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCRes",817,G__BigBiteDict_345_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOffset",999,G__BigBiteDict_345_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - off", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeWalk",1098,G__BigBiteDict_345_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - walk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeWExp",1087,G__BigBiteDict_345_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - wexp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScintBar",1090,G__BigBiteDict_345_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaScintBar' - 0 - bar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum",881,G__BigBiteDict_345_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSide",689,G__BigBiteDict_345_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - side", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawLowLim",1194,G__BigBiteDict_345_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - lowlim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawUpLim",1085,G__BigBiteDict_345_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - uplim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawWrapAround",1625,G__BigBiteDict_345_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - wraparound", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__BigBiteDict_345_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPed",569,G__BigBiteDict_345_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCRes",805,G__BigBiteDict_345_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOffset",987,G__BigBiteDict_345_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeWalk",1086,G__BigBiteDict_345_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeWExp",1075,G__BigBiteDict_345_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_345_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSide",677,G__BigBiteDict_345_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawLowLim",1182,G__BigBiteDict_345_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawUpLim",1073,G__BigBiteDict_345_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawWrapAround",1613,G__BigBiteDict_345_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_345_0_26, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaScintPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_345_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_345_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaScintPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_345_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaScintPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_345_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_345_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_345_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_345_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_345_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaScintPMT", 1007, G__BigBiteDict_345_0_38, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 1, 1, 1, 0, "u 'THaScintPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaScintPMT", 1133, G__BigBiteDict_345_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_345_0_40, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 1, 1, 1, 1, 0, "u 'THaScintPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaScintHit(void) {
   /* THaScintHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit));
   G__memfunc_setup("THaScintHit",1059,G__BigBiteDict_346_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 7, 1, 1, 0, 
"U 'THaScintBar' - 10 - bar i - 'Int_t' 0 - planenum "
"i - 'Int_t' 0 - barnum d - 'Double_t' 0 - ypos "
"d - 'Double_t' 0 - Tof d - 'Double_t' 0 - HitEnergy "
"d - 'Double_t' 0 - Tdiff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaScintHit",1059,G__BigBiteDict_346_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 1, 1, 1, 0, "U 'THaScintHit' - 10 '0' pScHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaScintHit",1059,G__BigBiteDict_346_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 2, 1, 1, 0, 
"U 'THaScintHit' - 10 - pScHit i - 'Int_t' 0 - clusternum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaScintHit",1059,G__BigBiteDict_346_0_4, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 3, 1, 1, 0, 
"U 'THaScintHit' - 10 - pScHit i - 'Int_t' 0 - planenum "
"i - 'Int_t' 0 - barnum_nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScintBar",1078,G__BigBiteDict_346_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneNum",1088,G__BigBiteDict_346_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_346_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum_nd",1174,G__BigBiteDict_346_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitXPos",975,G__BigBiteDict_346_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitYPos",976,G__BigBiteDict_346_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitZPos",977,G__BigBiteDict_346_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTOF",814,G__BigBiteDict_346_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitEdep",963,G__BigBiteDict_346_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTdiff",1074,G__BigBiteDict_346_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrder",796,G__BigBiteDict_346_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClusterNum",1330,G__BigBiteDict_346_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScintBar",1090,G__BigBiteDict_346_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaScintBar' - 0 - bar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlaneNum",1100,G__BigBiteDict_346_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - planenum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum",881,G__BigBiteDict_346_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum_nd",1186,G__BigBiteDict_346_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum_nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYHitPos",988,G__BigBiteDict_346_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - ypos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitTOF",826,G__BigBiteDict_346_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitEdep",975,G__BigBiteDict_346_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - HitEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitTdiff",1086,G__BigBiteDict_346_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Tdiff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitOrder",1101,G__BigBiteDict_346_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - order", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetClusterNum",1342,G__BigBiteDict_346_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - clusternum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddEnergy",883,G__BigBiteDict_346_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - HitEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyScintHit",1217,G__BigBiteDict_346_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaScintHit' - 10 - pScHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_346_0_32, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaScintHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_346_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_346_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaScintHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_346_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaScintHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_346_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_346_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_346_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_346_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_346_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaScintHit", 1059, G__BigBiteDict_346_0_44, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 1, 1, 1, 0, "u 'THaScintHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaScintHit", 1185, G__BigBiteDict_346_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_346_0_46, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 1, 1, 1, 1, 0, "u 'THaScintHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaScintBar(void) {
   /* THaScintBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar));
   G__memfunc_setup("THaScintBar",1043,G__BigBiteDict_347_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 25, 1, 1, 0, 
"d - 'Double_t' 0 '0.' x d - 'Double_t' 0 '0.' y "
"d - 'Double_t' 0 '0.' z d - 'Double_t' 0 '1.' wx "
"d - 'Double_t' 0 '1.' wy d - 'Double_t' 0 '1.' wz "
"d - 'Double_t' 0 '3.e8' c d - 'Double_t' 0 '0.' att "
"d - 'Double_t' 0 '1.' lgain i - 'Int_t' 0 '0' lped "
"d - 'Double_t' 0 '1.' lres d - 'Double_t' 0 '0.' loff "
"d - 'Double_t' 0 '0.' lwalk d - 'Double_t' 0 '1.' rgain "
"i - 'Int_t' 0 '0' rped d - 'Double_t' 0 '1.' rres "
"d - 'Double_t' 0 '0.' roff d - 'Double_t' 0 '0.' rwalk "
"i - 'Int_t' 0 '0' barnum i - 'Int_t' 0 '0' llowlim "
"i - 'Int_t' 0 '65535' luplim d - 'Double_t' 0 '0.' lwrapa "
"i - 'Int_t' 0 '0' rlowlim i - 'Int_t' 0 '65535' ruplim "
"d - 'Double_t' 0 '0.' rwrapa", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXPos",694,G__BigBiteDict_347_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYPos",695,G__BigBiteDict_347_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZPos",696,G__BigBiteDict_347_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXWidth",900,G__BigBiteDict_347_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYWidth",901,G__BigBiteDict_347_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZWidth",902,G__BigBiteDict_347_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetC",367,G__BigBiteDict_347_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAtt",597,G__BigBiteDict_347_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarType",995,G__BigBiteDict_347_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i 'THaScintBar::EBarType' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum",881,G__BigBiteDict_347_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum_nd",1186,G__BigBiteDict_347_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum_nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXPos",682,G__BigBiteDict_347_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYPos",683,G__BigBiteDict_347_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZPos",684,G__BigBiteDict_347_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXWidth",888,G__BigBiteDict_347_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYWidth",889,G__BigBiteDict_347_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZWidth",890,G__BigBiteDict_347_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetC",355,G__BigBiteDict_347_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtt",585,G__BigBiteDict_347_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLPMT",605,G__BigBiteDict_347_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRPMT",611,G__BigBiteDict_347_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarType",983,G__BigBiteDict_347_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_347_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum_nd",1174,G__BigBiteDict_347_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_347_0_26, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaScintBar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_347_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintBar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_347_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaScintBar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_347_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaScintBar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_347_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_347_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintBar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_347_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintBar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_347_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintBar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_347_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintBar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaScintBar", 1043, G__BigBiteDict_347_0_38, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 1, 1, 1, 0, "u 'THaScintBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaScintBar", 1169, G__BigBiteDict_347_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_347_0_40, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 1, 1, 1, 1, 0, "u 'THaScintBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaTriggerPlaneHit(void) {
   /* THaTriggerPlaneHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit));
   G__memfunc_setup("THaTriggerPlaneHit",1766,G__BigBiteDict_348_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit), -1, 0, 2, 1, 1, 0, 
"U 'THaScintHit' - 10 - HitOnE U 'THaScintHit' - 10 - HitOndE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEHit",650,G__BigBiteDict_348_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEHit",750,G__BigBiteDict_348_0_3, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFullHit",884,G__BigBiteDict_348_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPartialHit",1198,G__BigBiteDict_348_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Status",644,G__BigBiteDict_348_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitXPos",975,G__BigBiteDict_348_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitYPos",976,G__BigBiteDict_348_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitZPos",977,G__BigBiteDict_348_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTOF",814,G__BigBiteDict_348_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondaryHitXPos",1911,G__BigBiteDict_348_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondaryHitYPos",1912,G__BigBiteDict_348_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSecondaryHitZPos",1913,G__BigBiteDict_348_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__BigBiteDict_348_0_14, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__BigBiteDict_348_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__BigBiteDict_348_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitEdep",963,G__BigBiteDict_348_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitdEdep",1063,G__BigBiteDict_348_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTotalEdep",1479,G__BigBiteDict_348_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_348_0_20, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaTriggerPlaneHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_348_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlaneHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_348_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaTriggerPlaneHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_348_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaTriggerPlaneHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_348_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_348_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlaneHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_348_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTriggerPlaneHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_348_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTriggerPlaneHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_348_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTriggerPlaneHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaTriggerPlaneHit", 1766, G__BigBiteDict_348_0_32, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit), -1, 0, 1, 1, 1, 0, "u 'THaTriggerPlaneHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaTriggerPlaneHit", 1892, G__BigBiteDict_348_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_348_0_34, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaTriggerPlaneHit), -1, 1, 1, 1, 1, 0, "u 'THaTriggerPlaneHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaAdcHit(void) {
   /* THaAdcHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit));
   G__memfunc_setup("THaAdcHit",810,G__BigBiteDict_352_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 2, 1, 1, 0, 
"U 'THaScintPMT' - 0 'NULL' pmt i - 'Int_t' 0 '0' rawampl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMT",529,G__BigBiteDict_352_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawAmpl",980,G__BigBiteDict_352_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmplPedCor",1255,G__BigBiteDict_352_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmpl",682,G__BigBiteDict_352_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_352_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSide",677,G__BigBiteDict_352_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectHit",1015,G__BigBiteDict_352_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawAmpl",992,G__BigBiteDict_352_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rawampl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum",881,G__BigBiteDict_352_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSide",689,G__BigBiteDict_352_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - side", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_352_0_15, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaAdcHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_352_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaAdcHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_352_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaAdcHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_352_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaAdcHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_352_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_352_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaAdcHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_352_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaAdcHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_352_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaAdcHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_352_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaAdcHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaAdcHit", 810, G__BigBiteDict_352_0_27, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 1, 1, 1, 0, "u 'THaAdcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaAdcHit", 936, G__BigBiteDict_352_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_352_0_29, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 1, 1, 1, 1, 0, "u 'THaAdcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaTdcHit(void) {
   /* THaTdcHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit));
   G__memfunc_setup("THaTdcHit",829,G__BigBiteDict_353_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 3, 1, 1, 0, 
"U 'THaScintPMT' - 10 'NULL' pmt i - 'Int_t' 0 '0' rawtime "
"d - 'Double_t' 0 '0' ext_offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMT",529,G__BigBiteDict_353_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTime",985,G__BigBiteDict_353_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__BigBiteDict_353_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_353_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSide",677,G__BigBiteDict_353_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateTime",1010,G__BigBiteDict_353_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.' ext_offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawTime",997,G__BigBiteDict_353_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rawtime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' s", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_353_0_12, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaTdcHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_353_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTdcHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_353_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaTdcHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_353_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaTdcHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_353_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_353_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTdcHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_353_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTdcHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_353_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTdcHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_353_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTdcHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaTdcHit", 829, G__BigBiteDict_353_0_24, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 0, "u 'THaTdcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaTdcHit", 955, G__BigBiteDict_353_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_353_0_26, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 1, 1, 1, 1, 0, "u 'THaTdcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaPartialHit(void) {
   /* THaPartialHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit));
   G__memfunc_setup("THaPartialHit",1263,G__BigBiteDict_354_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit), -1, 0, 11, 1, 1, 0, 
"U 'THaScintBar' - 0 'NULL' bar i - 'Int_t' 0 '-7' barnum "
"i - 'Int_t' 0 '0' CaseNum d - 'Double_t' 0 '0.0' lt "
"d - 'Double_t' 0 '0.0' lt_raw d - 'Double_t' 0 '0.0' rt "
"d - 'Double_t' 0 '0.0' rt_raw d - 'Double_t' 0 '0.0' la "
"d - 'Double_t' 0 '0.0' la_raw d - 'Double_t' 0 '0.0' ra "
"d - 'Double_t' 0 '0.0' ra_raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScintBar",1078,G__BigBiteDict_354_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarNum",869,G__BigBiteDict_354_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCaseNum",972,G__BigBiteDict_354_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLt",480,G__BigBiteDict_354_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRt",486,G__BigBiteDict_354_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLa",461,G__BigBiteDict_354_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRa",467,G__BigBiteDict_354_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLt_raw",905,G__BigBiteDict_354_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRt_raw",911,G__BigBiteDict_354_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLa_raw",886,G__BigBiteDict_354_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRa_raw",892,G__BigBiteDict_354_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScintBar",1090,G__BigBiteDict_354_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaScintBar' - 0 - bar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBarNum",881,G__BigBiteDict_354_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - barnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCaseNum",984,G__BigBiteDict_354_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLt",492,G__BigBiteDict_354_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRt",498,G__BigBiteDict_354_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLa",473,G__BigBiteDict_354_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRa",479,G__BigBiteDict_354_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLt_raw",917,G__BigBiteDict_354_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRt_raw",923,G__BigBiteDict_354_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLa_raw",898,G__BigBiteDict_354_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRa_raw",904,G__BigBiteDict_354_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_354_0_24, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaPartialHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_354_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaPartialHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_354_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaPartialHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_354_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaPartialHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_354_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_354_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaPartialHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_354_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaPartialHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_354_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaPartialHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_354_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaPartialHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaPartialHit", 1263, G__BigBiteDict_354_0_36, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit), -1, 0, 1, 1, 1, 0, "u 'THaPartialHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaPartialHit", 1389, G__BigBiteDict_354_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_354_0_38, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit), -1, 1, 1, 1, 1, 0, "u 'THaPartialHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaMWDCPlane(void) {
   /* THaMWDCPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane));
   G__memfunc_setup("THaMWDCPlane",1048,G__BigBiteDict_358_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"\"' name C - - 10 '\"\"' description "
"U 'THaDetectorBase' - 0 'NULL' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", "Raw data -> hits", (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNWires",888,G__BigBiteDict_358_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWires",810,G__BigBiteDict_358_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWire",695,G__BigBiteDict_358_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCWire), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__BigBiteDict_358_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_358_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_358_0_9, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNWiresHit",1181,G__BigBiteDict_358_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefCh",822,G__BigBiteDict_358_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_358_0_12, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_358_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCWire), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefHits",1059,G__BigBiteDict_358_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHits",981,G__BigBiteDict_358_0_15, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHit",866,G__BigBiteDict_358_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefHit",944,G__BigBiteDict_358_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__BigBiteDict_358_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXWidth",888,G__BigBiteDict_358_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYWidth",889,G__BigBiteDict_358_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWBeg",645,G__BigBiteDict_358_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWSpac",766,G__BigBiteDict_358_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellHeight",1273,G__BigBiteDict_358_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWAngle",862,G__BigBiteDict_358_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCRes",805,G__BigBiteDict_358_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosRes",892,G__BigBiteDict_358_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftVel",1088,G__BigBiteDict_358_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMaxX",1327,G__BigBiteDict_358_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMaxY",1328,G__BigBiteDict_358_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMinX",1325,G__BigBiteDict_358_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMinY",1326,G__BigBiteDict_358_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMaxTH",1395,G__BigBiteDict_358_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMaxPH",1391,G__BigBiteDict_358_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMinTH",1393,G__BigBiteDict_358_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActAreaMinPH",1389,G__BigBiteDict_358_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXCorr",782,G__BigBiteDict_358_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYCorr",783,G__BigBiteDict_358_0_37, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaCorr",1196,G__BigBiteDict_358_0_38, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiCorr",983,G__BigBiteDict_358_0_39, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInReconstruction",1877,G__BigBiteDict_358_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneType",1202,G__BigBiteDict_358_0_41, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsXPlane",772,G__BigBiteDict_358_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsUPlane",769,G__BigBiteDict_358_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsVPlane",770,G__BigBiteDict_358_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsYPlane",773,G__BigBiteDict_358_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreRefChOkay",1140,G__BigBiteDict_358_0_46, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__BigBiteDict_358_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXWidth",900,G__BigBiteDict_358_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYWidth",901,G__BigBiteDict_358_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWBeg",657,G__BigBiteDict_358_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWSpac",778,G__BigBiteDict_358_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWAngle",874,G__BigBiteDict_358_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWAngleDeg",1146,G__BigBiteDict_358_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCRes",817,G__BigBiteDict_358_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosRes",904,G__BigBiteDict_358_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDriftVel",1100,G__BigBiteDict_358_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMaxX",1339,G__BigBiteDict_358_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMaxY",1340,G__BigBiteDict_358_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMinX",1337,G__BigBiteDict_358_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMinY",1338,G__BigBiteDict_358_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMaxTH",1407,G__BigBiteDict_358_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMaxPH",1403,G__BigBiteDict_358_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMinTH",1405,G__BigBiteDict_358_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActAreaMinPH",1401,G__BigBiteDict_358_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXCorr",794,G__BigBiteDict_358_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYCorr",795,G__BigBiteDict_358_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaDegCorr",1480,G__BigBiteDict_358_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiDegCorr",1267,G__BigBiteDict_358_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInReconstruct",1663,G__BigBiteDict_358_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHits",708,G__BigBiteDict_358_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TClonesArray' - 0 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTTDConv",930,G__BigBiteDict_358_0_71, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTimeToDistConv), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertDriftTimeToDistance",2647,G__BigBiteDict_358_0_72, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 '0.0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XYtoPlaneCoord",1403,G__BigBiteDict_358_0_73, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYCorr",871,G__BigBiteDict_358_0_74, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMCHitAt",1002,G__BigBiteDict_358_0_75, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - xp d - 'Double_t' 0 - yp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDriftCuts",1445,G__BigBiteDict_358_0_76, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOptionalParameter",2055,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"C - - 0 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_358_0_83, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaMWDCPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_358_0_84, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_358_0_85, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaMWDCPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_358_0_86, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaMWDCPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_358_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_358_0_91, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_358_0_92, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_358_0_93, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_358_0_94, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaMWDCPlane", 1174, G__BigBiteDict_358_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaMWDCGroup(void) {
   /* THaMWDCGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup));
   G__memfunc_setup("THaMWDCGroup",1077,G__BigBiteDict_359_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 0, 3, 1, 1, 0, 
"u 'vector<THaMWDCHit*,allocator<THaMWDCHit*> >' 'vector<THaMWDCHit*>' 0 - H h - 'UInt_t' 0 - planebits "
"U 'TMatrixT<double>' 'TMatrixD' 0 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaMWDCGroup",1077,G__BigBiteDict_359_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 0, 4, 1, 1, 0, 
"U 'THaMWDCHit' - 2 - H i - 'Int_t' 0 - n "
"h - 'UInt_t' 0 - planebits U 'TMatrixT<double>' 'TMatrixD' 0 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaMWDCGroup",1077,G__BigBiteDict_359_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 0, 1, 1, 1, 0, "u 'THaMWDCGroup' - 1 - G", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__BigBiteDict_359_0_4, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BigBiteDict_359_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BigBiteDict_359_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__BigBiteDict_359_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi",577,G__BigBiteDict_359_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__BigBiteDict_359_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDoF",615,G__BigBiteDict_359_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2NDoF",941,G__BigBiteDict_359_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__BigBiteDict_359_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_359_0_13, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR), G__defined_typename("vector<THaMWDCHit*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_359_0_14, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneBits",1186,G__BigBiteDict_359_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLRbits",880,G__BigBiteDict_359_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConstructMatrix",1882,G__BigBiteDict_359_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2Cont",1018,G__BigBiteDict_359_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoarseChi2Cont",1623,G__BigBiteDict_359_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatusBits",1334,G__BigBiteDict_359_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOK",342,G__BigBiteDict_359_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL1Group",838,G__BigBiteDict_359_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2Group",839,G__BigBiteDict_359_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFresh",692,G__BigBiteDict_359_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCoarse",793,G__BigBiteDict_359_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFine",574,G__BigBiteDict_359_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidTrack",1185,G__BigBiteDict_359_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackNumber",1418,G__BigBiteDict_359_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track_number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi2Cont",1030,G__BigBiteDict_359_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL1Group",950,G__BigBiteDict_359_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetL2Group",951,G__BigBiteDict_359_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoCoarseTracking",1603,G__BigBiteDict_359_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoFineTracking",1384,G__BigBiteDict_359_0_33, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 '0.0' toffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSimilarTrack",1410,G__BigBiteDict_359_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'THaTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindTrack",886,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack), -1, 0, 3, 1, 2, 0, 
"i 'THaMWDCGroup::ETrackingMode' - 0 - mode D - 'Double_t' 0 - chi2cont "
"d - 'Double_t' 0 '0.0' toffset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLRDiff",714,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoLRDiffForType",1427,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaMWDCPlane::EPlaneType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransformCoordToTrack",2155,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"D - 'Double_t' 0 - coord D - 'Double_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcChiSquared",1372,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 2, 0, 
"i 'THaMWDCGroup::ETrackingMode' - 0 - mode D - 'Double_t' 0 - coords "
"u 'THaTrack' - 0 - track D - 'Double_t' 0 - chi2cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetermineValidTrack",1922,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitsChamber",1096,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHitData",1149,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitsOfType",1295,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR), G__defined_typename("vector<THaMWDCHit*>"), 0, 1, 1, 2, 0, "i 'THaMWDCPlane::EPlaneType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeneratePlaneIndex",1811,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneIndexForHit",1876,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_359_0_47, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaMWDCGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_359_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_359_0_49, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaMWDCGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_359_0_50, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaMWDCGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_359_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_359_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_359_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_359_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_359_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCGroup::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaMWDCGroup", 1203, G__BigBiteDict_359_0_59, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_359_0_60, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 1, 1, 1, 1, 0, "u 'THaMWDCGroup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaMWDCHit(void) {
   /* THaMWDCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit));
   G__memfunc_setup("THaMWDCHit",845,G__BigBiteDict_360_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHit), -1, 0, 7, 1, 1, 0, 
"U 'THaMWDCPlane' - 0 'NULL' plane U 'THaVDCWire' - 0 'NULL' wire "
"i - 'Int_t' 0 '0' rawtime d - 'Double_t' 0 '0.0' time "
"d - 'Double_t' 0 '0.0' offset d - 'Double_t' 0 '0.0' reftime "
"g - 'Bool_t' 0 'true' valid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__BigBiteDict_360_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__BigBiteDict_360_0_3, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoord",791,G__BigBiteDict_360_0_4, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '0.0' slope i 'THaMWDCHit::ELR' - 0 'kNULL' LR "
"d - 'Double_t' 0 '0.0' t0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackNumber",1418,G__BigBiteDict_360_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - tracknum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackNumber",1406,G__BigBiteDict_360_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifiedByShower",1633,G__BigBiteDict_360_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VerifiedByShowerDouble",2236,G__BigBiteDict_360_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidByShower",1503,G__BigBiteDict_360_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidByShowerDouble",2106,G__BigBiteDict_360_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerifiedByShower",1933,G__BigBiteDict_360_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isverified", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsValidByShower",1803,G__BigBiteDict_360_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - isvalid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOwnedStatus",1453,G__BigBiteDict_360_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - owned", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScintOffset",1428,G__BigBiteDict_360_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - scint_off", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLR",458,G__BigBiteDict_360_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i 'THaMWDCHit::ELR' - 0 - LR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixLR",453,G__BigBiteDict_360_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i 'THaMWDCHit::ELR' - 0 - LR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UnfixLR",680,G__BigBiteDict_360_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLR",446,G__BigBiteDict_360_0_18, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCHitcLcLELR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi2Cont",1030,G__BigBiteDict_360_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chi2cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCoarseChi2Cont",1635,G__BigBiteDict_360_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - chi2cont", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2Cont",1018,G__BigBiteDict_360_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoarseChi2Cont",1623,G__BigBiteDict_360_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDataValid",1062,G__BigBiteDict_360_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOwned",697,G__BigBiteDict_360_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLRFixed",842,G__BigBiteDict_360_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCoordValid",1187,G__BigBiteDict_360_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_360_0_27, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaMWDCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_360_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_360_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaMWDCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_360_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaMWDCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_360_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_360_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_360_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_360_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_360_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaMWDCHit", 971, G__BigBiteDict_360_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaMWDC(void) {
   /* THaMWDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC));
   G__memfunc_setup("THaMWDC",552,G__BigBiteDict_361_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDC), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseTrack",1106,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineTrack",887,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDebug",787,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EnableBenchmarks",1605,G__BigBiteDict_361_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPlanes",977,G__BigBiteDict_361_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlanes",899,G__BigBiteDict_361_0_12, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__BigBiteDict_361_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCPlane), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNGroups",1006,G__BigBiteDict_361_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroups",928,G__BigBiteDict_361_0_15, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR), G__defined_typename("vector<THaMWDCGroup*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGroup",813,G__BigBiteDict_361_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCGroup), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'THaRunBase' - 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConstructTracks",1581,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 2, 0, 
"U 'TClonesArray' - 0 'NULL' tracks i 'THaMWDC::ETrackingMode' - 0 'kCoarseTracking' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseShowerCuts",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveValidShowerData",1894,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HaveValidClusterData",2000,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUseShowerCuts",1648,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidShowerData",1806,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetValidClusterData",1912,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "g - 'Bool_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTargetData",1377,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCutInfo",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScintCorrection",1861,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_361_0_30, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaMWDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_361_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_361_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaMWDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_361_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaMWDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_361_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_361_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_361_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_361_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_361_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaMWDC", 678, G__BigBiteDict_361_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaMWDCLine(void) {
   /* THaMWDCLine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine));
   G__memfunc_setup("THaMWDCLine",944,G__BigBiteDict_393_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine), -1, 0, 4, 1, 1, 0, 
"D - 'Double_t' 0 'NULL' z D - 'Double_t' 0 'NULL' y "
"i - 'Int_t' 0 '0' npoints d - 'Double_t' 0 '0.0' t0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlope",803,G__BigBiteDict_393_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIntercept",1230,G__BigBiteDict_393_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiSquared",1289,G__BigBiteDict_393_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeOffset",1302,G__BigBiteDict_393_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__BigBiteDict_393_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_393_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaMWDCLine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_393_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCLine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_393_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaMWDCLine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_393_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaMWDCLine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_393_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_393_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCLine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_393_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCLine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_393_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaMWDCLine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_393_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaMWDCLine::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaMWDCLine", 944, G__BigBiteDict_393_0_19, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine), -1, 0, 1, 1, 1, 0, "u 'THaMWDCLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaMWDCLine", 1070, G__BigBiteDict_393_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_393_0_21, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaMWDCLine), -1, 1, 1, 1, 1, 0, "u 'THaMWDCLine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaVDCTableTTDConv(void) {
   /* THaVDCTableTTDConv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv));
   G__memfunc_setup("THaVDCTableTTDConv",1604,G__BigBiteDict_394_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaVDCTableTTDConv",1604,G__BigBiteDict_394_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCTableTTDConv), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_394_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 '0.0' tanTheta "
"D - 'Double_t' 0 '0' drift_dist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadTable",872,G__BigBiteDict_394_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftVelocity",1640,G__BigBiteDict_394_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_394_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaVDCTableTTDConv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_394_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCTableTTDConv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_394_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaVDCTableTTDConv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_394_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaVDCTableTTDConv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_394_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_394_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCTableTTDConv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_394_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCTableTTDConv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_394_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCTableTTDConv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_394_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCTableTTDConv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaVDCTableTTDConv", 1730, G__BigBiteDict_394_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaVDC2DTableTTDConv(void) {
   /* THaVDC2DTableTTDConv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv));
   G__memfunc_setup("THaVDC2DTableTTDConv",1722,G__BigBiteDict_395_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaVDC2DTableTTDConv",1722,G__BigBiteDict_395_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDC2DTableTTDConv), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_395_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 '0.0' tanTheta "
"D - 'Double_t' 0 '0' drift_dist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertDistToTime",1735,G__BigBiteDict_395_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - plane_intercept d - 'Double_t' 0 - slope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadTable",872,G__BigBiteDict_395_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTable",1013,G__BigBiteDict_395_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftVelocity",1640,G__BigBiteDict_395_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_395_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaVDC2DTableTTDConv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_395_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDC2DTableTTDConv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_395_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaVDC2DTableTTDConv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_395_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaVDC2DTableTTDConv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_395_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_395_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDC2DTableTTDConv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_395_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDC2DTableTTDConv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_395_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDC2DTableTTDConv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_395_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDC2DTableTTDConv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaVDC2DTableTTDConv", 1848, G__BigBiteDict_395_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaVDCFuncTTDConv(void) {
   /* THaVDCFuncTTDConv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv));
   G__memfunc_setup("THaVDCFuncTTDConv",1512,G__BigBiteDict_396_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaVDCFuncTTDConv",1512,G__BigBiteDict_396_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCFuncTTDConv), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - driftvelocity d - 'Double_t' 0 - c1 "
"d - 'Double_t' 0 - c2 d - 'Double_t' 0 - c3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_396_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 '0.0' tanTheta "
"D - 'Double_t' 0 '0' drift_dist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertDistToTime",1735,G__BigBiteDict_396_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 - tanTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftVelocity",1640,G__BigBiteDict_396_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_396_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaVDCFuncTTDConv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_396_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCFuncTTDConv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_396_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaVDCFuncTTDConv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_396_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaVDCFuncTTDConv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_396_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_396_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCFuncTTDConv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_396_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCFuncTTDConv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_396_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCFuncTTDConv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_396_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCFuncTTDConv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaVDCFuncTTDConv", 1638, G__BigBiteDict_396_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaVDCLinearTTDConv(void) {
   /* THaVDCLinearTTDConv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv));
   G__memfunc_setup("THaVDCLinearTTDConv",1719,G__BigBiteDict_397_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaVDCLinearTTDConv",1719,G__BigBiteDict_397_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaVDCLinearTTDConv), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - driftvelocity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_397_0_3, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 '0.0' tanTheta "
"D - 'Double_t' 0 '0' drift_dist", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertDistToTime",1735,G__BigBiteDict_397_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 - tanTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftVelocity",1640,G__BigBiteDict_397_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_397_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaVDCLinearTTDConv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_397_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCLinearTTDConv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_397_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaVDCLinearTTDConv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_397_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaVDCLinearTTDConv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_397_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_397_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCLinearTTDConv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_397_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCLinearTTDConv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_397_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaVDCLinearTTDConv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_397_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaVDCLinearTTDConv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaVDCLinearTTDConv", 1845, G__BigBiteDict_397_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBBShower(void) {
   /* THaBBShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower));
   G__memfunc_setup("THaBBShower",1017,G__BigBiteDict_398_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNclust",921,G__BigBiteDict_398_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhits",806,G__BigBiteDict_398_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__BigBiteDict_398_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BigBiteDict_398_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BigBiteDict_398_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBlocks",972,G__BigBiteDict_398_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockX",867,G__BigBiteDict_398_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockY",868,G__BigBiteDict_398_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockdX",967,G__BigBiteDict_398_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockdY",968,G__BigBiteDict_398_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockdZ",969,G__BigBiteDict_398_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlockA_c",1038,G__BigBiteDict_398_0_16, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRows",793,G__BigBiteDict_398_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNCols",767,G__BigBiteDict_398_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BlockColRowToNumber",1901,G__BigBiteDict_398_0_19, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - col i - 'Int_t' 0 - row", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClust",811,G__BigBiteDict_398_0_20, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCluster",1003,G__BigBiteDict_398_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaBBShowerCluster' - 0 - clus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveCluster",1360,G__BigBiteDict_398_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCluster",1003,G__BigBiteDict_398_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'THaBBShowerCluster' - 1 - clus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadMCHitAt",1002,G__BigBiteDict_398_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_398_0_29, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBBShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_398_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_398_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBBShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_398_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBBShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_398_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_398_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_398_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_398_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_398_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaBBShower", 1143, G__BigBiteDict_398_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBBTotalShower(void) {
   /* THaBBTotalShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower));
   G__memfunc_setup("THaBBTotalShower",1533,G__BigBiteDict_399_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaBBTotalShower",1533,G__BigBiteDict_399_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBTotalShower), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - shower_name "
"C - - 10 - preshower_name C - - 10 '\"\"' description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetE",357,G__BigBiteDict_399_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BigBiteDict_399_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BigBiteDict_399_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__BigBiteDict_399_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShower",920,G__BigBiteDict_399_0_10, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreShower",1215,G__BigBiteDict_399_0_11, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShower), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetApparatus",1245,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'THaApparatus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadMCHitAt",1002,G__BigBiteDict_399_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 4, 0, 
"C - - 10 - name C - - 10 - desc "
"C - - 10 - shnam C - - 10 - psnam "
"U 'THaApparatus' - 0 - app g - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_399_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBBTotalShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_399_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBTotalShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_399_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBBTotalShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_399_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBBTotalShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_399_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_399_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBTotalShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_399_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBTotalShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_399_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBTotalShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_399_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBTotalShower::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaBBTotalShower", 1659, G__BigBiteDict_399_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaTimingPlane(void) {
   /* THaTimingPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane));
   G__memfunc_setup("THaTimingPlane",1365,G__BigBiteDict_400_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetApparatus",1245,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'THaApparatus' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEPlane",853,G__BigBiteDict_400_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetdEPlane",953,G__BigBiteDict_400_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaTimingPlane), -1, 1, 1, 1, 2, 0, "u 'THaTimingPlane' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNumberSignStartComment",2647,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 3, 1, 2, 0, 
"E - - 0 - fp C - - 0 - buf "
"i - - 10 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Setup",529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"C - - 10 - name C - - 10 - desc "
"C - - 10 - enam C - - 10 - denam "
"g - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_400_0_14, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaTimingPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_400_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTimingPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_400_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaTimingPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_400_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaTimingPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_400_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_400_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTimingPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_400_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTimingPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_400_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaTimingPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_400_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaTimingPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaTimingPlane", 1491, G__BigBiteDict_400_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaScintPlaneDet(void) {
   /* THaScintPlaneDet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet));
   G__memfunc_setup("THaScintPlaneDet",1547,G__BigBiteDict_402_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaApparatus' - 0 '0' apparatus", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaScintPlaneDet",1547,G__BigBiteDict_402_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitOutput",1061,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaOutput' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseProcess",1340,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FineProcess",1121,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadNumberSignStartComment",2647,G__BigBiteDict_402_0_7, 67, -1, -1, 0, 3, 1, 1, 0, 
"E - - 0 - fp C - - 0 - buf "
"i - - 10 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildAllBars",1169,G__BigBiteDict_402_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - trks", "original, partial hits etc.", (void*) NULL, 0);
   G__memfunc_setup("BuildCompleteBars",1713,G__BigBiteDict_402_0_9, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - trks", "only complete hits", (void*) NULL, 0);
   G__memfunc_setup("GetNBars",758,G__BigBiteDict_402_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__BigBiteDict_402_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefHits",1059,G__BigBiteDict_402_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNLtHits",966,G__BigBiteDict_402_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRtHits",972,G__BigBiteDict_402_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNLaHits",947,G__BigBiteDict_402_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRaHits",953,G__BigBiteDict_402_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPartHits",1181,G__BigBiteDict_402_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBars",680,G__BigBiteDict_402_0_18, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBar",565,G__BigBiteDict_402_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintBar), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_402_0_20, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_402_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHits",981,G__BigBiteDict_402_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefHit",866,G__BigBiteDict_402_0_23, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLtHits",888,G__BigBiteDict_402_0_24, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLtHit",773,G__BigBiteDict_402_0_25, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRtHits",894,G__BigBiteDict_402_0_26, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRtHit",779,G__BigBiteDict_402_0_27, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLaHits",869,G__BigBiteDict_402_0_28, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLaHit",754,G__BigBiteDict_402_0_29, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRaHits",875,G__BigBiteDict_402_0_30, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRaHit",760,G__BigBiteDict_402_0_31, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarHitT",942,G__BigBiteDict_402_0_32, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTdcHit), -1, 0, 3, 1, 1, 9, 
"c - - 10 - side U 'THaScintBar' - 50 - ptr "
"i - - 10 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBarHitA",923,G__BigBiteDict_402_0_33, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaAdcHit), -1, 0, 3, 1, 1, 9, 
"c - - 10 - side U 'THaScintBar' - 50 - ptr "
"i - - 10 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNRefCh",822,G__BigBiteDict_402_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_402_0_35, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefCh",744,G__BigBiteDict_402_0_36, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPMT), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AreRefChOkay",1140,G__BigBiteDict_402_0_37, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartHits",1103,G__BigBiteDict_402_0_38, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartHit",988,G__BigBiteDict_402_0_39, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaPartialHit), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchRatioTrack",1793,G__BigBiteDict_402_0_40, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FineMatchingHits",1605,G__BigBiteDict_402_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTable",776,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 6, 1, 2, 0, 
"E - - 0 - file u 'TString' - 10 - tag "
"D - 'Double_t' 0 - value i - 'Int_t' 10 - maxval "
"I - - 0 - first I - - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TimeWalkCorrection",1846,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 2, 0, 
"U 'THaScintPMT' - 0 - pmt d - 'Double_t' 0 - ADC "
"d - 'Double_t' 0 - time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_THaScintPlaneDet), -1, 1, 1, 1, 2, 0, "u 'THaScintPlaneDet' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_402_0_50, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaScintPlaneDet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_402_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlaneDet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_402_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaScintPlaneDet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_402_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaScintPlaneDet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_402_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_402_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlaneDet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_402_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPlaneDet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_402_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaScintPlaneDet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_402_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaScintPlaneDet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaScintPlaneDet", 1673, G__BigBiteDict_402_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBBShowerBlock(void) {
   /* THaBBShowerBlock */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock));
   G__memfunc_setup("THaBBShowerBlock",1508,G__BigBiteDict_404_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaBBShowerBlock",1508,G__BigBiteDict_404_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - ped f - 'Float_t' 0 - gain "
"i - 'Int_t' 0 - row i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BigBiteDict_404_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BigBiteDict_404_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__BigBiteDict_404_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPed",569,G__BigBiteDict_404_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__BigBiteDict_404_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRow",600,G__BigBiteDict_404_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCol",574,G__BigBiteDict_404_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStat",700,G__BigBiteDict_404_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__BigBiteDict_404_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__BigBiteDict_404_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__BigBiteDict_404_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPed",581,G__BigBiteDict_404_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGain",683,G__BigBiteDict_404_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRow",612,G__BigBiteDict_404_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCol",586,G__BigBiteDict_404_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStat",712,G__BigBiteDict_404_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_404_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 0, 1, 1, 1, 0, "U 'THaBBShowerBlock' - 0 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__BigBiteDict_404_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_404_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBBShowerBlock::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_404_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerBlock::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_404_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBBShowerBlock::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_404_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBBShowerBlock::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_404_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_404_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerBlock::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_404_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShowerBlock::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_404_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerBlock::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_404_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShowerBlock::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaBBShowerBlock", 1508, G__BigBiteDict_404_0_33, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 0, 1, 1, 1, 0, "u 'THaBBShowerBlock' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaBBShowerBlock", 1634, G__BigBiteDict_404_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_404_0_35, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 1, 1, 1, 1, 0, "u 'THaBBShowerBlock' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBBShowerCluster(void) {
   /* THaBBShowerCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster));
   G__memfunc_setup("THaBBShowerCluster",1755,G__BigBiteDict_405_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaBBShowerCluster",1755,G__BigBiteDict_405_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nmaxblk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaBBShowerCluster",1755,G__BigBiteDict_405_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nmaxblk U 'THaBBShowerBlock' - 0 - block", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__BigBiteDict_405_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__BigBiteDict_405_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__BigBiteDict_405_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMult",706,G__BigBiteDict_405_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNMaxBlocks",1266,G__BigBiteDict_405_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__BigBiteDict_405_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__BigBiteDict_405_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__BigBiteDict_405_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMult",718,G__BigBiteDict_405_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBlocks",894,G__BigBiteDict_405_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerBlock), -1, 2, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__BigBiteDict_405_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBlock",756,G__BigBiteDict_405_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaBBShowerBlock' - 0 - block", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__BigBiteDict_405_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteArrays",1221,G__BigBiteDict_405_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_405_0_18, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBBShowerCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_405_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_405_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBBShowerCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_405_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBBShowerCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_405_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_405_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_405_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShowerCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_405_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBBShowerCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_405_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBBShowerCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THaBBShowerCluster", 1755, G__BigBiteDict_405_0_30, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 0, 1, 1, 1, 0, "u 'THaBBShowerCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaBBShowerCluster", 1881, G__BigBiteDict_405_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_405_0_32, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaBBShowerCluster), -1, 1, 1, 1, 1, 0, "u 'THaBBShowerCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLWirePlane(void) {
   /* TreeSearch::WirePlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane));
   G__memfunc_setup("WirePlane",903,G__BigBiteDict_507_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"\"' description "
"U 'THaDetectorBase' - 0 '0' parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WirePlane",903,G__BigBiteDict_507_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 0, 0, 1, 1, 0, "", "For ROOT RTTI", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__BigBiteDict_507_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddFitCoord",1059,G__BigBiteDict_507_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::FitCoord' - 11 - coord", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Contains",831,G__BigBiteDict_507_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Contains",831,G__BigBiteDict_507_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TVector2' - 11 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EnableCalibration",1711,G__BigBiteDict_507_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__BigBiteDict_507_0_11, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__BigBiteDict_507_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjection",1341,G__BigBiteDict_507_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPartner",1020,G__BigBiteDict_507_0_14, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPartner",1032,G__BigBiteDict_507_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TreeSearch::WirePlane' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMWDC",587,G__BigBiteDict_507_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMWDC), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResolution",1364,G__BigBiteDict_507_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSlope",1097,G__BigBiteDict_507_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireStart",1221,G__BigBiteDict_507_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireSpacing",1404,G__BigBiteDict_507_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxLRdist",1176,G__BigBiteDict_507_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTTDConv",930,G__BigBiteDict_507_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_507_0_23, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhits",806,G__BigBiteDict_507_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCoords",906,G__BigBiteDict_507_0_25, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TSeqCollection), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNcoords",1016,G__BigBiteDict_507_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneNum",1088,G__BigBiteDict_507_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalibrating",1308,G__BigBiteDict_507_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRequired",1021,G__BigBiteDict_507_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPlaneNum",1100,G__BigBiteDict_507_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetProjection",1353,G__BigBiteDict_507_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TreeSearch::Projection' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRequired",1133,G__BigBiteDict_507_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' enable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCrosstalk",1428,G__BigBiteDict_507_0_33, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_507_0_36, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::WirePlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_507_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::WirePlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_507_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::WirePlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_507_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::WirePlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_507_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_507_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::WirePlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_507_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::WirePlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_507_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::WirePlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_507_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::WirePlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WirePlane", 1029, G__BigBiteDict_507_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLProjection(void) {
   /* TreeSearch::Projection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection));
   G__memfunc_setup("Projection",1053,G__BigBiteDict_508_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 0, 4, 1, 1, 0, 
"i 'TreeSearch::EProjType' - 0 - type C - - 10 - name "
"d - 'Double_t' 0 - angle U 'THaDetectorBase' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Projection",1053,G__BigBiteDict_508_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 0, 0, 1, 1, 0, "", "ROOT RTTI", (void*) NULL, 0);
   G__memfunc_setup("AddPlane",761,G__BigBiteDict_508_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TreeSearch::WirePlane' - 0 - wp U 'TreeSearch::WirePlane' - 0 '0' partner", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__BigBiteDict_508_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,G__BigBiteDict_508_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitLevel2",958,G__BigBiteDict_508_0_7, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__BigBiteDict_508_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillHitpattern",1450,G__BigBiteDict_508_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track",501,G__BigBiteDict_508_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeRoads",887,G__BigBiteDict_508_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__BigBiteDict_508_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAxis",693,G__BigBiteDict_508_0_14, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector2), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinMaxDistB",1333,G__BigBiteDict_508_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinMaxDistF",1337,G__BigBiteDict_508_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChisqLimits",1418,G__BigBiteDict_508_0_17, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlEdoublecOdoublegR), G__defined_typename("TreeSearch::pdbl_t"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfLevel",1182,G__BigBiteDict_508_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosAngle",1068,G__BigBiteDict_508_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitMaxDist",1279,G__BigBiteDict_508_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitpattern",1347,G__BigBiteDict_508_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxSlope",1097,G__BigBiteDict_508_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMinFitPlanes",1482,G__BigBiteDict_508_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNgoodRoads",1296,G__BigBiteDict_508_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNlevels",1017,G__BigBiteDict_508_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpatterns",1247,G__BigBiteDict_508_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNplanes",1009,G__BigBiteDict_508_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNroads",903,G__BigBiteDict_508_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneCombos",1395,G__BigBiteDict_508_0_29, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TBits), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__BigBiteDict_508_0_30, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneZ",874,G__BigBiteDict_508_0_31, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - plane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoad",678,G__BigBiteDict_508_0_32, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSinAngle",1073,G__BigBiteDict_508_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__BigBiteDict_508_0_34, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLEProjType), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__BigBiteDict_508_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZsize",821,G__BigBiteDict_508_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaxSlope",1109,G__BigBiteDict_508_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPatternTree",1434,G__BigBiteDict_508_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TreeSearch::PatternTree' - 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__BigBiteDict_508_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfPlanes",1492,G__BigBiteDict_508_0_40, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), G__defined_typename("vector<TreeSearch::WirePlane*>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitRoads",796,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveDuplicateRoads",2050,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAngle",787,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "d - 'Double_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDBFileName",1191,(G__InterfaceMethod) NULL, 67, -1, -1, 0, 0, 1, 2, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakePrefix",1004,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Projection",1053,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 0, 1, 1, 4, 0, "u 'TreeSearch::Projection' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 1, 1, 1, 4, 1, "u 'TreeSearch::Projection' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_508_0_50, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Projection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_508_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Projection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_508_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Projection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_508_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Projection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_508_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_508_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Projection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_508_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Projection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_508_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Projection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_508_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Projection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Projection", 1179, G__BigBiteDict_508_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLRoad(void) {
   /* TreeSearch::Road */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad));
   G__memfunc_setup("Road",390,G__BigBiteDict_509_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 1, 5, 1, 0, "U 'TreeSearch::Projection' - 10 - proj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Road",390,G__BigBiteDict_509_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 2, 1, 1, 0, 
"u 'pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>' 'TreeSearch::Node_t' 11 - nd U 'TreeSearch::Projection' - 10 - proj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Road",390,G__BigBiteDict_509_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 0, 1, 1, 0, "", "For internal ROOT use", (void*) NULL, 0);
   G__memfunc_setup("Road",390,G__BigBiteDict_509_0_4, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Road' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_509_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Road' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__BigBiteDict_509_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>' 'TreeSearch::Node_t' 11 - nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearGrow",902,G__BigBiteDict_509_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,G__BigBiteDict_509_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__BigBiteDict_509_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__BigBiteDict_509_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_509_0_12, 117, G__get_linked_tagnum(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR), G__defined_typename("TreeSearch::Hset_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPoints",925,G__BigBiteDict_509_0_13, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR), G__defined_typename("TreeSearch::Road::Pvec_t"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__BigBiteDict_509_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__BigBiteDict_509_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosErrsq",1119,G__BigBiteDict_509_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProjection",1341,G__BigBiteDict_509_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlope",803,G__BigBiteDict_509_0_18, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrack",789,G__BigBiteDict_509_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_THaTrack), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasGrown",809,G__BigBiteDict_509_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Include",708,G__BigBiteDict_509_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TreeSearch::Road' - 10 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Intersect",945,G__BigBiteDict_509_0_22, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TVector2), -1, 0, 2, 1, 1, 8, 
"U 'TreeSearch::Road' - 10 - other d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGood",581,G__BigBiteDict_509_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInFrontRange",1385,G__BigBiteDict_509_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsVoid",590,G__BigBiteDict_509_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGrow",715,G__BigBiteDict_509_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrack",801,G__BigBiteDict_509_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'THaTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Void",402,G__BigBiteDict_509_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMatch",971,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess,allocator<TreeSearch::Hit*> >' 'TreeSearch::Hset_t' 11 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CollectCoordinates",1857,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInBackRange",1233,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TreeSearch::NodeDescriptor' - 11 - nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInRange",864,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 8, "u 'TreeSearch::NodeDescriptor' - 11 - nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyPointData",1311,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TreeSearch::Road' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_509_0_36, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Road::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_509_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_509_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Road::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_509_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Road::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_509_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_509_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_509_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_509_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_509_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Road", 516, G__BigBiteDict_509_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR(void) {
   /* vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR));
   G__memfunc_setup("at",213,G__BigBiteDict_522_0_1, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__BigBiteDict_522_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BigBiteDict_522_0_3, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BigBiteDict_522_0_4, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BigBiteDict_522_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BigBiteDict_522_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BigBiteDict_522_0_7, 107, -1, G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BigBiteDict_522_0_8, 107, -1, G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BigBiteDict_522_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BigBiteDict_522_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - sz U 'TreeSearch::WirePlane' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BigBiteDict_522_0_11, 107, -1, G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BigBiteDict_522_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BigBiteDict_522_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BigBiteDict_522_0_14, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), G__defined_typename("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >",6058,G__BigBiteDict_522_0_15, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >",6058,G__BigBiteDict_522_0_16, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n U 'TreeSearch::WirePlane' - 41 '(TreeSearch::WirePlane*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >",6058,G__BigBiteDict_522_0_17, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >",6058,G__BigBiteDict_522_0_18, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator' 10 - first u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_522_0_19, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BigBiteDict_522_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BigBiteDict_522_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BigBiteDict_522_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BigBiteDict_522_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TreeSearch::WirePlane' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BigBiteDict_522_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_522_0_25, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - position U 'TreeSearch::WirePlane' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_522_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - position u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator' 10 - first "
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_522_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - position k - 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::size_type' 0 - n "
"U 'TreeSearch::WirePlane' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BigBiteDict_522_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BigBiteDict_522_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BigBiteDict_522_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - first u 'vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BigBiteDict_522_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >", 6184, G__BigBiteDict_522_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR(void) {
   /* vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR));
   G__memfunc_setup("at",213,G__BigBiteDict_526_0_1, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__BigBiteDict_526_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__BigBiteDict_526_0_3, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__BigBiteDict_526_0_4, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__BigBiteDict_526_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__BigBiteDict_526_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__BigBiteDict_526_0_7, 107, -1, G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__BigBiteDict_526_0_8, 107, -1, G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BigBiteDict_526_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__BigBiteDict_526_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - sz U 'TreeSearch::Projection' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__BigBiteDict_526_0_11, 107, -1, G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__BigBiteDict_526_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BigBiteDict_526_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BigBiteDict_526_0_14, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), G__defined_typename("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >",6358,G__BigBiteDict_526_0_15, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >",6358,G__BigBiteDict_526_0_16, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n U 'TreeSearch::Projection' - 41 '(TreeSearch::Projection*)()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >",6358,G__BigBiteDict_526_0_17, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >",6358,G__BigBiteDict_526_0_18, 105, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator' 10 - first u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_526_0_19, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__BigBiteDict_526_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__BigBiteDict_526_0_21, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__BigBiteDict_526_0_22, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLProjection), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__BigBiteDict_526_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TreeSearch::Projection' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__BigBiteDict_526_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_526_0_25, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - position U 'TreeSearch::Projection' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_526_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - position u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator' 10 - first "
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__BigBiteDict_526_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - position k - 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::size_type' 0 - n "
"U 'TreeSearch::Projection' - 41 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__BigBiteDict_526_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BigBiteDict_526_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__BigBiteDict_526_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - first u 'vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__BigBiteDict_526_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >", 6484, G__BigBiteDict_526_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLTimeToDistConv(void) {
   /* TreeSearch::TimeToDistConv */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv));
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_541_0_1, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 - slope", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetNparam",895,G__BigBiteDict_541_0_2, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__BigBiteDict_541_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,G__BigBiteDict_541_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv), -1, 1, 1, 1, 2, 0, "u 'TreeSearch::TimeToDistConv' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_541_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::TimeToDistConv::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_541_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TimeToDistConv::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_541_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::TimeToDistConv::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_541_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::TimeToDistConv::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_541_0_12, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_541_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_541_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_541_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_541_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TimeToDistConv::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_541_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TimeToDistConv::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_541_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TimeToDistConv::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_541_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TimeToDistConv::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TimeToDistConv", 1530, G__BigBiteDict_541_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLHit(void) {
   /* TreeSearch::Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit));
   G__memfunc_setup("Hit",293,G__BigBiteDict_542_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hit",293,G__BigBiteDict_542_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit), -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - wnum d - 'Double_t' 0 - pos "
"i - 'Int_t' 0 - tdc d - 'Double_t' 0 - time "
"d - 'Double_t' 0 - res U 'TreeSearch::WirePlane' - 0 - wp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,G__BigBiteDict_542_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"U 'TreeSearch::Hit' - 10 - rhs d - 'Double_t' 0 - maxdist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ConvertTimeToDist",1735,G__BigBiteDict_542_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - slope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireNum",999,G__BigBiteDict_542_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWirePos",1001,G__BigBiteDict_542_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__BigBiteDict_542_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawTDC",805,G__BigBiteDict_542_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftTime",1192,G__BigBiteDict_542_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftDist",1197,G__BigBiteDict_542_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosL",670,G__BigBiteDict_542_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosR",676,G__BigBiteDict_542_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResolution",1364,G__BigBiteDict_542_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWirePlane",1191,G__BigBiteDict_542_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLWirePlane), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlaneNum",1088,G__BigBiteDict_542_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_542_0_19, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_542_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_542_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_542_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_542_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_542_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_542_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_542_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_542_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Hit", 293, G__BigBiteDict_542_0_31, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Hit", 419, G__BigBiteDict_542_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_542_0_33, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLFitCoord(void) {
   /* TreeSearch::FitCoord */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord));
   G__memfunc_setup("FitCoord",794,G__BigBiteDict_543_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord), -1, 0, 7, 1, 1, 0, 
"U 'TreeSearch::Hit' - 0 - hit U 'TreeSearch::Road' - 0 - road "
"d - 'Double_t' 0 - pos d - 'Double_t' 0 - trkpos2d "
"d - 'Double_t' 0 - trkslope2d d - 'Double_t' 0 - trkpos "
"d - 'Double_t' 0 - trkslope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FitCoord",794,G__BigBiteDict_543_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord), -1, 0, 0, 1, 1, 0, "", "For ROOT RTTI", (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__BigBiteDict_543_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__BigBiteDict_543_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoad",678,G__BigBiteDict_543_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoad), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__BigBiteDict_543_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftTime",1192,G__BigBiteDict_543_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftDist",1197,G__BigBiteDict_543_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackPos",1095,G__BigBiteDict_543_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackSlope",1304,G__BigBiteDict_543_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackDist",1193,G__BigBiteDict_543_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResidual",1113,G__BigBiteDict_543_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3DTrkPos",1018,G__BigBiteDict_543_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3DTrkSlope",1227,G__BigBiteDict_543_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3DTrkDist",1116,G__BigBiteDict_543_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get3DTrkResid",1215,G__BigBiteDict_543_0_16, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWireNum",999,G__BigBiteDict_543_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_543_0_18, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::FitCoord::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_543_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::FitCoord::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_543_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::FitCoord::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_543_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::FitCoord::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_543_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_543_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::FitCoord::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_543_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::FitCoord::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_543_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::FitCoord::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_543_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::FitCoord::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FitCoord", 794, G__BigBiteDict_543_0_30, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::FitCoord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FitCoord", 920, G__BigBiteDict_543_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_543_0_32, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLFitCoord), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::FitCoord' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLLinearTTD(void) {
   /* TreeSearch::LinearTTD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD));
   G__memfunc_setup("LinearTTD",839,G__BigBiteDict_549_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 - slope", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDriftVel",1088,G__BigBiteDict_549_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_549_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::LinearTTD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_549_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::LinearTTD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_549_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::LinearTTD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_549_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::LinearTTD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_549_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_549_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::LinearTTD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_549_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::LinearTTD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_549_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::LinearTTD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_549_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::LinearTTD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LinearTTD", 839, G__BigBiteDict_549_0_18, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::LinearTTD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LinearTTD", 965, G__BigBiteDict_549_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLTanhFitTTD(void) {
   /* TreeSearch::TanhFitTTD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD));
   G__memfunc_setup("TanhFitTTD",922,G__BigBiteDict_550_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConvertTimeToDist",1735,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - time d - 'Double_t' 0 - slope", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParameter",1217,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParameters",1344,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_550_0_5, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::TanhFitTTD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_550_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TanhFitTTD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_550_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::TanhFitTTD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_550_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::TanhFitTTD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_550_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_550_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TanhFitTTD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_550_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TanhFitTTD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_550_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TanhFitTTD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_550_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TanhFitTTD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TanhFitTTD", 922, G__BigBiteDict_550_0_17, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::TanhFitTTD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TanhFitTTD", 1048, G__BigBiteDict_550_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLMCHit(void) {
   /* TreeSearch::MCHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit));
   G__memfunc_setup("MCHit",437,G__BigBiteDict_555_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCHit",437,G__BigBiteDict_555_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - wnum d - 'Double_t' 0 - pos "
"i - 'Int_t' 0 - tdc d - 'Double_t' 0 - time "
"d - 'Double_t' 0 - res U 'TreeSearch::WirePlane' - 0 - wp "
"U 'TreeSearch::MCTrack' - 0 - mctrk d - 'Double_t' 0 - mcpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrack",933,G__BigBiteDict_555_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCTrack), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCPos",738,G__BigBiteDict_555_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_555_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::MCHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_555_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MCHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_555_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::MCHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_555_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::MCHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_555_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_555_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MCHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_555_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::MCHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_555_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::MCHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_555_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::MCHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCHit", 437, G__BigBiteDict_555_0_18, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::MCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCHit", 563, G__BigBiteDict_555_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_555_0_20, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLMCHit), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::MCHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlETObjectmUcOTObjectmUgR(void) {
   /* pair<TObject*,TObject*> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR));
   G__memfunc_setup("pair<TObject*,TObject*>",2044,G__BigBiteDict_556_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<TObject*,TObject*>",2044,G__BigBiteDict_556_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 41 - a U 'TObject' - 41 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), -1, 1, 1, 1, 4, 0, "u 'pair<TObject*,TObject*>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<TObject*,TObject*>", 2044, G__BigBiteDict_556_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), -1, 0, 1, 1, 1, 0, "u 'pair<TObject*,TObject*>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<TObject*,TObject*>", 2170, G__BigBiteDict_556_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLHitPairIter(void) {
   /* TreeSearch::HitPairIter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter));
   G__memfunc_setup("HitPairIter",1093,G__BigBiteDict_557_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 0, 3, 1, 1, 0, 
"U 'TSeqCollection' - 10 - collA U 'TSeqCollection' - 10 - collB "
"d - 'Double_t' 0 - maxdist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitPairIter",1093,G__BigBiteDict_557_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::HitPairIter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_557_0_3, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::HitPairIter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCollection",1324,G__BigBiteDict_557_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TSeqCollection), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__BigBiteDict_557_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__BigBiteDict_557_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__BigBiteDict_557_0_7, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator++",962,G__BigBiteDict_557_0_8, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 0, 1, 1, 1, 1, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BigBiteDict_557_0_9, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), G__defined_typename("TreeSearch::ObjPair_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator*",918,G__BigBiteDict_557_0_10, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR), G__defined_typename("TreeSearch::ObjPair_t"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__BigBiteDict_557_0_11, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::HitPairIter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__BigBiteDict_557_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::HitPairIter' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator bool",1336,G__BigBiteDict_557_0_13, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!",909,G__BigBiteDict_557_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HitPairIter",1093,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_557_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::HitPairIter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_557_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitPairIter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_557_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::HitPairIter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_557_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::HitPairIter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_557_0_20, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_557_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_557_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_557_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_557_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitPairIter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_557_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::HitPairIter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_557_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitPairIter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_557_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::HitPairIter::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HitPairIter", 1219, G__BigBiteDict_557_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLHitSet(void) {
   /* TreeSearch::HitSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet));
   G__memfunc_setup("HitSet",593,G__BigBiteDict_563_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckMatch",971,G__BigBiteDict_563_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"u 'set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess,allocator<TreeSearch::Hit*> >' 'TreeSearch::Hset_t' 11 - hits U 'TBits' - 10 - bits", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TreeSearch::Hset_t&, const TBits*))(&TreeSearch::HitSet::CheckMatch) ), 0);
   G__memfunc_setup("CheckMatch",971,G__BigBiteDict_563_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TBits' - 10 - bits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchValue",1290,G__BigBiteDict_563_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 1, 3, 1, 0, "u 'set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess,allocator<TreeSearch::Hit*> >' 'TreeSearch::Hset_t' 11 - hits", (char*)NULL, (void*) G__func2void( (UInt_t (*)(const TreeSearch::Hset_t&))(&TreeSearch::HitSet::GetMatchValue) ), 0);
   G__memfunc_setup("IsSimilarTo",1104,G__BigBiteDict_563_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"u 'TreeSearch::HitSet' - 11 - tryset i - 'Int_t' 0 '0' maxdist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_563_0_6, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::HitSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_563_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_563_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::HitSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_563_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::HitSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_563_0_10, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_563_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_563_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_563_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_563_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_563_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::HitSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_563_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::HitSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_563_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::HitSet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HitSet", 593, G__BigBiteDict_563_0_18, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::HitSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitSet", 719, G__BigBiteDict_563_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_563_0_20, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitSet), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::HitSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLNodeDescriptor(void) {
   /* TreeSearch::NodeDescriptor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor));
   G__memfunc_setup("NodeDescriptor",1445,G__BigBiteDict_569_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor), -1, 0, 5, 1, 1, 0, 
"U 'TreeSearch::Link' - 0 - ln U 'TreeSearch::Pattern' - 0 - p "
"r - 'UShort_t' 0 - shft g - 'Bool_t' 0 - mir "
"b - 'UChar_t' 0 - dep", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NodeDescriptor",1445,G__BigBiteDict_569_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Start",526,G__BigBiteDict_569_0_3, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("End",279,G__BigBiteDict_569_0_4, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__BigBiteDict_569_0_5, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__BigBiteDict_569_0_6, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__BigBiteDict_569_0_7, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<=",997,G__BigBiteDict_569_0_8, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__BigBiteDict_569_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>=",999,G__BigBiteDict_569_0_10, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator==",998,G__BigBiteDict_569_0_11, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator!=",970,G__BigBiteDict_569_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("NodeDescriptor", 1445, G__BigBiteDict_569_0_13, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::NodeDescriptor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NodeDescriptor", 1571, G__BigBiteDict_569_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_569_0_15, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::NodeDescriptor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR(void) {
   /* pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR));
   G__memfunc_setup("pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>",4860,G__BigBiteDict_570_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>",4860,G__BigBiteDict_570_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR), -1, 0, 2, 1, 1, 0, 
"u 'TreeSearch::NodeDescriptor' - 11 - a u 'TreeSearch::HitSet' - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR), -1, 1, 1, 1, 4, 0, "u 'pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>", 4860, G__BigBiteDict_570_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR), -1, 0, 1, 1, 1, 0, "u 'pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>", 4986, G__BigBiteDict_570_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLTreeWalk(void) {
   /* TreeSearch::TreeWalk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk));
   G__memfunc_setup("TreeWalk",799,G__BigBiteDict_770_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' nlevels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNlevels",1029,G__BigBiteDict_770_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__BigBiteDict_770_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLNodeVisitorcLcLETreeOp), -1, 0, 6, 1, 1, 8, 
"U 'TreeSearch::Link' - 0 - link u 'TreeSearch::NodeVisitor' - 1 - op "
"U 'TreeSearch::Pattern' - 0 '0' parent h - 'UInt_t' 0 '0' depth "
"h - 'UInt_t' 0 '0' shift g - 'Bool_t' 0 'false' mirrored", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_770_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::TreeWalk::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_770_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TreeWalk::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_770_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::TreeWalk::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_770_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::TreeWalk::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_770_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_770_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_770_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_770_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_770_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TreeWalk::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_770_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TreeWalk::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_770_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::TreeWalk::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_770_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::TreeWalk::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeWalk", 799, G__BigBiteDict_770_0_16, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::TreeWalk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeWalk", 925, G__BigBiteDict_770_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_770_0_18, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::TreeWalk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLBits(void) {
   /* TreeSearch::Bits */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits));
   G__memfunc_setup("Bits",402,G__BigBiteDict_783_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '8' nbits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bits",402,G__BigBiteDict_783_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits), -1, 0, 1, 1, 1, 0, "u 'TBits' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_783_0_3, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits), -1, 1, 1, 1, 1, 0, "u 'TBits' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetBitRange",1295,G__BigBiteDict_783_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - lo h - 'UInt_t' 0 - hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBitRange",1080,G__BigBiteDict_783_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - lo h - 'UInt_t' 0 - hi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastClear",885,G__BigBiteDict_783_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_783_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Bits::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_783_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Bits::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_783_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Bits::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_783_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Bits::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_783_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_783_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Bits::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_783_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Bits::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_783_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Bits::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_783_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Bits::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Bits", 402, G__BigBiteDict_783_0_19, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Bits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Bits", 528, G__BigBiteDict_783_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_783_0_21, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBits), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Bits' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLPatternTree(void) {
   /* TreeSearch::PatternTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree));
   G__memfunc_setup("PatternTree",1134,G__BigBiteDict_784_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 0, 3, 1, 1, 0, 
"u 'TreeSearch::TreeParam_t' - 11 - param h - 'UInt_t' 0 '0' nPatterns "
"h - 'UInt_t' 0 '0' nLinks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__BigBiteDict_784_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 0, 2, 3, 1, 0, 
"C - - 10 - filename u 'TreeSearch::TreeParam_t' - 11 - param", (char*)NULL, (void*) G__func2void( (TreeSearch::PatternTree* (*)(const char*, const TreeSearch::TreeParam_t&))(&TreeSearch::PatternTree::Read) ), 0);
   G__memfunc_setup("Print",525,G__BigBiteDict_784_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Option_t' 10 '\"\"' opt u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__BigBiteDict_784_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOK",342,G__BigBiteDict_784_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNlevels",1017,G__BigBiteDict_784_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNplanes",1009,G__BigBiteDict_784_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__BigBiteDict_784_0_8, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoot",708,G__BigBiteDict_784_0_9, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLLink), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__BigBiteDict_784_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PatternTree",1134,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 0, 1, 1, 4, 0, "u 'TreeSearch::PatternTree' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 1, 1, 1, 4, 1, "u 'TreeSearch::PatternTree' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_784_0_13, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::PatternTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_784_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_784_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::PatternTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_784_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::PatternTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_784_0_17, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_784_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_784_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_784_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_784_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_784_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::PatternTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_784_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_784_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::PatternTree::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PatternTree", 1260, G__BigBiteDict_784_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLHitpattern(void) {
   /* TreeSearch::Hitpattern */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern));
   G__memfunc_setup("Hitpattern",1059,G__BigBiteDict_785_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern), -1, 0, 1, 5, 1, 0, "u 'TreeSearch::PatternTree' - 11 - pt", "preferred constructor", (void*) NULL, 0);
   G__memfunc_setup("Hitpattern",1059,G__BigBiteDict_785_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern), -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - nlevels h - 'UInt_t' 0 - nplanes "
"d - 'Double_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hitpattern",1059,G__BigBiteDict_785_0_3, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Hitpattern' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__BigBiteDict_785_0_4, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLHitpattern), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Hitpattern' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ContainsPattern",1565,G__BigBiteDict_785_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<UInt_t,UInt_t>"), 0, 1, 1, 1, 8, "u 'TreeSearch::NodeDescriptor' - 11 - nd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__BigBiteDict_785_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR), G__defined_typename("vector<TreeSearch::Hit*>"), 1, 2, 1, 1, 9, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNbins",794,G__BigBiteDict_785_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNlevels",1017,G__BigBiteDict_785_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNplanes",1009,G__BigBiteDict_785_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffset",903,G__BigBiteDict_785_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__BigBiteDict_785_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinWidth",1081,G__BigBiteDict_785_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "meters per bin", (void*) NULL, 0);
   G__memfunc_setup("GetBinScale",1057,G__BigBiteDict_785_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "bins per meter", (void*) NULL, 0);
   G__memfunc_setup("IsError",710,G__BigBiteDict_785_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPositionRange",1646,G__BigBiteDict_785_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - start d - 'Double_t' 0 - end "
"h - 'UInt_t' 0 - plane U 'TreeSearch::Hit' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__BigBiteDict_785_0_16, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - pos d - 'Double_t' 0 - res "
"h - 'UInt_t' 0 - plane U 'TreeSearch::Hit' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScanHits",797,G__BigBiteDict_785_0_17, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"U 'TreeSearch::WirePlane' - 0 - A U 'TreeSearch::WirePlane' - 0 - B", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__BigBiteDict_785_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__BigBiteDict_785_0_19, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOffset",915,G__BigBiteDict_785_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - off", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinsSet",984,G__BigBiteDict_785_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNhits",806,G__BigBiteDict_785_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxhitBin",1188,G__BigBiteDict_785_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeIdx",675,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 2, 1, 2, 8, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - bin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"h - 'UInt_t' 0 - plane h - 'UInt_t' 0 - bin "
"U 'TreeSearch::Hit' - 0 - hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "d - 'Double_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_785_0_27, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Hitpattern::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_785_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hitpattern::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_785_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Hitpattern::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_785_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Hitpattern::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_785_0_31, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_785_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_785_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_785_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_785_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hitpattern::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_785_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Hitpattern::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_785_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Hitpattern::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_785_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Hitpattern::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Hitpattern", 1185, G__BigBiteDict_785_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLTreeParam_t(void) {
   /* TreeSearch::TreeParam_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t));
   G__memfunc_setup("TreeParam_t",1108,G__BigBiteDict_800_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t), -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - maxdepth d - 'Double_t' 0 - width "
"d - 'Double_t' 0 - maxslope u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - zpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Normalize",945,G__BigBiteDict_800_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxdepth",859,G__BigBiteDict_800_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("width",544,G__BigBiteDict_800_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxslope",873,G__BigBiteDict_800_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zpos",460,G__BigBiteDict_800_0_6, 117, G__get_linked_tagnum(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TreeParam_t", 1108, G__BigBiteDict_800_0_7, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::TreeParam_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeParam_t", 1234, G__BigBiteDict_800_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_800_0_9, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::TreeParam_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLPatternGenerator(void) {
   /* TreeSearch::PatternGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator));
   G__memfunc_setup("PatternGenerator",1669,G__BigBiteDict_810_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__BigBiteDict_810_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::TreeParam_t' - 0 - parameters", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generate",811,G__BigBiteDict_810_0_3, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternTree), -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - maxdepth d - 'Double_t' 0 - detector_width "
"C - - 10 - zpos d - 'Double_t' 0 - maxslope", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRoot",708,G__BigBiteDict_810_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPattern), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStatistics",1355,G__BigBiteDict_810_0_5, 117, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__BigBiteDict_810_0_6, 121, -1, -1, 0, 2, 1, 1, 8, 
"C - 'Option_t' 10 '\"\"' opt u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHash",653,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLHashNode), -1, 0, 1, 1, 4, 0, "U 'TreeSearch::Pattern' - 0 - pat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcStatistics",1438,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearStatistics",1554,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteTree",995,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Find",385,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLHashNode), -1, 0, 1, 1, 4, 0, "u 'TreeSearch::Pattern' - 11 - pat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hash",388,(G__InterfaceMethod) NULL, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 4, 8, "u 'TreeSearch::Pattern' - 11 - pat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LineTest",808,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 8, "u 'TreeSearch::Pattern' - 11 - pat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeChildNodes",1371,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TreeSearch::PatternGenerator::HashNode' - 0 - parent h - 'UInt_t' 0 - depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SlopeTest",931,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 8, 
"u 'TreeSearch::Pattern' - 11 - pat h - 'UInt_t' 0 - depth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_810_0_16, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::PatternGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_810_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_810_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::PatternGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_810_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::PatternGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_810_0_20, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_810_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_810_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_810_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_810_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_810_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::PatternGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_810_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::PatternGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_810_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::PatternGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PatternGenerator", 1669, G__BigBiteDict_810_0_28, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::PatternGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PatternGenerator", 1795, G__BigBiteDict_810_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_810_0_30, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::PatternGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLPatternGeneratorcLcLStatistics_t(void) {
   /* TreeSearch::PatternGenerator::Statistics_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t));
   // automatic default constructor
   G__memfunc_setup("Statistics_t", 1278, G__BigBiteDict_811_0_1, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Statistics_t", 1278, G__BigBiteDict_811_0_2, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::PatternGenerator::Statistics_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Statistics_t", 1404, G__BigBiteDict_811_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_811_0_4, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::PatternGenerator::Statistics_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLRoadcLcLPoint(void) {
   /* TreeSearch::Road::Point */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint));
   G__memfunc_setup("Point",522,G__BigBiteDict_818_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Point",522,G__BigBiteDict_818_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - _x d - 'Double_t' 0 - _z "
"U 'TreeSearch::Hit' - 0 - _hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("res",330,G__BigBiteDict_818_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_818_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Road::Point::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_818_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Point::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_818_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Road::Point::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_818_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Road::Point::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BigBiteDict_818_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BigBiteDict_818_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BigBiteDict_818_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_818_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_818_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Point::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_818_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::Point::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_818_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Point::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_818_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::Point::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Point", 522, G__BigBiteDict_818_0_16, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Road::Point' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Point", 648, G__BigBiteDict_818_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_818_0_18, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Road::Point' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLRoadcLcLCorners(void) {
   /* TreeSearch::Road::Corners */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners));
   G__memfunc_setup("Corners",732,G__BigBiteDict_827_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners), -1, 0, 1, 5, 1, 0, "U 'TreeSearch::Road' - 0 - rd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Corners",732,G__BigBiteDict_827_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners), -1, 0, 0, 1, 1, 0, "", "For ROOT RTTI", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BigBiteDict_827_0_3, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::Road::Corners::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_827_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Corners::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_827_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::Road::Corners::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_827_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::Road::Corners::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_827_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_827_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Corners::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_827_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::Corners::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_827_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::Road::Corners::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_827_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::Road::Corners::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Corners", 732, G__BigBiteDict_827_0_15, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners), -1, 0, 1, 1, 1, 0, "u 'TreeSearch::Road::Corners' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Corners", 858, G__BigBiteDict_827_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_827_0_17, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners), -1, 1, 1, 1, 1, 0, "u 'TreeSearch::Road::Corners' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTreeSearchcLcLBigBite(void) {
   /* TreeSearch::BigBite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite));
   G__memfunc_setup("BigBite",662,G__BigBiteDict_834_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_TreeSearchcLcLBigBite), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - tracks", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackCalc",872,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_834_0_4, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TreeSearch::BigBite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_834_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::BigBite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_834_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TreeSearch::BigBite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_834_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TreeSearch::BigBite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_834_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_834_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::BigBite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_834_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::BigBite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_834_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TreeSearch::BigBite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_834_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TreeSearch::BigBite::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BigBite", 788, G__BigBiteDict_834_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaHe3SpinModule(void) {
   /* THaHe3SpinModule */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule));
   G__memfunc_setup("THaHe3SpinModule",1501,G__BigBiteDict_902_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule), -1, 0, 0, 1, 1, 0, "", "public for ROOT I/O", (void*) NULL, 0);
   G__memfunc_setup("GetRVarDef",938,G__BigBiteDict_902_0_2, 85, G__get_linked_tagnum(&G__BigBiteDictLN_RVarDef), -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const RVarDef* (*)())(&THaHe3SpinModule::GetRVarDef) ), 0);
   G__memfunc_setup("ClearEvent",1001,G__BigBiteDict_902_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSpinState",1211,G__BigBiteDict_902_0_4, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin), G__defined_typename("THaHe3SpinModule::EHe3Spin"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSpinState",1223,G__BigBiteDict_902_0_5, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin), G__defined_typename("THaHe3SpinModule::EHe3Spin"), 0, 1, 1, 1, 0, "u 'THaHe3SpinModule::EHe3Spin' 'THaHe3SpinModule::EHe3Spin' 0 - state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSpinStateValidity",2049,G__BigBiteDict_902_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSpinStateValidity",2061,G__BigBiteDict_902_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - IsItValid", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("THaHe3SpinModule", 1501, G__BigBiteDict_902_0_8, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule), -1, 0, 1, 1, 1, 0, "u 'THaHe3SpinModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THaHe3SpinModule", 1627, G__BigBiteDict_902_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_902_0_10, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3SpinModule), -1, 1, 1, 1, 1, 0, "u 'THaHe3SpinModule' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaHe3Target(void) {
   /* THaHe3Target */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target));
   G__memfunc_setup("THaHe3Target",1092,G__BigBiteDict_904_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaHe3Target), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 - run", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_904_0_7, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaHe3Target::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_904_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaHe3Target::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_904_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaHe3Target::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_904_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaHe3Target::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_904_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_904_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaHe3Target::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_904_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaHe3Target::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_904_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaHe3Target::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_904_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaHe3Target::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaHe3Target", 1218, G__BigBiteDict_904_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaADCHe3Spin(void) {
   /* THaADCHe3Spin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin));
   G__memfunc_setup("THaADCHe3Spin",1087,G__BigBiteDict_909_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaADCHe3Spin",1087,G__BigBiteDict_909_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3Spin), -1, 0, 0, 1, 1, 0, "", "For ROOT I/O only", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDBFileName",1191,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ADC2Logic",744,G__BigBiteDict_909_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - rawadc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'THaEvData' - 11 - evdata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetData",666,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 2, 0, 
"u 'THaADCHe3Spin::ChanDef_t' - 11 - c u 'THaEvData' - 11 - evdata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_909_0_10, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaADCHe3Spin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_909_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaADCHe3Spin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_909_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaADCHe3Spin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_909_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaADCHe3Spin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_909_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_909_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaADCHe3Spin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_909_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaADCHe3Spin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_909_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaADCHe3Spin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_909_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaADCHe3Spin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaADCHe3Spin", 1213, G__BigBiteDict_909_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaADCHe3SpincLcLADCStateBound(void) {
   /* THaADCHe3Spin::ADCStateBound */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound));
   // automatic default constructor
   G__memfunc_setup("ADCStateBound", 1217, G__BigBiteDict_910_0_1, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ADCStateBound", 1217, G__BigBiteDict_910_0_2, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound), -1, 0, 1, 1, 1, 0, "u 'THaADCHe3Spin::ADCStateBound' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ADCStateBound", 1343, G__BigBiteDict_910_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_910_0_4, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound), -1, 1, 1, 1, 1, 0, "u 'THaADCHe3Spin::ADCStateBound' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaADCHe3SpincLcLChanDef_t(void) {
   /* THaADCHe3Spin::ChanDef_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t));
   // automatic default constructor
   G__memfunc_setup("ChanDef_t", 860, G__BigBiteDict_911_0_1, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ChanDef_t", 860, G__BigBiteDict_911_0_2, (int) ('i'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t), -1, 0, 1, 1, 1, 0, "u 'THaADCHe3Spin::ChanDef_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChanDef_t", 986, G__BigBiteDict_911_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BigBiteDict_911_0_4, (int) ('u'), G__get_linked_tagnum(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t), -1, 1, 1, 1, 1, 0, "u 'THaADCHe3Spin::ChanDef_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTHaBitHe3Spin(void) {
   /* THaBitHe3Spin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin));
   G__memfunc_setup("THaBitHe3Spin",1174,G__BigBiteDict_912_0_1, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - description "
"U 'THaApparatus' - 0 'NULL' a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("THaBitHe3Spin",1174,G__BigBiteDict_912_0_2, 105, G__get_linked_tagnum(&G__BigBiteDictLN_THaBitHe3Spin), -1, 0, 0, 1, 1, 0, "", "For ROOT I/O only", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDBFileName",1191,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'THaEvData' - 11 - evdata", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__BigBiteDict_912_0_8, 85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THaBitHe3Spin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BigBiteDict_912_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBitHe3Spin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BigBiteDict_912_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THaBitHe3Spin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BigBiteDict_912_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THaBitHe3Spin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BigBiteDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BigBiteDict_912_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BigBiteDict_912_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBitHe3Spin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BigBiteDict_912_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBitHe3Spin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BigBiteDict_912_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THaBitHe3Spin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BigBiteDict_912_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THaBitHe3Spin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~THaBitHe3Spin", 1300, G__BigBiteDict_912_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBigBiteDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBigBiteDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBigBiteDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BigBiteDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaRunBase = { "THaRunBase" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_RVarDef = { "RVarDef" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOutput = { "THaOutput" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus = { "THaAnalysisObject::EStatus" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaDetector = { "THaDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaApparatus = { "THaApparatus" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TRotation = { "TRotation" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVertexModule = { "THaVertexModule" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTrack = { "THaTrack" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaSpectrometer = { "THaSpectrometer" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTrackingModule = { "THaTrackingModule" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaPidDetector = { "THaPidDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBenchmark = { "THaBenchmark" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaDetMap = { "THaDetMap" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaDetectorBase = { "THaDetectorBase" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TRef = { "TRef" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOptics = { "THaOptics" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBigBite = { "THaBigBite" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearch = { "TreeSearch" , 110 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLMWDC = { "TreeSearch::MWDC" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTriggerPlane = { "THaTriggerPlane" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBigBiteTpMwdc = { "THaBigBiteTpMwdc" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THashTable = { "THashTable" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_BBdataLoc = { "BBdataLoc" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_BBDecData = { "BBDecData" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR = { "vector<BBdataLoc*,allocator<BBdataLoc*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BBdataLoc*,allocator<BBdataLoc*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR = { "vector<TH1F*,allocator<TH1F*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1F*,allocator<TH1F*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticscLcLTOpticsDir = { "THaOptics::TOpticsDir" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticscLcLTOpticsPos = { "THaOptics::TOpticsPos" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys = { "THaOptics::TOpticsDir::ECoordSys" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsAGen = { "THaOpticsAGen" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsHRS = { "THaOpticsHRS" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags = { "THaOpticsHRS::EFPMatrixElemTags" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsHRScLcLdA = { "THaOpticsHRS::$" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR = { "vector<THaOpticsHRS::THaMatrixElement,allocator<THaOpticsHRS::THaMatrixElement> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THaOpticsHRS::THaMatrixElement,allocator<THaOpticsHRS::THaMatrixElement> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TComplex = { "TComplex" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsAnalytical = { "THaOpticsAnalytical" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaOpticsNoFeild = { "THaOpticsNoFeild" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaSpectrometerDetector = { "THaSpectrometerDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaNonTrackingDetector = { "THaNonTrackingDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintPlane = { "THaScintPlane" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintPMT = { "THaScintPMT" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintHit = { "THaScintHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintBar = { "THaScintBar" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTriggerPlaneHit = { "THaTriggerPlaneHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintBarcLcLEBarType = { "THaScintBar::EBarType" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaSubDetector = { "THaSubDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaAdcHit = { "THaAdcHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTdcHit = { "THaTdcHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaPartialHit = { "THaPartialHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintPlanecLcLESide = { "THaScintPlane::ESide" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTrackingDetector = { "THaTrackingDetector" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCPlane = { "THaMWDCPlane" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCGroup = { "THaMWDCGroup" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCHit = { "THaMWDCHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDC = { "THaMWDC" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR = { "vector<THaMWDCGroup*,allocator<THaMWDCGroup*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THaMWDCGroup*,allocator<THaMWDCGroup*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCcLcLdA = { "THaMWDC::$" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCcLcLETrackingMode = { "THaMWDC::ETrackingMode" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVar = { "THaVar" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCWire = { "THaVDCWire" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCTimeToDistConv = { "THaVDCTimeToDistConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType = { "THaMWDCPlane::EPlaneType" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR = { "vector<THaMWDCHit*,allocator<THaMWDCHit*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THaMWDCHit*,allocator<THaMWDCHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus = { "THaMWDCGroup::EGroupStatus" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode = { "THaMWDCGroup::ETrackingMode" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCHit = { "THaVDCHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCHitcLcLELR = { "THaMWDCHit::ELR" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus = { "THaMWDCHit::EHitStatus" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaMWDCLine = { "THaMWDCLine" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCTableTTDConv = { "THaVDCTableTTDConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDC2DTableTTDConv = { "THaVDC2DTableTTDConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCFuncTTDConv = { "THaVDCFuncTTDConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaVDCLinearTTDConv = { "THaVDCLinearTTDConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBBShower = { "THaBBShower" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBBTotalShower = { "THaBBTotalShower" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaTimingPlane = { "THaTimingPlane" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintPlaneDet = { "THaScintPlaneDet" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaScintPlaneDetcLcLESide = { "THaScintPlaneDet::ESide" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBBShowerBlock = { "THaBBShowerBlock" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBBShowerCluster = { "THaBBShowerCluster" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaDetMapcLcLModule = { "THaDetMap::Module" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLEProjType = { "TreeSearch::EProjType" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR = { "vector<pair<double,double>,allocator<pair<double,double> > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<double,double>,allocator<pair<double,double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLWirePlane = { "TreeSearch::WirePlane" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLProjection = { "TreeSearch::Projection" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLRoad = { "TreeSearch::Road" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLThreadCtrl = { "TreeSearch::ThreadCtrl" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR = { "vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_binary_functionlETreeSearchcLcLRoadmUcOTreeSearchcLcLRoadmUcOboolgR = { "binary_function<TreeSearch::Road*,TreeSearch::Road*,bool>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR = { "set<TreeSearch::Road*,less<TreeSearch::Road*>,allocator<TreeSearch::Road*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR = { "vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator = { "vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR = { "vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator = { "vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA = { "TreeSearch::MWDC::$" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLFitRes_t = { "TreeSearch::MWDC::FitRes_t" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_pairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgR = { "pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > >" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR = { "list<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > >,allocator<pair<double,vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR = { "vector<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >,allocator<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> >,allocator<vector<TreeSearch::Road*,allocator<TreeSearch::Road*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv = { "TreeSearch::TimeToDistConv" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLHit = { "TreeSearch::Hit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLFitCoord = { "TreeSearch::FitCoord" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_binary_functionlETreeSearchcLcLWirePlanemUcOTreeSearchcLcLWirePlanemUcOboolgR = { "binary_function<TreeSearch::WirePlane*,TreeSearch::WirePlane*,bool>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_unary_functionlETreeSearchcLcLWirePlanemUcOboolgR = { "unary_function<TreeSearch::WirePlane*,bool>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLWirePlanecLcLdA = { "TreeSearch::WirePlane::$" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLLinearTTD = { "TreeSearch::LinearTTD" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD = { "TreeSearch::TanhFitTTD" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_binary_functionlETreeSearchcLcLHitmUcOTreeSearchcLcLHitmUcOboolgR = { "binary_function<TreeSearch::Hit*,TreeSearch::Hit*,bool>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLMCTrack = { "TreeSearch::MCTrack" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLMCHit = { "TreeSearch::MCHit" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR = { "pair<TObject*,TObject*>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLHitPairIter = { "TreeSearch::HitPairIter" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR = { "set<TreeSearch::Hit*,TreeSearch::Hit::WireNumLess,allocator<TreeSearch::Hit*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLHitSet = { "TreeSearch::HitSet" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLPattern = { "TreeSearch::Pattern" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLLink = { "TreeSearch::Link" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor = { "TreeSearch::NodeDescriptor" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR = { "pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLNodeVisitor = { "TreeSearch::NodeVisitor" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLNodeVisitorcLcLETreeOp = { "TreeSearch::NodeVisitor::ETreeOp" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLTreeWalk = { "TreeSearch::TreeWalk" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR = { "map<TreeSearch::Pattern*,int,less<TreeSearch::Pattern*>,allocator<pair<TreeSearch::Pattern* const,int> > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLBits = { "TreeSearch::Bits" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLPatternTree = { "TreeSearch::PatternTree" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLHitpattern = { "TreeSearch::Hitpattern" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR = { "vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR = { "vector<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> >,allocator<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> > > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> >,allocator<vector<TreeSearch::Hit*,allocator<TreeSearch::Hit*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLProjectioncLcLdA = { "TreeSearch::Projection::$" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR = { "vector<pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*,allocator<pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*,allocator<pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLTreeParam_t = { "TreeSearch::TreeParam_t" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR = { "vector<TreeSearch::Pattern,allocator<TreeSearch::Pattern> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Pattern,allocator<TreeSearch::Pattern> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR = { "vector<TreeSearch::Link,allocator<TreeSearch::Link> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Link,allocator<TreeSearch::Link> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLPatternGenerator = { "TreeSearch::PatternGenerator" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t = { "TreeSearch::PatternGenerator::Statistics_t" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLHashNode = { "TreeSearch::PatternGenerator::HashNode" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR = { "vector<TreeSearch::PatternGenerator::HashNode,allocator<TreeSearch::PatternGenerator::HashNode> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::PatternGenerator::HashNode,allocator<TreeSearch::PatternGenerator::HashNode> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLBuildInfo_t = { "TreeSearch::BuildInfo_t" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint = { "TreeSearch::Road::Point" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR = { "vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR = { "list<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*,allocator<const pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners = { "TreeSearch::Road::Corners" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR = { "vector<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> >,allocator<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> > > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> >,allocator<vector<TreeSearch::Road::Point*,allocator<TreeSearch::Road::Point*> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_TreeSearchcLcLBigBite = { "TreeSearch::BigBite" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaHe3SpinModule = { "THaHe3SpinModule" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin = { "THaHe3SpinModule::EHe3Spin" , 101 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaHe3Target = { "THaHe3Target" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR = { "vector<THaHe3SpinModule*,allocator<THaHe3SpinModule*> >" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_reverse_iteratorlEvectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<THaHe3SpinModule*,allocator<THaHe3SpinModule*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaADCHe3Spin = { "THaADCHe3Spin" , 99 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound = { "THaADCHe3Spin::ADCStateBound" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t = { "THaADCHe3Spin::ChanDef_t" , 115 , -1 };
G__linked_taginfo G__BigBiteDictLN_THaBitHe3Spin = { "THaBitHe3Spin" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBigBiteDict() {
  G__BigBiteDictLN_TClass.tagnum = -1 ;
  G__BigBiteDictLN_TBuffer.tagnum = -1 ;
  G__BigBiteDictLN_TMemberInspector.tagnum = -1 ;
  G__BigBiteDictLN_TObject.tagnum = -1 ;
  G__BigBiteDictLN_TNamed.tagnum = -1 ;
  G__BigBiteDictLN_TString.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TClonesArray.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaRunBase.tagnum = -1 ;
  G__BigBiteDictLN_TDatime.tagnum = -1 ;
  G__BigBiteDictLN_RVarDef.tagnum = -1 ;
  G__BigBiteDictLN_THaEvData.tagnum = -1 ;
  G__BigBiteDictLN_TVector3.tagnum = -1 ;
  G__BigBiteDictLN_THaOutput.tagnum = -1 ;
  G__BigBiteDictLN_THaAnalysisObject.tagnum = -1 ;
  G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus.tagnum = -1 ;
  G__BigBiteDictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaDetector.tagnum = -1 ;
  G__BigBiteDictLN_THaApparatus.tagnum = -1 ;
  G__BigBiteDictLN_TVector2.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BigBiteDictLN_TRotation.tagnum = -1 ;
  G__BigBiteDictLN_THaVertexModule.tagnum = -1 ;
  G__BigBiteDictLN_THaTrack.tagnum = -1 ;
  G__BigBiteDictLN_THaSpectrometer.tagnum = -1 ;
  G__BigBiteDictLN_THaTrackingModule.tagnum = -1 ;
  G__BigBiteDictLN_TIterator.tagnum = -1 ;
  G__BigBiteDictLN_TSeqCollection.tagnum = -1 ;
  G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BigBiteDictLN_THaPidDetector.tagnum = -1 ;
  G__BigBiteDictLN_TBits.tagnum = -1 ;
  G__BigBiteDictLN_THaBenchmark.tagnum = -1 ;
  G__BigBiteDictLN_THaDetMap.tagnum = -1 ;
  G__BigBiteDictLN_THaDetectorBase.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TRef.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_THaOptics.tagnum = -1 ;
  G__BigBiteDictLN_THaBigBite.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearch.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLMWDC.tagnum = -1 ;
  G__BigBiteDictLN_THaTriggerPlane.tagnum = -1 ;
  G__BigBiteDictLN_THaBigBiteTpMwdc.tagnum = -1 ;
  G__BigBiteDictLN_THashTable.tagnum = -1 ;
  G__BigBiteDictLN_BBdataLoc.tagnum = -1 ;
  G__BigBiteDictLN_BBDecData.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticscLcLTOpticsDir.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticscLcLTOpticsPos.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsAGen.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsHRS.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsHRScLcLdA.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TComplex.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsAnalytical.tagnum = -1 ;
  G__BigBiteDictLN_THaOpticsNoFeild.tagnum = -1 ;
  G__BigBiteDictLN_THaSpectrometerDetector.tagnum = -1 ;
  G__BigBiteDictLN_THaNonTrackingDetector.tagnum = -1 ;
  G__BigBiteDictLN_THaScintPlane.tagnum = -1 ;
  G__BigBiteDictLN_THaScintPMT.tagnum = -1 ;
  G__BigBiteDictLN_THaScintHit.tagnum = -1 ;
  G__BigBiteDictLN_THaScintBar.tagnum = -1 ;
  G__BigBiteDictLN_THaTriggerPlaneHit.tagnum = -1 ;
  G__BigBiteDictLN_THaScintBarcLcLEBarType.tagnum = -1 ;
  G__BigBiteDictLN_THaSubDetector.tagnum = -1 ;
  G__BigBiteDictLN_THaAdcHit.tagnum = -1 ;
  G__BigBiteDictLN_THaTdcHit.tagnum = -1 ;
  G__BigBiteDictLN_THaPartialHit.tagnum = -1 ;
  G__BigBiteDictLN_THaScintPlanecLcLESide.tagnum = -1 ;
  G__BigBiteDictLN_THaTrackingDetector.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCPlane.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCGroup.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCHit.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDC.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCcLcLdA.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCcLcLETrackingMode.tagnum = -1 ;
  G__BigBiteDictLN_THaVar.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCWire.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCTimeToDistConv.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCHit.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCHitcLcLELR.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus.tagnum = -1 ;
  G__BigBiteDictLN_THaMWDCLine.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCTableTTDConv.tagnum = -1 ;
  G__BigBiteDictLN_THaVDC2DTableTTDConv.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCFuncTTDConv.tagnum = -1 ;
  G__BigBiteDictLN_THaVDCLinearTTDConv.tagnum = -1 ;
  G__BigBiteDictLN_THaBBShower.tagnum = -1 ;
  G__BigBiteDictLN_THaBBTotalShower.tagnum = -1 ;
  G__BigBiteDictLN_THaTimingPlane.tagnum = -1 ;
  G__BigBiteDictLN_THaScintPlaneDet.tagnum = -1 ;
  G__BigBiteDictLN_THaScintPlaneDetcLcLESide.tagnum = -1 ;
  G__BigBiteDictLN_THaBBShowerBlock.tagnum = -1 ;
  G__BigBiteDictLN_THaBBShowerCluster.tagnum = -1 ;
  G__BigBiteDictLN_THaDetMapcLcLModule.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLEProjType.tagnum = -1 ;
  G__BigBiteDictLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLWirePlane.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLProjection.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLRoad.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLThreadCtrl.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_binary_functionlETreeSearchcLcLRoadmUcOTreeSearchcLcLRoadmUcOboolgR.tagnum = -1 ;
  G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLFitRes_t.tagnum = -1 ;
  G__BigBiteDictLN_pairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLHit.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLFitCoord.tagnum = -1 ;
  G__BigBiteDictLN_binary_functionlETreeSearchcLcLWirePlanemUcOTreeSearchcLcLWirePlanemUcOboolgR.tagnum = -1 ;
  G__BigBiteDictLN_unary_functionlETreeSearchcLcLWirePlanemUcOboolgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLWirePlanecLcLdA.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLLinearTTD.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD.tagnum = -1 ;
  G__BigBiteDictLN_binary_functionlETreeSearchcLcLHitmUcOTreeSearchcLcLHitmUcOboolgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLMCTrack.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLMCHit.tagnum = -1 ;
  G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLHitPairIter.tagnum = -1 ;
  G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLHitSet.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLPattern.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLLink.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor.tagnum = -1 ;
  G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLNodeVisitor.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLNodeVisitorcLcLETreeOp.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLTreeWalk.tagnum = -1 ;
  G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLBits.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLPatternTree.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLHitpattern.tagnum = -1 ;
  G__BigBiteDictLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLProjectioncLcLdA.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLTreeParam_t.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLPatternGenerator.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLHashNode.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLBuildInfo_t.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners.tagnum = -1 ;
  G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_TreeSearchcLcLBigBite.tagnum = -1 ;
  G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_THaHe3SpinModule.tagnum = -1 ;
  G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin.tagnum = -1 ;
  G__BigBiteDictLN_THaHe3Target.tagnum = -1 ;
  G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR.tagnum = -1 ;
  G__BigBiteDictLN_reverse_iteratorlEvectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BigBiteDictLN_THaADCHe3Spin.tagnum = -1 ;
  G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound.tagnum = -1 ;
  G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t.tagnum = -1 ;
  G__BigBiteDictLN_THaBitHe3Spin.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBigBiteDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TString);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaRunBase);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_RVarDef);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOutput);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaAnalysisObjectcLcLEStatus);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaDetector);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaApparatus);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TVector2);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TRotation);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVertexModule);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTrack);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaSpectrometer);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTrackingModule);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TIterator);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaPidDetector);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TBits);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBenchmark);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaDetMap);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaDetectorBase);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TRef);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOptics),sizeof(THaOptics),-1,324608,"basic class for optics calculation",G__setup_memvarTHaOptics,G__setup_memfuncTHaOptics);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBigBite),sizeof(THaBigBite),-1,324608,"ABC for Hall A BigBite",G__setup_memvarTHaBigBite,G__setup_memfuncTHaBigBite);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearch),0,-1,0,(char*)NULL,G__setup_memvarTreeSearch,G__setup_memfuncTreeSearch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLMWDC),sizeof(TreeSearch::MWDC),-1,324608,"Tree search reconstruction of BigBite MWDCs",G__setup_memvarTreeSearchcLcLMWDC,G__setup_memfuncTreeSearchcLcLMWDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTriggerPlane),sizeof(THaTriggerPlane),-1,326656,"Trigger plane class, consist of dE and E plane",G__setup_memvarTHaTriggerPlane,G__setup_memfuncTHaTriggerPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBigBiteTpMwdc),sizeof(THaBigBiteTpMwdc),-1,324608,"BigBite class for Big Family E04-007 & E05-102",G__setup_memvarTHaBigBiteTpMwdc,G__setup_memfuncTHaBigBiteTpMwdc);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THashTable);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_BBdataLoc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_BBDecData),sizeof(BBDecData),-1,324864,(char*)NULL,G__setup_memvarBBDecData,G__setup_memfuncBBDecData);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEBBdataLocmUcOallocatorlEBBdataLocmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETH1FmUcOallocatorlETH1FmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETH1FmUcOallocatorlETH1FmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticscLcLTOpticsDir),sizeof(THaOptics::TOpticsDir),-1,327168,"direction vector with coordinate info attached   ",G__setup_memvarTHaOpticscLcLTOpticsDir,G__setup_memfuncTHaOpticscLcLTOpticsDir);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticscLcLTOpticsPos),sizeof(THaOptics::TOpticsPos),-1,327168,"position vector with coordinate info attached",G__setup_memvarTHaOpticscLcLTOpticsPos,G__setup_memfuncTHaOpticscLcLTOpticsPos);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticscLcLTOpticsDircLcLECoordSys);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsAGen),sizeof(THaOpticsAGen),-1,324608,"optics class with old AGen algorithm",G__setup_memvarTHaOpticsAGen,G__setup_memfuncTHaOpticsAGen);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsHRS),sizeof(THaOpticsHRS),-1,324608,"optics class with HRS matrix expansion algorithm",G__setup_memvarTHaOpticsHRS,G__setup_memfuncTHaOpticsHRS);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsHRScLcLEFPMatrixElemTags);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsHRScLcLdA);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaOpticsHRScLcLTHaMatrixElementcOallocatorlETHaOpticsHRScLcLTHaMatrixElementgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TComplex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsAnalytical),sizeof(THaOpticsAnalytical),-1,324608,"optics class with analytical calculation",G__setup_memvarTHaOpticsAnalytical,G__setup_memfuncTHaOpticsAnalytical);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaOpticsNoFeild),sizeof(THaOpticsNoFeild),-1,324608,"optics class with analytical calculation",G__setup_memvarTHaOpticsNoFeild,G__setup_memfuncTHaOpticsNoFeild);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaSpectrometerDetector);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaNonTrackingDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintPlane),sizeof(THaScintPlane),-1,326912,"Describes scintillator plane with F1TDC as a subdetector",G__setup_memvarTHaScintPlane,G__setup_memfuncTHaScintPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintPMT),sizeof(THaScintPMT),-1,292096,"Class to represent a PMT on the neutron bars",G__setup_memvarTHaScintPMT,G__setup_memfuncTHaScintPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintHit),sizeof(THaScintHit),-1,324864,"Reconstructed hit-information for a complete hit",G__setup_memvarTHaScintHit,G__setup_memfuncTHaScintHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintBar),sizeof(THaScintBar),-1,292096,"Scintillator bar (PMT pointers/geometry) info.",G__setup_memvarTHaScintBar,G__setup_memfuncTHaScintBar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTriggerPlaneHit),sizeof(THaTriggerPlaneHit),-1,324608,"Describes hits on Trigger Plane",G__setup_memvarTHaTriggerPlaneHit,G__setup_memfuncTHaTriggerPlaneHit);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintBarcLcLEBarType);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaSubDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaAdcHit),sizeof(THaAdcHit),-1,292096,"ADC and calibrated amplitude hit",G__setup_memvarTHaAdcHit,G__setup_memfuncTHaAdcHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTdcHit),sizeof(THaTdcHit),-1,292096,"TDC and real-time for a Hit. Per PMT",G__setup_memvarTHaTdcHit,G__setup_memfuncTHaTdcHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaPartialHit),sizeof(THaPartialHit),-1,292096,"Partial(not complete L/R A/T) scintillator hit",G__setup_memvarTHaPartialHit,G__setup_memfuncTHaPartialHit);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintPlanecLcLESide);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTrackingDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCPlane),sizeof(THaMWDCPlane),-1,324864,"MWDCPlane class",G__setup_memvarTHaMWDCPlane,G__setup_memfuncTHaMWDCPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCGroup),sizeof(THaMWDCGroup),-1,325120,(char*)NULL,G__setup_memvarTHaMWDCGroup,G__setup_memfuncTHaMWDCGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCHit),sizeof(THaMWDCHit),-1,291072,(char*)NULL,G__setup_memvarTHaMWDCHit,G__setup_memfuncTHaMWDCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDC),sizeof(THaMWDC),-1,324608,"AGen MWDC class with old version of tracking code",G__setup_memvarTHaMWDC,G__setup_memfuncTHaMWDC);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCGroupmUcOallocatorlETHaMWDCGroupmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCcLcLdA);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCcLcLETrackingMode);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVar);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCWire);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCTimeToDistConv);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCPlanecLcLEPlaneType);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaMWDCHitmUcOallocatorlETHaMWDCHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCGroupcLcLEGroupStatus);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCGroupcLcLETrackingMode);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCHit);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCHitcLcLELR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCHitcLcLEHitStatus);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaMWDCLine),sizeof(THaMWDCLine),-1,292096,(char*)NULL,G__setup_memvarTHaMWDCLine,G__setup_memfuncTHaMWDCLine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCTableTTDConv),sizeof(THaVDCTableTTDConv),-1,324864,"VDC Table TTD Conv class",G__setup_memvarTHaVDCTableTTDConv,G__setup_memfuncTHaVDCTableTTDConv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDC2DTableTTDConv),sizeof(THaVDC2DTableTTDConv),-1,324864,"VDC 2D Table TTD Conv class",G__setup_memvarTHaVDC2DTableTTDConv,G__setup_memfuncTHaVDC2DTableTTDConv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCFuncTTDConv),sizeof(THaVDCFuncTTDConv),-1,324864,"VDC Func TTD Conv class",G__setup_memvarTHaVDCFuncTTDConv,G__setup_memfuncTHaVDCFuncTTDConv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaVDCLinearTTDConv),sizeof(THaVDCLinearTTDConv),-1,324864,"VDC Linear TTD Conv class",G__setup_memvarTHaVDCLinearTTDConv,G__setup_memfuncTHaVDCLinearTTDConv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBBShower),sizeof(THaBBShower),-1,324608,"Generic shower detector class",G__setup_memvarTHaBBShower,G__setup_memfuncTHaBBShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBBTotalShower),sizeof(THaBBTotalShower),-1,324608,"A total shower detector (shower plus preshower)",G__setup_memvarTHaBBTotalShower,G__setup_memfuncTHaBBTotalShower);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaTimingPlane),sizeof(THaTimingPlane),-1,326656,"Trigger plane class, consist of dE and E plane",G__setup_memvarTHaTimingPlane,G__setup_memfuncTHaTimingPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintPlaneDet),sizeof(THaScintPlaneDet),-1,326912,"Describes scintillator plane with F1TDC as a detector",G__setup_memvarTHaScintPlaneDet,G__setup_memfuncTHaScintPlaneDet);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaScintPlaneDetcLcLESide);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBBShowerBlock),sizeof(THaBBShowerBlock),-1,325888,"Generic shower block class",G__setup_memvarTHaBBShowerBlock,G__setup_memfuncTHaBBShowerBlock);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBBShowerCluster),sizeof(THaBBShowerCluster),-1,324864,"Generic shower cluster class",G__setup_memvarTHaBBShowerCluster,G__setup_memfuncTHaBBShowerCluster);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaDetMapcLcLModule);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLEProjType);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlEdoublecOdoublegRcOallocatorlEpairlEdoublecOdoublegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLWirePlane),sizeof(TreeSearch::WirePlane),-1,324864,"One MWDC wire plane",G__setup_memvarTreeSearchcLcLWirePlane,G__setup_memfuncTreeSearchcLcLWirePlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLProjection),sizeof(TreeSearch::Projection),-1,327424,"A track projection plane",G__setup_memvarTreeSearchcLcLProjection,G__setup_memfuncTreeSearchcLcLProjection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLRoad),sizeof(TreeSearch::Road),-1,327424,"Region containing track candidate hits and fit results",G__setup_memvarTreeSearchcLcLRoad,G__setup_memfuncTreeSearchcLcLRoad);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLThreadCtrl);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLRoadmUcOTreeSearchcLcLRoadmUcOboolgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_setlETreeSearchcLcLRoadmUcOlesslETreeSearchcLcLRoadmUgRcOallocatorlETreeSearchcLcLRoadmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR),sizeof(vector<TreeSearch::WirePlane*,allocator<TreeSearch::WirePlane*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR,G__setup_memfuncvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLWirePlanemUcOallocatorlETreeSearchcLcLWirePlanemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR),sizeof(vector<TreeSearch::Projection*,allocator<TreeSearch::Projection*> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR,G__setup_memfuncvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLProjectionmUcOallocatorlETreeSearchcLcLProjectionmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLdA);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLMWDCcLcLFitRes_t);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_pairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_listlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRcOallocatorlEpairlEdoublecOvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadmUcOallocatorlETreeSearchcLcLRoadmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLTimeToDistConv),sizeof(TreeSearch::TimeToDistConv),-1,265985,"Drift time to diatance converter ABC",G__setup_memvarTreeSearchcLcLTimeToDistConv,G__setup_memfuncTreeSearchcLcLTimeToDistConv);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLHit),sizeof(TreeSearch::Hit),-1,324864,"Horizontal drift chamber hit",G__setup_memvarTreeSearchcLcLHit,G__setup_memfuncTreeSearchcLcLHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLFitCoord),sizeof(TreeSearch::FitCoord),-1,324864,"Coordinate information from road fit",G__setup_memvarTreeSearchcLcLFitCoord,G__setup_memfuncTreeSearchcLcLFitCoord);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLWirePlanemUcOTreeSearchcLcLWirePlanemUcOboolgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_unary_functionlETreeSearchcLcLWirePlanemUcOboolgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLWirePlanecLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLLinearTTD),sizeof(TreeSearch::LinearTTD),-1,263424,"Linear drift time-to-distance converter",G__setup_memvarTreeSearchcLcLLinearTTD,G__setup_memfuncTreeSearchcLcLLinearTTD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLTanhFitTTD),sizeof(TreeSearch::TanhFitTTD),-1,263424,"TanhFit drift time-to-distance converter",G__setup_memvarTreeSearchcLcLTanhFitTTD,G__setup_memfuncTreeSearchcLcLTanhFitTTD);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_binary_functionlETreeSearchcLcLHitmUcOTreeSearchcLcLHitmUcOboolgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLMCTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLMCHit),sizeof(TreeSearch::MCHit),-1,324864,"Monte Carlo hit in horizontal drift chamber",G__setup_memvarTreeSearchcLcLMCHit,G__setup_memfuncTreeSearchcLcLMCHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_pairlETObjectmUcOTObjectmUgR),sizeof(pair<TObject*,TObject*>),-1,297216,(char*)NULL,G__setup_memvarpairlETObjectmUcOTObjectmUgR,G__setup_memfuncpairlETObjectmUcOTObjectmUgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLHitPairIter),sizeof(TreeSearch::HitPairIter),-1,298752,"Iterator over two lists of hits",G__setup_memvarTreeSearchcLcLHitPairIter,G__setup_memfuncTreeSearchcLcLHitPairIter);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_setlETreeSearchcLcLHitmUcOTreeSearchcLcLHitcLcLWireNumLesscOallocatorlETreeSearchcLcLHitmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLHitSet),sizeof(TreeSearch::HitSet),-1,263424,"A set of hits associated with a pattern",G__setup_memvarTreeSearchcLcLHitSet,G__setup_memfuncTreeSearchcLcLHitSet);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLPattern);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLLink);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLNodeDescriptor),sizeof(TreeSearch::NodeDescriptor),-1,296192,(char*)NULL,G__setup_memvarTreeSearchcLcLNodeDescriptor,G__setup_memfuncTreeSearchcLcLNodeDescriptor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_pairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR),sizeof(pair<TreeSearch::NodeDescriptor,TreeSearch::HitSet>),-1,297216,(char*)NULL,G__setup_memvarpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR,G__setup_memfuncpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLNodeVisitor);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLNodeVisitorcLcLETreeOp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLTreeWalk),sizeof(TreeSearch::TreeWalk),-1,263424,"Generic traversal function for a PatternTree",G__setup_memvarTreeSearchcLcLTreeWalk,G__setup_memfuncTreeSearchcLcLTreeWalk);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_maplETreeSearchcLcLPatternmUcOintcOlesslETreeSearchcLcLPatternmUgRcOallocatorlEpairlETreeSearchcLcLPatternmUsPconstcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLBits),sizeof(TreeSearch::Bits),-1,326912,"TBits container with range setting methods",G__setup_memvarTreeSearchcLcLBits,G__setup_memfuncTreeSearchcLcLBits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLPatternTree),sizeof(TreeSearch::PatternTree),-1,298496,"Precomputed template database",G__setup_memvarTreeSearchcLcLPatternTree,G__setup_memfuncTreeSearchcLcLPatternTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLHitpattern),sizeof(TreeSearch::Hitpattern),-1,298496,"Wire chamber hitpattern at multiple resolutions",G__setup_memvarTreeSearchcLcLHitpattern,G__setup_memfuncTreeSearchcLcLHitpattern);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_pairlEunsignedsPintcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLHitmUcOallocatorlETreeSearchcLcLHitmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLProjectioncLcLdA);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLTreeParam_t),sizeof(TreeSearch::TreeParam_t),-1,294912,(char*)NULL,G__setup_memvarTreeSearchcLcLTreeParam_t,G__setup_memfuncTreeSearchcLcLTreeParam_t);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatterncOallocatorlETreeSearchcLcLPatterngRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLLinkcOallocatorlETreeSearchcLcLLinkgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLPatternGenerator),sizeof(TreeSearch::PatternGenerator),-1,263424,"Generator for pattern template database",G__setup_memvarTreeSearchcLcLPatternGenerator,G__setup_memfuncTreeSearchcLcLPatternGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLStatistics_t),sizeof(TreeSearch::PatternGenerator::Statistics_t),-1,262144,(char*)NULL,G__setup_memvarTreeSearchcLcLPatternGeneratorcLcLStatistics_t,G__setup_memfuncTreeSearchcLcLPatternGeneratorcLcLStatistics_t);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLPatternGeneratorcLcLHashNode);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLPatternGeneratorcLcLHashNodecOallocatorlETreeSearchcLcLPatternGeneratorcLcLHashNodegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLBuildInfo_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLPoint),sizeof(TreeSearch::Road::Point),-1,296192,(char*)NULL,G__setup_memvarTreeSearchcLcLRoadcLcLPoint,G__setup_memfuncTreeSearchcLcLRoadcLcLPoint);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_listlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUcOallocatorlEconstsPpairlETreeSearchcLcLNodeDescriptorcOTreeSearchcLcLHitSetgRmUgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLRoadcLcLCorners),sizeof(TreeSearch::Road::Corners),-1,324864,(char*)NULL,G__setup_memvarTreeSearchcLcLRoadcLcLCorners,G__setup_memfuncTreeSearchcLcLRoadcLcLCorners);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRcOallocatorlEvectorlETreeSearchcLcLRoadcLcLPointmUcOallocatorlETreeSearchcLcLRoadcLcLPointmUgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_TreeSearchcLcLBigBite),sizeof(TreeSearch::BigBite),-1,324608,"BigBite spectrometer",G__setup_memvarTreeSearchcLcLBigBite,G__setup_memfuncTreeSearchcLcLBigBite);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaHe3SpinModule),sizeof(THaHe3SpinModule),-1,263424,(char*)NULL,G__setup_memvarTHaHe3SpinModule,G__setup_memfuncTHaHe3SpinModule);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaHe3SpinModulecLcLEHe3Spin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaHe3Target),sizeof(THaHe3Target),-1,324608,"ABC for hall A polarized he3 target",G__setup_memvarTHaHe3Target,G__setup_memfuncTHaHe3Target);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_vectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BigBiteDictLN_reverse_iteratorlEvectorlETHaHe3SpinModulemUcOallocatorlETHaHe3SpinModulemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaADCHe3Spin),sizeof(THaADCHe3Spin),-1,324864,"Beam helicity from ADC (in time))",G__setup_memvarTHaADCHe3Spin,G__setup_memfuncTHaADCHe3Spin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaADCHe3SpincLcLADCStateBound),sizeof(THaADCHe3Spin::ADCStateBound),-1,262144,(char*)NULL,G__setup_memvarTHaADCHe3SpincLcLADCStateBound,G__setup_memfuncTHaADCHe3SpincLcLADCStateBound);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaADCHe3SpincLcLChanDef_t),sizeof(THaADCHe3Spin::ChanDef_t),-1,262144,(char*)NULL,G__setup_memvarTHaADCHe3SpincLcLChanDef_t,G__setup_memfuncTHaADCHe3SpincLcLChanDef_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BigBiteDictLN_THaBitHe3Spin),sizeof(THaBitHe3Spin),-1,324864,"Beam helicity from ADC (in time))",G__setup_memvarTHaBitHe3Spin,G__setup_memfuncTHaBitHe3Spin);
}
extern "C" void G__cpp_setupBigBiteDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBigBiteDict()");
  G__set_cpp_environmentBigBiteDict();
  G__cpp_setup_tagtableBigBiteDict();

  G__cpp_setup_inheritanceBigBiteDict();

  G__cpp_setup_typetableBigBiteDict();

  G__cpp_setup_memvarBigBiteDict();

  G__cpp_setup_memfuncBigBiteDict();
  G__cpp_setup_globalBigBiteDict();
  G__cpp_setup_funcBigBiteDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBigBiteDict();
  return;
}
class G__cpp_setup_initBigBiteDict {
  public:
    G__cpp_setup_initBigBiteDict() { G__add_setup_func("BigBiteDict",(G__incsetup)(&G__cpp_setupBigBiteDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBigBiteDict() { G__remove_setup_func("BigBiteDict"); }
};
G__cpp_setup_initBigBiteDict G__cpp_setup_initializerBigBiteDict;

