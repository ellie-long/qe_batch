//
// File generated by /opt/ROOT/pro/bin/rootcint at Sat Feb 28 21:27:04 2009

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "NormAnaDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void NormAna_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_NormAna(void *p = 0);
   static void *newArray_NormAna(Long_t size, void *p);
   static void delete_NormAna(void *p);
   static void deleteArray_NormAna(void *p);
   static void destruct_NormAna(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::NormAna*)
   {
      ::NormAna *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NormAna >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NormAna", ::NormAna::Class_Version(), "NormAna.h", 145,
                  typeid(::NormAna), DefineBehavior(ptr, ptr),
                  &::NormAna::Dictionary, isa_proxy, 0,
                  sizeof(::NormAna) );
      instance.SetNew(&new_NormAna);
      instance.SetNewArray(&newArray_NormAna);
      instance.SetDelete(&delete_NormAna);
      instance.SetDeleteArray(&deleteArray_NormAna);
      instance.SetDestructor(&destruct_NormAna);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::NormAna*)
   {
      return GenerateInitInstanceLocal((::NormAna*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NormAna*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *NormAna::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NormAna::Class_Name()
{
   return "NormAna";
}

//______________________________________________________________________________
const char *NormAna::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NormAna*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NormAna::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NormAna*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NormAna::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NormAna*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NormAna::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NormAna*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void NormAna::Streamer(TBuffer &R__b)
{
   // Stream an object of class NormAna.

   THaPhysicsModule::Streamer(R__b);
}

//______________________________________________________________________________
void NormAna::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class NormAna.
      TClass *R__cl = ::NormAna::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "bits", &bits);
      bits.ShowMembers(R__insp, strcat(R__parent,"bits.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*myscaler", &myscaler);
      R__insp.Inspect(R__cl, R__parent, "*myhelicity", &myhelicity);
      R__insp.Inspect(R__cl, R__parent, "*normdata", &normdata);
      R__insp.Inspect(R__cl, R__parent, "fRocScaler", (void*)&fRocScaler);
      ::ROOT::GenericShowMembers("vector<BRocScaler*>", (void*)&fRocScaler, R__insp, strcat(R__parent,"fRocScaler."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "fSetPrescale", &fSetPrescale);
      R__insp.Inspect(R__cl, R__parent, "fHelEnable", &fHelEnable);
      R__insp.Inspect(R__cl, R__parent, "fDoBcmCalib", &fDoBcmCalib);
      R__insp.Inspect(R__cl, R__parent, "evtypebits", &evtypebits);
      R__insp.Inspect(R__cl, R__parent, "*tdcdata", &tdcdata);
      R__insp.Inspect(R__cl, R__parent, "*nhit", &nhit);
      R__insp.Inspect(R__cl, R__parent, "alive", &alive);
      R__insp.Inspect(R__cl, R__parent, "hpos_pos_alive", &hpos_pos_alive);
      R__insp.Inspect(R__cl, R__parent, "hpos_neg_alive", &hpos_neg_alive);
      R__insp.Inspect(R__cl, R__parent, "hneg_pos_alive", &hneg_pos_alive);
      R__insp.Inspect(R__cl, R__parent, "hneg_neg_alive", &hneg_neg_alive);
      R__insp.Inspect(R__cl, R__parent, "dlive", &dlive);
      R__insp.Inspect(R__cl, R__parent, "bcmu3", &bcmu3);
      R__insp.Inspect(R__cl, R__parent, "*eventint", &eventint);
      R__insp.Inspect(R__cl, R__parent, "roc11_bcmu3", &roc11_bcmu3);
      R__insp.Inspect(R__cl, R__parent, "roc11_bcmu10", &roc11_bcmu10);
      R__insp.Inspect(R__cl, R__parent, "roc11_t1", &roc11_t1);
      R__insp.Inspect(R__cl, R__parent, "roc11_t2", &roc11_t2);
      R__insp.Inspect(R__cl, R__parent, "roc11_t3", &roc11_t3);
      R__insp.Inspect(R__cl, R__parent, "roc11_t4", &roc11_t4);
      R__insp.Inspect(R__cl, R__parent, "roc11_t5", &roc11_t5);
      R__insp.Inspect(R__cl, R__parent, "roc11_clk1024", &roc11_clk1024);
      R__insp.Inspect(R__cl, R__parent, "roc11_clk104k", &roc11_clk104k);
      R__insp.Inspect(R__cl, R__parent, "*norm_scaler", &norm_scaler);
      R__insp.Inspect(R__cl, R__parent, "*norm_plus_plus", &norm_plus_plus);
      R__insp.Inspect(R__cl, R__parent, "*norm_plus_minus", &norm_plus_minus);
      R__insp.Inspect(R__cl, R__parent, "*norm_minus_plus", &norm_minus_plus);
      R__insp.Inspect(R__cl, R__parent, "*norm_minus_minus", &norm_minus_minus);
      R__insp.Inspect(R__cl, R__parent, "off_u1", &off_u1);
      R__insp.Inspect(R__cl, R__parent, "off_u3", &off_u3);
      R__insp.Inspect(R__cl, R__parent, "off_u10", &off_u10);
      R__insp.Inspect(R__cl, R__parent, "off_d1", &off_d1);
      R__insp.Inspect(R__cl, R__parent, "off_d3", &off_d3);
      R__insp.Inspect(R__cl, R__parent, "off_d10", &off_d10);
      R__insp.Inspect(R__cl, R__parent, "calib_u1", &calib_u1);
      R__insp.Inspect(R__cl, R__parent, "calib_u3", &calib_u3);
      R__insp.Inspect(R__cl, R__parent, "calib_u10", &calib_u10);
      R__insp.Inspect(R__cl, R__parent, "calib_d1", &calib_d1);
      R__insp.Inspect(R__cl, R__parent, "calib_d3", &calib_d3);
      R__insp.Inspect(R__cl, R__parent, "calib_d10", &calib_d10);
      R__insp.Inspect(R__cl, R__parent, "hist", (void*)&hist);
      ::ROOT::GenericShowMembers("vector<TH1*>", (void*)&hist, R__insp, strcat(R__parent,"hist."),false);
      R__parent[R__ncp] = 0;
      THaPhysicsModule::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NormAna(void *p) {
      return  p ? new(p) ::NormAna : new ::NormAna;
   }
   static void *newArray_NormAna(Long_t nElements, void *p) {
      return p ? new(p) ::NormAna[nElements] : new ::NormAna[nElements];
   }
   // Wrapper around operator delete
   static void delete_NormAna(void *p) {
      delete ((::NormAna*)p);
   }
   static void deleteArray_NormAna(void *p) {
      delete [] ((::NormAna*)p);
   }
   static void destruct_NormAna(void *p) {
      typedef ::NormAna current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::NormAna

/********************************************************
* NormAnaDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableNormAnaDict();

extern "C" void G__set_cpp_environmentNormAnaDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("NormAna.h");
  G__cpp_reset_tagtableNormAnaDict();
}
#include <new>
extern "C" int G__cpp_dllrevNormAnaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NormAna */
static int G__NormAnaDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NormAna* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NormAna(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) NormAna(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NormAna(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) NormAna(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NormAna((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) NormAna((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NormAna((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) NormAna((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new NormAna[n];
       } else {
         p = new((void*) gvp) NormAna[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new NormAna;
       } else {
         p = new((void*) gvp) NormAna;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__NormAnaDictLN_NormAna);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NormAna*) G__getstructoffset())->WriteHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NormAna*) G__getstructoffset())->DoBcmCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NormAna*) G__getstructoffset())->SetEventInt((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((NormAna*) G__getstructoffset())->Reconstruct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const NormAna*) G__getstructoffset())->PrintSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NormAna::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NormAna::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NormAna::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NormAna::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NormAna*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NormAna::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NormAna::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NormAna::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NormAnaDict_183_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NormAna::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NormAna G__TNormAna;
static int G__NormAnaDict_183_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NormAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NormAna*) (soff+(sizeof(NormAna)*i)))->~G__TNormAna();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NormAna*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NormAna*) (soff))->~G__TNormAna();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NormAna */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncNormAnaDict {
 public:
  G__Sizep2memfuncNormAnaDict(): p(&G__Sizep2memfuncNormAnaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncNormAnaDict::*p)();
};

size_t G__get_sizep2memfuncNormAnaDict()
{
  G__Sizep2memfuncNormAnaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceNormAnaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna))) {
     NormAna *G__Lderived;
     G__Lderived=(NormAna*)0x1000;
     {
       THaPhysicsModule *G__Lpbase=(THaPhysicsModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna),G__get_linked_tagnum(&G__NormAnaDictLN_THaPhysicsModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna),G__get_linked_tagnum(&G__NormAnaDictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna),G__get_linked_tagnum(&G__NormAnaDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna),G__get_linked_tagnum(&G__NormAnaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableNormAnaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BRocScaler*>",117,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1*>",117,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NormAnaDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NormAna */
static void G__setup_memvarNormAna(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna));
   { NormAna *p; p=(NormAna*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_TBits),-1,-1,4,"bits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_THaScaler),-1,-1,4,"myscaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_THaADCHelicity),-1,-1,4,"myhelicity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_BNormData),-1,-1,4,"normdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR),G__defined_typename("vector<BRocScaler*>"),-1,4,"fRocScaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSetPrescale=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fHelEnable=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoBcmCalib=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"evtypebits=",0,"trigger bit pattern");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"tdcdata=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"nhit=",0,"tdc for trigger bit");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"alive=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"hpos_pos_alive=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"hpos_neg_alive=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"hneg_pos_alive=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"hneg_neg_alive=",0,"scaler livetime");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dlive=",0,"differential livetime (one helicity)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"bcmu3=",0,"a BCM (rate)");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventint=",0,"event intervals for BCM calib");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_bcmu3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_bcmu10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_t1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_t2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_t3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_t4=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_t5=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_clk1024=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"roc11_clk104k=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"norm_scaler=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"norm_plus_plus=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"norm_plus_minus=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"norm_minus_plus=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"norm_minus_minus=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_u1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_u3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_u10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_d1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_d3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"off_d10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_u1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_u3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_u10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_d1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_d3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"calib_d10=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR),G__defined_typename("vector<TH1*>"),-1,4,"hist=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"fgMaxEvInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"fgNumRoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"fgNumChan=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,1,-1,-1,-2,4,"fDEBUG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NormAnaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarNormAnaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNormAna(void) {
   /* NormAna */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna));
   G__memfunc_setup("NormAna",684,G__NormAnaDict_183_0_1, 105, G__get_linked_tagnum(&G__NormAnaDictLN_NormAna), -1, 0, 4, 1, 1, 0, 
"C - - 10 '\"N\"' name C - - 10 '\"Normalizion Analysis\"' description "
"C - - 10 '\"scaler%d.log\"' filename i - 'Int_t' 10 '12' maxt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__NormAnaDictLN_THaAnalysisObjectcLcLEStatus), -1, 0, 1, 1, 1, 0, "u 'TDatime' - 11 - run_time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("End",279,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'THaRunBase' - 0 '0' r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteHist",931,G__NormAnaDict_183_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DoBcmCalib",928,G__NormAnaDict_183_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEventInt",1113,G__NormAnaDict_183_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - ev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,G__NormAnaDict_183_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrintSummary",1275,G__NormAnaDict_183_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrigBits",808,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - helicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LiveTime",799,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAsy",672,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRocScalers",1297,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupRawData",1205,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"U 'TDatime' - 10 '0' runTime i 'THaAnalysisObject::EMode' - 0 'kDefine' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitRocScalers",1413,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BcmCalib",749,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BookHist",803,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__NormAnaDict_183_0_19, 85, G__get_linked_tagnum(&G__NormAnaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&NormAna::Class), 0);
   G__memfunc_setup("Class_Name",982,G__NormAnaDict_183_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NormAna::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__NormAnaDict_183_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&NormAna::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__NormAnaDict_183_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&NormAna::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__NormAnaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__NormAnaDict_183_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__NormAnaDict_183_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NormAna::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__NormAnaDict_183_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&NormAna::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__NormAnaDict_183_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NormAna::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__NormAnaDict_183_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&NormAna::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~NormAna", 810, G__NormAnaDict_183_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncNormAnaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalNormAnaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcNormAnaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__NormAnaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaRunBase = { "THaRunBase" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaAnalysisObjectcLcLEStatus = { "THaAnalysisObject::EStatus" , 101 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaPhysicsModule = { "THaPhysicsModule" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaScaler = { "THaScaler" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_THaADCHelicity = { "THaADCHelicity" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_BNormData = { "BNormData" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_NormAna = { "NormAna" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR = { "vector<BRocScaler*,allocator<BRocScaler*> >" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_reverse_iteratorlEvectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BRocScaler*,allocator<BRocScaler*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR = { "vector<TH1*,allocator<TH1*> >" , 99 , -1 };
G__linked_taginfo G__NormAnaDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1*,allocator<TH1*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableNormAnaDict() {
  G__NormAnaDictLN_TClass.tagnum = -1 ;
  G__NormAnaDictLN_TBuffer.tagnum = -1 ;
  G__NormAnaDictLN_TMemberInspector.tagnum = -1 ;
  G__NormAnaDictLN_TObject.tagnum = -1 ;
  G__NormAnaDictLN_TNamed.tagnum = -1 ;
  G__NormAnaDictLN_THaRunBase.tagnum = -1 ;
  G__NormAnaDictLN_TDatime.tagnum = -1 ;
  G__NormAnaDictLN_THaEvData.tagnum = -1 ;
  G__NormAnaDictLN_THaAnalysisObject.tagnum = -1 ;
  G__NormAnaDictLN_THaAnalysisObjectcLcLEStatus.tagnum = -1 ;
  G__NormAnaDictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__NormAnaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NormAnaDictLN_THaPhysicsModule.tagnum = -1 ;
  G__NormAnaDictLN_TBits.tagnum = -1 ;
  G__NormAnaDictLN_THaScaler.tagnum = -1 ;
  G__NormAnaDictLN_THaADCHelicity.tagnum = -1 ;
  G__NormAnaDictLN_BNormData.tagnum = -1 ;
  G__NormAnaDictLN_NormAna.tagnum = -1 ;
  G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR.tagnum = -1 ;
  G__NormAnaDictLN_reverse_iteratorlEvectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR.tagnum = -1 ;
  G__NormAnaDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableNormAnaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaRunBase);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaAnalysisObjectcLcLEStatus);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaPhysicsModule);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_TBits);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaScaler);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_THaADCHelicity);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_BNormData);
   G__tagtable_setup(G__get_linked_tagnum(&G__NormAnaDictLN_NormAna),sizeof(NormAna),-1,62720,"Normalization analysis utilities",G__setup_memvarNormAna,G__setup_memfuncNormAna);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_vectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_reverse_iteratorlEvectorlEBRocScalermUcOallocatorlEBRocScalermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_vectorlETH1mUcOallocatorlETH1mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__NormAnaDictLN_reverse_iteratorlEvectorlETH1mUcOallocatorlETH1mUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupNormAnaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupNormAnaDict()");
  G__set_cpp_environmentNormAnaDict();
  G__cpp_setup_tagtableNormAnaDict();

  G__cpp_setup_inheritanceNormAnaDict();

  G__cpp_setup_typetableNormAnaDict();

  G__cpp_setup_memvarNormAnaDict();

  G__cpp_setup_memfuncNormAnaDict();
  G__cpp_setup_globalNormAnaDict();
  G__cpp_setup_funcNormAnaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncNormAnaDict();
  return;
}
class G__cpp_setup_initNormAnaDict {
  public:
    G__cpp_setup_initNormAnaDict() { G__add_setup_func("NormAnaDict",(G__incsetup)(&G__cpp_setupNormAnaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initNormAnaDict() { G__remove_setup_func("NormAnaDict"); }
};
G__cpp_setup_initNormAnaDict G__cpp_setup_initializerNormAnaDict;

