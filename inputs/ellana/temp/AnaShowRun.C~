TTimer* tmer = NULL;
void flash()
{
	TCanvas* flashCanvas = new TCanvas("flashCanvas","flashCanvas",0,0,1200,900);
	flashCanvas->Draw();
	if(!tmer) tmer = new TTimer();
	if(tmer){
		tmer->SetCommand("if(gROOT->GetListOfCanvases()->FindObject(\"flashCanvas\")){flashCanvas->SetFillColor(gRandom->Rndm()*100);  flashCanvas->Modified(1); flashCanvas->Update();}");
		tmer->Start(1000);
	}
}

// void LHRS(int runN)
// {
//  replay_LHRS(runN,20000); 
//  online("detectorL",runN);
// flash();
// }

////////////////////////////////
#define REPLAY_EVT_NUM 50000
////////////////////////////////

void BB(int runN)
{
	replay_det_BB(runN,REPLAY_EVT_NUM); 
	online("detectorBB",runN);
	online("cer",runN);
 // online("mwdcBB",runN);
	flash();
}


void phys(int runN)
{
	replay_phys(runN,REPLAY_EVT_NUM); 
	online("physics",runN);
	flash();
}

void LHRS(int runN)
{
	replay_det_L(runN,REPLAY_EVT_NUM);
	online("detectorL",runN);
	online("richL",runN);
	online("pionrejL",runN);
	flash();
}




void show_all(int runN)
{

	online("detectorBB",runN);
	online("detectorL",runN);
	online("pionrejL",runN);
	online("physics",runN);
	online("cer",runN);

	online("richL",runN);
}

void do_all(int runN)
{
	replay_det_BB(runN,REPLAY_EVT_NUM); 
	replay_det_L(runN,REPLAY_EVT_NUM);
	replay_phys(runN,REPLAY_EVT_NUM); 
  //show_simple(runN);
	show_all(runN);
	
	flash();
}

// do_range(startRun,endRun)
// {
//  for(int runN = startRun; runN <= endRun; runN++)
//  {
//    replay_det(runN,REPLAY_EVT_NUM);·
//    replay_phys(runN,REPLAY_EVT_NUM);
//    replay_deadtime(runN,100000);
//   // online("detectorL",runN);
//    online("bigbite",runN);
//    online("physics",runN);
//  }
// flash();
// }


int AnaShowRun(UInt_t myrun/*, UInt_t nevt=-1*/)
{
	do_all(myrun);
  //replay(myrun,nevt);
  //online("replay",myrun);
}
